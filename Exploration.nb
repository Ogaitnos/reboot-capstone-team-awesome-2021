(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1041683,      21780]
NotebookOptionsPosition[   1029550,      21564]
NotebookOutlinePosition[   1029964,      21580]
CellTagsIndexPosition[   1029921,      21577]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Invoice", "Section",
 CellChangeTimes->{{3.8250723109336386`*^9, 
  3.8250723123229246`*^9}},ExpressionUUID->"166081a3-898d-48f8-8ec9-\
d14275219af7"],

Cell[CellGroupData[{

Cell["Getting the data from the invoice.csv file", "Item",
 CellChangeTimes->{{3.825072366946801*^9, 3.8250723872291927`*^9}, {
  3.825290133987069*^9, 
  3.8252901339881053`*^9}},ExpressionUUID->"90aad72d-7fa8-4040-beb3-\
3a96391e4349"],

Cell["We import the Data from the invoice.csv file, ", "Subitem",
 CellChangeTimes->{{3.825072366946801*^9, 3.8250723872291927`*^9}, {
  3.8252901356032395`*^9, 
  3.8252901817551165`*^9}},ExpressionUUID->"911cb87e-2780-4700-8956-\
1c590b927a0e"],

Cell["Take the headers from the first row of the csv file", "Subitem",
 CellChangeTimes->{{3.825072366946801*^9, 3.8250723872291927`*^9}, {
  3.8252901356032395`*^9, 
  3.825290196512183*^9}},ExpressionUUID->"df7cb586-881d-4d26-9743-\
d16851367818"],

Cell["\<\
build a list of associations(Key-Value datastructures) to be fed into a \
Dataset  \
\>", "Subitem",
 CellChangeTimes->{{3.825072366946801*^9, 3.8250723872291927`*^9}, {
  3.8252901356032395`*^9, 3.825290235746242*^9}, {3.82529027968141*^9, 
  3.825290279682411*^9}},ExpressionUUID->"fdb7dd6d-276e-4747-9e62-\
684ec252021f"],

Cell[CellGroupData[{

Cell["Create a Dataset (like dataframe from pandas) invoice", "Subitem",
 CellChangeTimes->{{3.825072366946801*^9, 3.8250723872291927`*^9}, {
   3.8252901356032395`*^9, 3.825290235746242*^9}, 3.825290285818709*^9, {
   3.8252903334597006`*^9, 
   3.8252903347559223`*^9}},ExpressionUUID->"3d761fa2-47d2-4333-9d68-\
ba2454de588e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"csv", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<data_code\>\"", 
       ",", "\"\<invoice.csv\>\""}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"headers", "=", 
   RowBox[{"First", "[", "csv", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"assoc", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Association", "[", 
      RowBox[{"Thread", "[", 
       RowBox[{"headers", "->", "#"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Rest", "[", "csv", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"invoice", "=", 
   RowBox[{"Dataset", "[", "assoc", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.825063781192594*^9, 3.825063888913685*^9}, {
  3.825072319422532*^9, 3.8250723346810265`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"35da75ee-30ae-4ab5-bf63-3c3eb8f86dbc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting the data from the items.csv", "Item",
 CellChangeTimes->{{3.8250724027280827`*^9, 
  3.8250724380187473`*^9}},ExpressionUUID->"358a59a2-7782-4ed8-8ddb-\
f23aa8c8c2ee"],

Cell["We import the Data from the item.csv file, ", "Subitem",
 CellChangeTimes->{{3.825072366946801*^9, 3.8250723872291927`*^9}, {
  3.8252901356032395`*^9, 3.8252901817551165`*^9}, {3.8252903076591144`*^9, 
  3.825290308418965*^9}},ExpressionUUID->"3fc84eae-616b-499d-8d39-\
976ee351acb8"],

Cell["\<\
Take the headers from the first row of the csv file and call it headersItem\
\>", "Subitem",
 CellChangeTimes->{{3.825072366946801*^9, 3.8250723872291927`*^9}, {
  3.8252901356032395`*^9, 3.825290196512183*^9}, {3.825290321302785*^9, 
  3.8252903277736626`*^9}},ExpressionUUID->"8d4a5b06-2c43-4405-9e3c-\
9b537c4ebabe"],

Cell["\<\
build a list of associations(Key-Value datastructures) to be fed into a \
Dataset  \
\>", "Subitem",
 CellChangeTimes->{{3.825072366946801*^9, 3.8250723872291927`*^9}, {
  3.8252901356032395`*^9, 3.825290235746242*^9}, {3.82529027968141*^9, 
  3.825290279682411*^9}},ExpressionUUID->"7133aeb6-a7ee-4545-a8a5-\
0b262d42e1bf"],

Cell[CellGroupData[{

Cell["Create a Dataset (like dataframe from pandas) item", "Subitem",
 CellChangeTimes->{{3.825072366946801*^9, 3.8250723872291927`*^9}, {
   3.8252901356032395`*^9, 3.825290235746242*^9}, 3.825290285818709*^9, {
   3.8252903302087307`*^9, 
   3.8252903311023893`*^9}},ExpressionUUID->"d5fb2925-a0d7-429e-b3fe-\
da377a099967"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"csvItem", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<data_code\>\"", 
       ",", "\"\<item.csv\>\""}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"headersItem", "=", 
   RowBox[{"First", "[", "csvItem", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"assocItem", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Association", "[", 
      RowBox[{"Thread", "[", 
       RowBox[{"headersItem", "->", "#"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Rest", "[", "csvItem", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"item", "=", 
   RowBox[{"Dataset", "[", "assocItem", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8250724805917807`*^9, 3.8250725407643538`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"59df6d1a-6ad7-446b-a2d6-e9ac900af836"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here we look at the lengths of the datasets", "Item",
 CellChangeTimes->{{3.8252903427750397`*^9, 
  3.82529035599469*^9}},ExpressionUUID->"bace92d3-217a-46c0-a4fe-\
aef0c38b3770"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Length", "[", "invoice", "]"}], ",", 
   RowBox[{"Length", "[", "item", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8250645018523264`*^9, 3.8250645074761615`*^9}, {
  3.825072569254572*^9, 3.8250725809767447`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"9c755aed-f708-4d25-9bc6-3fb530e0c998"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"930508", ",", "4166"}], "}"}]], "Output",
 CellChangeTimes->{3.8250645078003316`*^9, 3.8250725812749057`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"88f3e95b-0e7b-4d2f-9e67-5e444a7e2ada"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["and the names of the headers for each", "Item",
 CellChangeTimes->{{3.825290359682845*^9, 
  3.825290366141076*^9}},ExpressionUUID->"ef0a9e1e-b45e-48bd-b50c-\
9c6fca35c908"],

Cell[CellGroupData[{

Cell[BoxData["headers"], "Input",
 CellChangeTimes->{{3.825064540977033*^9, 3.8250645419604335`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"a145a633-4c23-45a5-a623-1df30e29a911"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Invoice_id\"\>", ",", "\<\"Date\"\>", ",", "\<\"Item_id\"\>", 
   ",", "\<\"Vendor_id\"\>", ",", "\<\"Vendor_Name\"\>", 
   ",", "\<\"Store_id\"\>", ",", "\<\"Store_Name\"\>", ",", "\<\"Address\"\>",
    ",", "\<\"City_Name\"\>", ",", "\<\"Zip_Code\"\>", 
   ",", "\<\"County_id\"\>", ",", "\<\"County_Name\"\>", 
   ",", "\<\"Bottles_Sold\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8250645425388975`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"b773c092-ce9e-4655-9a74-b7854990a2ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["headersItem"], "Input",
 CellChangeTimes->{{3.8250725867512155`*^9, 3.8250725892265453`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"9f2caa06-881e-4b09-8fa3-8e9abed8478c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Item_id\"\>", ",", "\<\"Item_Description\"\>", 
   ",", "\<\"Category\"\>", ",", "\<\"Pack\"\>", 
   ",", "\<\"Bottle_Volume_ml\"\>", ",", "\<\"Bottle_Cost\"\>", 
   ",", "\<\"Bottle_Retail_Price\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.825072589733288*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"5ee30ca1-9e74-4433-a270-59ade9e6260b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "we see that they share a Item_Id tag so we would like to merge them into \
one, Using ",
 StyleBox["JoinAccross. ",
  FontWeight->"Bold"],
 " This takes a few seconds."
}], "Item",
 CellChangeTimes->{{3.825290377007781*^9, 3.825290405481661*^9}, {
  3.825290835737866*^9, 3.8252908430518227`*^9}, {3.825291241774167*^9, 
  3.8252912620707264`*^9}},ExpressionUUID->"6feefc90-ceea-496b-a40b-\
7d2020ae310f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"itemInvoice", "=", 
   RowBox[{"JoinAcross", "[", 
    RowBox[{"invoice", ",", "item", ",", "\"\<Item_id\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8252910172593746`*^9, 3.825291056718425*^9}, {
  3.8252911424270067`*^9, 3.8252911461025925`*^9}, {3.825291208182902*^9, 
  3.825291230394429*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"bc46d934-a21d-46fa-9352-46c6ed131a54"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The following is an example on how to add a new column keyed under \
\[OpenCurlyDoubleQuote]Purchase_Cost\[CloseCurlyDoubleQuote] obtained from \
the product of the \
\[OpenCurlyDoubleQuote]Bottles_Sold\[CloseCurlyDoubleQuote] value with the \
\[OpenCurlyDoubleQuote]Bottle_Retail_Price\[CloseCurlyDoubleQuote].\
\>", "Item",
 CellChangeTimes->{{3.8252914552299805`*^9, 
  3.8252915434200583`*^9}},ExpressionUUID->"925a15a4-23e4-4b11-bfc9-\
be657728d3ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomChoice", "[", "itemInvoice", "]"}], "/.", 
  RowBox[{"x_Association", "\[RuleDelayed]", 
   RowBox[{"Association", "[", 
    RowBox[{"x", ",", 
     RowBox[{"\"\<Purchase_Cost\>\"", "\[Rule]", 
      RowBox[{
       RowBox[{"x", "[", "\"\<Bottle_Retail_Price\>\"", "]"}], " ", 
       RowBox[{"x", "[", "\"\<Bottles_Sold\>\"", "]"}]}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.825291274290694*^9, 3.825291286533331*^9}, {
  3.8252913287240915`*^9, 3.8252914273567295`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"c3d4ba26-11b6-4988-88db-59c388aba4a0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Invoice_id" -> "S32149200011", "Date" -> "2016-05-04", "Item_id" -> 
       36904, "Vendor_id" -> 300, "Vendor_Name" -> "Katsuragi Company", 
       "Store_id" -> 5045, "Store_Name" -> "Central Mart / Hamilton Blvd", 
       "Address" -> "800 HAMILTON BLVD", "City_Name" -> "SIOUX CITY", 
       "Zip_Code" -> 51103, "County_id" -> 97, "County_Name" -> "Woodbury", 
       "Bottles_Sold" -> 48, "Item_Description" -> 
       "Hitagi's Gourmet Black Cherry Soda", "Category" -> "Cherry Soda", 
       "Pack" -> 24, "Bottle_Volume_ml" -> 375., "Bottle_Cost" -> 1.75, 
       "Bottle_Retail_Price" -> 2.62, "Purchase_Cost" -> 125.76], 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 20], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 20], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 20, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Invoice_id", 
                  Style[
                  "Invoice_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Invoice_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Invoice_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["S32149200011", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Invoice_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Date", 
                  Style[
                  "Date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Date"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Date"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["2016-05-04", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Item_id", 
                  Style[
                  "Item_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Item_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36904"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Vendor_id", 
                  Style[
                  "Vendor_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Vendor_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Vendor_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["300"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Vendor_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Vendor_Name", 
                  Style[
                  "Vendor_Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Vendor_Name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Vendor_Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Katsuragi Company", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Vendor_Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Store_id", 
                  Style[
                  "Store_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Store_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Store_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5045"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Store_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Store_Name", 
                  Style[
                  "Store_Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Store_Name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Store_Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Central Mart / Hamilton Blvd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Store_Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Address", 
                  Style[
                  "Address", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Address"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Address"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["800 HAMILTON BLVD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Address"]}, "Item", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["City_Name", 
                  Style[
                  "City_Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["City_Name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["City_Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["SIOUX CITY", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["City_Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Zip_Code", 
                  Style[
                  "Zip_Code", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Zip_Code"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Zip_Code"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51103"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Zip_Code"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["County_id", 
                  Style[
                  "County_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["County_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["County_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["County_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["County_Name", 
                  Style[
                  "County_Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["County_Name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["County_Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Woodbury", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["County_Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottles_Sold", 
                  Style[
                  "Bottles_Sold", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bottles_Sold"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottles_Sold"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottles_Sold"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Item_Description", 
                  Style[
                  "Item_Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Item_Description"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_Description"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Hitagi's Gourmet Black Cherry Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{326.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Category", 
                  Style[
                  "Category", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Category"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Category"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Cherry Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Category"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Pack", 
                  Style[
                  "Pack", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Pack"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Pack"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Pack"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Volume_ml", 
                  Style[
                  "Bottle_Volume_ml", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bottle_Volume_ml"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Volume_ml"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["375.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Volume_ml"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Cost", 
                  Style[
                  "Bottle_Cost", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bottle_Cost"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Cost"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.75"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Retail_Price", 
                  Style[
                  "Bottle_Retail_Price", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bottle_Retail_Price"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Retail_Price"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.62"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Retail_Price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Purchase_Cost", 
                  Style[
                  "Purchase_Cost", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Purchase_Cost"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Purchase_Cost"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["125.76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Purchase_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{546., {255., 261.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{546., {255., 261.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.825291287023126*^9, 3.825291432704111*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"ea45514b-f8e7-4a3c-9a06-0e9545cf225b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can do the above to the whole dataset", "Item",
 CellChangeTimes->{{3.8252916328251004`*^9, 
  3.8252916428539853`*^9}},ExpressionUUID->"111d4669-6006-45a4-a5e2-\
cf4658260d75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"withPurchaseCost", "=", 
   RowBox[{"(", 
    RowBox[{"itemInvoice", "/.", 
     RowBox[{"x_Association", "\[RuleDelayed]", 
      RowBox[{"Association", "[", 
       RowBox[{"x", ",", 
        RowBox[{"\"\<Purchase_Cost\>\"", "\[Rule]", 
         RowBox[{
          RowBox[{"x", "[", "\"\<Bottle_Retail_Price\>\"", "]"}], " ", 
          RowBox[{"x", "[", "\"\<Bottles_Sold\>\"", "]"}]}]}]}], "]"}]}]}], 
    ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.825291655304556*^9, 3.825291693718675*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"41b4d4b7-a82f-4d8d-a6fb-51cd06a161f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomChoice", "[", "withPurchaseCost", "]"}]], "Input",
 CellChangeTimes->{{3.825291728980968*^9, 3.8252917519984536`*^9}, {
  3.8253666924954977`*^9, 3.8253667861752005`*^9}, {3.8253668820619383`*^9, 
  3.8253668993371177`*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"796102aa-d8be-4cf7-8483-614289d94bf9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Invoice_id" -> "S32316800007", "Date" -> "2016-05-18", "Item_id" -> 
       10805, "Vendor_id" -> 260, "Vendor_Name" -> "Inuyasha Brands", 
       "Store_id" -> 5086, "Store_Name" -> "Central Mart I, LLC.", "Address" -> 
       "2501, FLOYD BLVD", "City_Name" -> "SIOUX CITY", "Zip_Code" -> 51106, 
       "County_id" -> 97, "County_Name" -> "Woodbury", "Bottles_Sold" -> 24, 
       "Item_Description" -> "Maki's Old Fashioned Cream Soda", "Category" -> 
       "Cream Soda", "Pack" -> 24, "Bottle_Volume_ml" -> 375., "Bottle_Cost" -> 
       2.59, "Bottle_Retail_Price" -> 3.89, "Purchase_Cost" -> 93.36], 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 20], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 20], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 20, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Invoice_id", 
                  Style[
                  "Invoice_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Invoice_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Invoice_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["S32316800007", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Invoice_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Date", 
                  Style[
                  "Date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Date"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Date"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["2016-05-18", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Item_id", 
                  Style[
                  "Item_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Item_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10805"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Vendor_id", 
                  Style[
                  "Vendor_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Vendor_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Vendor_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["260"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Vendor_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Vendor_Name", 
                  Style[
                  "Vendor_Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Vendor_Name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Vendor_Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Inuyasha Brands", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Vendor_Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Store_id", 
                  Style[
                  "Store_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Store_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Store_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5086"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Store_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Store_Name", 
                  Style[
                  "Store_Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Store_Name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Store_Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Central Mart I, LLC.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Store_Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Address", 
                  Style[
                  "Address", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Address"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Address"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["2501, FLOYD BLVD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Address"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["City_Name", 
                  Style[
                  "City_Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["City_Name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["City_Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["SIOUX CITY", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["City_Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Zip_Code", 
                  Style[
                  "Zip_Code", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Zip_Code"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Zip_Code"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51106"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Zip_Code"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["County_id", 
                  Style[
                  "County_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["County_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["County_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["County_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["County_Name", 
                  Style[
                  "County_Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["County_Name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["County_Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Woodbury", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["County_Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottles_Sold", 
                  Style[
                  "Bottles_Sold", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bottles_Sold"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottles_Sold"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottles_Sold"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Item_Description", 
                  Style[
                  "Item_Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Item_Description"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_Description"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Maki's Old Fashioned Cream Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{297.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Category", 
                  Style[
                  "Category", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Category"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Category"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Cream Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Category"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Pack", 
                  Style[
                  "Pack", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Pack"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Pack"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Pack"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Volume_ml", 
                  Style[
                  "Bottle_Volume_ml", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bottle_Volume_ml"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Volume_ml"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["375.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Volume_ml"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Cost", 
                  Style[
                  "Bottle_Cost", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bottle_Cost"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Cost"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Retail_Price", 
                  Style[
                  "Bottle_Retail_Price", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bottle_Retail_Price"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Retail_Price"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.89"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Retail_Price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Purchase_Cost", 
                  Style[
                  "Purchase_Cost", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Purchase_Cost"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Purchase_Cost"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["93.36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Purchase_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{517., {255., 261.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{517., {255., 261.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.82529175235907*^9, {3.8253667212482567`*^9, 3.8253667572771864`*^9}, 
   3.825366787739571*^9, {3.82536684190457*^9, 3.8253668998437653`*^9}},
 CellLabel->
  "Out[162]=",ExpressionUUID->"3b3fe33d-216a-4855-9f1c-dfeeb0ba96d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"withPurchaseCost", "[", 
   RowBox[{"Counts", ",", "\"\<Item_Description\>\""}], "]"}], "[", 
  "\"\<Miku's Leek Juice\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8253474998908725`*^9, 3.825347566168352*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"4036ae25-4512-4ac6-a3c1-a3ce61fbd492"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{{3.8253475283690343`*^9, 3.825347536723421*^9}, 
   3.8253475672779045`*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"35c8425b-4c28-4ba7-9ece-2a18f3ed7f0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "withPurchaseCost", "]"}]], "Input",
 CellChangeTimes->{{3.8253205582891474`*^9, 3.825320563571941*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"59930bde-f18d-48e7-a6a6-f3b53b7bb23e"],

Cell[BoxData["930508"], "Output",
 CellChangeTimes->{3.8253205639150457`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"63ceff68-5368-4dde-bb4b-547d3484c3f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"withPurchaseCost", "[", 
  RowBox[{"Counts", ",", "\"\<Date\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.825346633881241*^9, 3.825346654179371*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"48f876e9-8955-41ba-82b1-42519c2a209c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "2016-10-19" -> 1929, "2016-10-26" -> 1950, "2016-12-14" -> 2379, 
       "2016-06-29" -> 2360, "2016-07-13" -> 1934, "2016-12-21" -> 2335, 
       "2016-10-05" -> 2011, "2016-11-02" -> 2096, "2016-11-07" -> 614, 
       "2016-11-14" -> 540, "2016-11-21" -> 544, "2016-11-23" -> 872, 
       "2016-12-06" -> 199, "2017-02-27" -> 499, "2016-10-06" -> 995, 
       "2016-11-03" -> 550, "2016-11-09" -> 2009, "2016-11-16" -> 2680, 
       "2016-11-17" -> 1066, "2016-11-28" -> 493, "2016-11-30" -> 2107, 
       "2016-12-01" -> 1018, "2016-12-05" -> 284, "2016-12-07" -> 2228, 
       "2016-12-08" -> 742, "2016-12-12" -> 495, "2017-01-04" -> 2040, 
       "2016-06-15" -> 2198, "2016-06-16" -> 596, "2016-07-06" -> 2056, 
       "2016-06-08" -> 2031, "2016-08-03" -> 2066, "2016-08-31" -> 1852, 
       "2017-04-19" -> 2092, "2016-04-20" -> 1946, "2016-08-24" -> 1828, 
       "2016-05-11" -> 2165, "2016-05-12" -> 494, "2017-01-25" -> 1856, 
       "2017-04-26" -> 1695, "2017-05-01" -> 442, "2017-05-24" -> 2099, 
       "2017-08-30" -> 2163, "2017-09-20" -> 1923, "2017-10-25" -> 2089, 
       "2016-10-12" -> 1773, "2016-06-02" -> 570, "2016-07-14" -> 593, 
       "2017-07-24" -> 379, "2017-07-27" -> 550, "2017-08-02" -> 2176, 
       "2017-08-14" -> 320, "2017-08-21" -> 393, "2017-08-23" -> 2053, 
       "2016-04-13" -> 2005, "2016-04-27" -> 1931, "2016-05-04" -> 2299, 
       "2015-12-09" -> 2216, "2015-12-22" -> 2461, "2016-05-18" -> 2067, 
       "2016-05-19" -> 534, "2016-05-25" -> 2147, "2016-06-01" -> 2164, 
       "2016-06-22" -> 2035, "2016-06-23" -> 577, "2016-07-20" -> 1976, 
       "2016-07-27" -> 1954, "2016-08-04" -> 642, "2016-08-11" -> 675, 
       "2016-10-24" -> 495, "2016-11-04" -> 3, "2015-04-15" -> 2004, 
       "2015-05-27" -> 2135, "2015-10-07" -> 2215, "2017-09-06" -> 1938, 
       "2015-11-18" -> 2644, "2015-11-19" -> 606, "2016-01-06" -> 2227, 
       "2016-09-07" -> 2097, "2016-09-15" -> 2514, "2016-09-21" -> 1983, 
       "2016-09-29" -> 601, "2016-12-15" -> 626, "2016-12-22" -> 975, 
       "2016-12-28" -> 2317, "2016-12-29" -> 614, "2017-01-18" -> 1744, 
       "2017-02-09" -> 642, "2017-02-15" -> 1808, "2017-04-05" -> 2257, 
       "2017-04-12" -> 2090, "2017-05-03" -> 2191, "2017-05-11" -> 571, 
       "2017-05-31" -> 2189, "2017-06-08" -> 618, "2017-07-19" -> 1983, 
       "2017-07-20" -> 544, "2017-09-21" -> 653, "2017-09-27" -> 1857, 
       "2017-10-11" -> 2252, "2017-11-02" -> 635, "2017-11-15" -> 2622, 
       "2017-11-29" -> 2309, "2017-12-07" -> 893, "2017-12-20" -> 2405, 
       "2017-12-27" -> 2585, "2017-12-28" -> 780, "2015-12-17" -> 732, 
       "2015-12-30" -> 593, "2016-02-10" -> 2209, "2016-02-17" -> 1948, 
       "2016-04-07" -> 511, "2016-05-26" -> 632, "2016-07-21" -> 499, 
       "2017-03-08" -> 2155, "2017-03-13" -> 485, "2017-03-15" -> 1856, 
       "2017-03-22" -> 2103, "2017-03-23" -> 505, "2017-03-29" -> 1779, 
       "2017-04-10" -> 481, "2017-04-24" -> 405, "2017-05-08" -> 415, 
       "2017-05-10" -> 1944, "2017-05-17" -> 2170, "2017-06-05" -> 525, 
       "2017-06-07" -> 2095, "2017-06-14" -> 2205, "2017-06-21" -> 1854, 
       "2017-06-28" -> 2389, "2017-07-05" -> 2605, "2016-03-16" -> 1989, 
       "2016-03-23" -> 2067, "2016-03-30" -> 1731, "2016-04-06" -> 2179, 
       "2017-10-04" -> 2145, "2017-11-08" -> 2177, "2015-11-23" -> 1725, 
       "2015-11-24" -> 579, "2015-12-29" -> 2290, "2015-12-28" -> 55, 
       "2016-09-28" -> 1449, "2017-02-01" -> 1732, "2017-07-13" -> 607, 
       "2017-09-13" -> 1958, "2017-10-18" -> 2070, "2016-03-02" -> 1870, 
       "2015-10-14" -> 2249, "2015-10-15" -> 504, "2015-10-21" -> 2038, 
       "2015-10-22" -> 491, "2015-10-28" -> 1735, "2015-11-11" -> 1902, 
       "2015-10-29" -> 438, "2015-12-02" -> 2616, "2015-12-16" -> 2506, 
       "2016-01-13" -> 1762, "2015-08-27" -> 548, "2015-11-12" -> 498, 
       "2015-12-14" -> 534, "2015-07-27" -> 451, "2015-07-29" -> 2227, 
       "2015-08-12" -> 1953, "2015-08-26" -> 2106, "2015-09-23" -> 1794, 
       "2015-09-30" -> 2044, "2016-01-27" -> 2116, "2016-01-07" -> 591, 
       "2015-11-04" -> 2273, "2015-12-26" -> 464, "2015-10-01" -> 596, 
       "2015-10-08" -> 580, "2015-05-07" -> 516, "2015-06-03" -> 1936, 
       "2015-06-24" -> 2099, "2014-10-01" -> 2123, "2014-10-15" -> 1713, 
       "2014-10-16" -> 495, "2014-10-22" -> 2004, "2014-07-09" -> 2807, 
       "2014-08-06" -> 2878, "2015-01-21" -> 1835, "2012-03-13" -> 723, 
       "2012-03-29" -> 1099, "2012-05-08" -> 634, "2012-05-31" -> 1429, 
       "2012-06-14" -> 1202, "2012-07-26" -> 1227, "2012-11-15" -> 1387, 
       "2012-11-26" -> 887, "2013-10-23" -> 2120, "2013-11-06" -> 2286, 
       "2013-11-20" -> 2467, "2013-11-25" -> 2118, "2013-12-04" -> 2897, 
       "2013-12-11" -> 2553, "2013-12-18" -> 3021, "2013-12-30" -> 2791, 
       "2012-10-05" -> 231, "2012-10-31" -> 271, "2013-10-11" -> 531, 
       "2013-10-07" -> 375, "2013-10-16" -> 2391, "2013-10-09" -> 2144, 
       "2012-10-04" -> 1348, "2012-10-08" -> 723, "2012-10-18" -> 1271, 
       "2012-11-06" -> 634, "2012-11-07" -> 208, "2012-11-14" -> 231, 
       "2012-11-29" -> 1418, "2012-12-04" -> 634, "2012-12-06" -> 1372, 
       "2012-12-13" -> 1326, "2012-12-17" -> 985, "2012-12-18" -> 871, 
       "2012-12-21" -> 729, "2012-12-26" -> 318, "2012-12-28" -> 995, 
       "2017-11-06" -> 450, "2017-11-13" -> 432, "2017-11-22" -> 1052, 
       "2017-12-06" -> 2246, "2016-10-31" -> 589, "2012-10-11" -> 1251, 
       "2016-02-24" -> 1947, "2016-03-09" -> 2346, "2014-11-12" -> 1894, 
       "2015-03-18" -> 2072, "2017-05-15" -> 465, "2017-09-28" -> 520, 
       "2017-12-13" -> 2440, "2017-12-18" -> 463, "2016-09-08" -> 502, 
       "2017-10-19" -> 553, "2017-10-05" -> 633, "2015-12-03" -> 711, 
       "2015-12-10" -> 607, "2015-06-11" -> 539, "2015-06-17" -> 2284, 
       "2015-07-15" -> 1993, "2015-08-05" -> 1990, "2015-09-09" -> 1865, 
       "2015-12-07" -> 479, "2016-08-17" -> 1950, "2017-12-14" -> 623, 
       "2015-12-23" -> 699, "2016-03-07" -> 531, "2016-03-21" -> 528, 
       "2017-11-09" -> 731, "2017-11-20" -> 412, "2017-04-20" -> 490, 
       "2017-07-12" -> 2258, "2017-07-17" -> 394, "2012-11-08" -> 1307, 
       "2012-12-03" -> 700, "2012-12-10" -> 886, "2012-12-27" -> 1756, 
       "2012-12-31" -> 786, "2014-11-19" -> 2127, "2014-11-20" -> 560, 
       "2016-12-19" -> 693, "2017-01-05" -> 626, "2017-01-26" -> 631, 
       "2017-02-06" -> 446, "2017-08-09" -> 2075, "2016-11-10" -> 748, 
       "2014-12-03" -> 2355, "2014-12-10" -> 2244, "2016-10-13" -> 755, 
       "2015-02-12" -> 530, "2015-03-05" -> 575, "2015-04-01" -> 2018, 
       "2015-04-08" -> 2098, "2015-04-16" -> 516, "2015-05-06" -> 1986, 
       "2015-05-20" -> 2233, "2015-06-10" -> 2033, "2015-08-17" -> 462, 
       "2014-11-05" -> 2091, "2014-11-06" -> 489, "2016-10-03" -> 580, 
       "2017-10-23" -> 453, "2017-11-16" -> 671, "2014-12-17" -> 2548, 
       "2014-08-20" -> 1592, "2016-10-17" -> 511, "2014-11-17" -> 480, 
       "2015-01-05" -> 410, "2015-01-07" -> 2150, "2015-04-30" -> 603, 
       "2016-07-18" -> 450, "2016-08-08" -> 406, "2014-12-11" -> 640, 
       "2014-09-04" -> 532, "2014-09-17" -> 1671, "2014-09-18" -> 476, 
       "2014-12-29" -> 2506, "2014-10-02" -> 563, "2014-10-29" -> 1841, 
       "2014-07-23" -> 2279, "2014-08-13" -> 2283, "2014-08-27" -> 2031, 
       "2014-09-24" -> 1524, "2014-09-29" -> 402, "2012-10-12" -> 124, 
       "2012-10-25" -> 1217, "2015-02-19" -> 771, "2015-03-11" -> 1871, 
       "2014-06-25" -> 2729, "2014-07-30" -> 2659, "2014-06-11" -> 2629, 
       "2014-07-01" -> 2385, "2014-10-08" -> 1919, "2014-11-13" -> 458, 
       "2015-07-30" -> 574, "2014-05-21" -> 2436, "2014-07-28" -> 386, 
       "2015-01-15" -> 480, "2015-01-28" -> 1897, "2014-05-14" -> 2169, 
       "2014-06-18" -> 2504, "2014-05-28" -> 2683, "2015-06-30" -> 1880, 
       "2016-01-04" -> 553, "2016-02-03" -> 2016, "2016-03-03" -> 582, 
       "2017-01-11" -> 1775, "2015-01-14" -> 1061, "2016-01-21" -> 447, 
       "2014-12-22" -> 2131, "2013-09-05" -> 2604, "2013-06-06" -> 1245, 
       "2013-06-13" -> 1154, "2013-07-24" -> 2318, "2013-08-07" -> 2476, 
       "2013-06-04" -> 462, "2013-07-17" -> 2141, "2013-08-21" -> 2367, 
       "2013-12-23" -> 2272, "2014-01-08" -> 2651, "2014-01-15" -> 2277, 
       "2014-01-22" -> 2090, "2014-01-29" -> 2415, "2014-02-05" -> 2341, 
       "2014-09-03" -> 2034, "2013-06-11" -> 586, "2013-10-30" -> 2265, 
       "2013-02-18" -> 871, "2012-10-30" -> 502, "2012-11-13" -> 661, 
       "2013-11-07" -> 167, "2017-10-16" -> 429, "2013-11-13" -> 2540, 
       "2014-07-16" -> 2504, "2012-05-29" -> 755, "2012-06-07" -> 1317, 
       "2012-06-18" -> 797, "2014-03-05" -> 2440, "2015-06-25" -> 629, 
       "2015-03-25" -> 1465, "2016-01-20" -> 1654, "2012-01-30" -> 831, 
       "2012-10-10" -> 286, "2012-10-15" -> 835, "2014-09-23" -> 95, 
       "2012-10-29" -> 838, "2014-11-24" -> 1728, "2015-03-04" -> 2073, 
       "2013-12-02" -> 399, "2015-04-29" -> 2262, "2017-11-30" -> 876, 
       "2012-08-13" -> 875, "2012-09-04" -> 696, "2012-09-11" -> 608, 
       "2013-01-22" -> 662, "2013-01-28" -> 728, "2013-02-05" -> 735, 
       "2013-02-26" -> 680, "2013-04-09" -> 564, "2013-04-23" -> 477, 
       "2013-04-30" -> 690, "2013-05-07" -> 601, "2013-05-16" -> 1307, 
       "2013-05-29" -> 647, "2013-06-03" -> 611, "2013-06-14" -> 527, 
       "2013-06-25" -> 693, "2013-07-02" -> 619, "2013-07-31" -> 2522, 
       "2014-02-19" -> 2471, "2014-03-19" -> 2109, "2014-04-09" -> 2584, 
       "2014-06-04" -> 2317, "2014-12-18" -> 601, "2014-12-23" -> 618, 
       "2012-05-01" -> 694, "2012-11-01" -> 1239, "2017-10-02" -> 390, 
       "2017-10-30" -> 408, "2017-11-01" -> 1952, "2017-12-04" -> 402, 
       "2017-12-11" -> 429, "2017-12-21" -> 743, "2012-10-17" -> 263, 
       "2013-12-10" -> 2, "2014-12-04" -> 606, "2014-12-08" -> 342, 
       "2012-05-03" -> 1264, "2012-06-05" -> 687, "2012-06-21" -> 1216, 
       "2012-06-26" -> 794, "2012-06-28" -> 1694, "2012-07-12" -> 1236, 
       "2012-07-19" -> 1290, "2012-08-09" -> 1165, "2012-08-16" -> 1259, 
       "2012-08-23" -> 1257, "2012-08-30" -> 1549, "2014-09-11" -> 469, 
       "2017-10-26" -> 538, "2013-11-18" -> 321, "2014-12-15" -> 431, 
       "2014-12-19" -> 357, "2012-01-11" -> 207, "2012-01-10" -> 531, 
       "2016-09-01" -> 699, "2016-09-22" -> 600, "2017-01-12" -> 593, 
       "2017-01-19" -> 383, "2017-02-02" -> 486, "2017-02-08" -> 1864, 
       "2017-02-22" -> 1918, "2017-02-23" -> 497, "2017-03-01" -> 1832, 
       "2017-03-02" -> 528, "2017-03-09" -> 486, "2017-03-16" -> 658, 
       "2017-03-30" -> 487, "2017-04-06" -> 482, "2017-04-13" -> 593, 
       "2017-05-04" -> 521, "2017-05-18" -> 515, "2017-05-25" -> 570, 
       "2017-06-01" -> 633, "2017-06-15" -> 1078, "2017-06-29" -> 395, 
       "2017-07-06" -> 601, "2017-07-26" -> 1870, "2017-08-03" -> 504, 
       "2017-08-10" -> 637, "2017-08-16" -> 1883, "2017-08-17" -> 542, 
       "2017-08-31" -> 645, "2017-09-14" -> 453, "2017-10-12" -> 674, 
       "2013-03-11" -> 810, "2013-03-12" -> 599, "2013-03-14" -> 1278, 
       "2013-03-18" -> 739, "2013-03-21" -> 1191, "2013-03-26" -> 579, 
       "2013-03-28" -> 1332, "2013-04-01" -> 761, "2013-04-02" -> 599, 
       "2013-04-04" -> 1295, "2013-04-08" -> 924, "2013-04-15" -> 814, 
       "2013-04-18" -> 1159, "2013-04-25" -> 1186, "2013-05-06" -> 927, 
       "2013-05-09" -> 1244, "2013-05-14" -> 495, "2013-05-20" -> 861, 
       "2013-05-21" -> 549, "2013-05-23" -> 1376, "2013-05-28" -> 752, 
       "2013-06-10" -> 1004, "2013-06-22" -> 21, "2013-06-24" -> 860, 
       "2013-06-27" -> 1555, "2013-07-10" -> 2376, "2013-08-12" -> 386, 
       "2013-08-14" -> 2296, "2013-08-28" -> 2722, "2013-09-09" -> 332, 
       "2013-09-11" -> 2069, "2013-09-18" -> 2354, "2013-09-25" -> 2426, 
       "2013-10-02" -> 2639, "2014-02-12" -> 2512, "2014-02-26" -> 2002, 
       "2014-03-12" -> 2310, "2014-03-26" -> 2030, "2014-04-02" -> 2352, 
       "2014-04-07" -> 334, "2014-04-16" -> 2419, "2014-04-23" -> 2184, 
       "2014-04-28" -> 437, "2014-04-30" -> 2585, "2014-05-07" -> 2446, 
       "2014-08-28" -> 614, "2014-09-10" -> 2015, "2014-12-30" -> 634, 
       "2015-01-08" -> 507, "2015-01-22" -> 447, "2015-01-29" -> 490, 
       "2015-02-04" -> 2102, "2015-02-18" -> 1915, "2015-02-25" -> 1910, 
       "2015-02-26" -> 567, "2015-03-19" -> 527, "2015-03-26" -> 670, 
       "2015-04-02" -> 298, "2015-04-09" -> 391, "2015-04-22" -> 1831, 
       "2015-04-23" -> 486, "2015-05-13" -> 1887, "2015-05-14" -> 598, 
       "2015-05-21" -> 615, "2015-05-28" -> 566, "2015-06-18" -> 646, 
       "2015-06-22" -> 426, "2015-07-01" -> 669, "2015-07-08" -> 2365, 
       "2015-07-09" -> 676, "2015-07-16" -> 507, "2015-07-22" -> 1873, 
       "2015-07-23" -> 556, "2015-08-06" -> 583, "2015-08-13" -> 532, 
       "2015-08-19" -> 2072, "2015-08-20" -> 452, "2015-09-02" -> 2042, 
       "2015-09-03" -> 644, "2015-09-10" -> 545, "2015-09-16" -> 1976, 
       "2015-09-24" -> 538, "2016-02-04" -> 627, "2016-02-11" -> 536, 
       "2016-02-18" -> 526, "2016-02-25" -> 476, "2016-03-17" -> 527, 
       "2016-03-24" -> 490, "2016-03-31" -> 486, "2016-04-21" -> 556, 
       "2016-04-28" -> 590, "2016-05-05" -> 544, "2016-06-30" -> 671, 
       "2016-08-10" -> 1935, "2013-12-16" -> 354, "2013-12-26" -> 230, 
       "2014-01-13" -> 329, "2014-02-17" -> 355, "2014-02-24" -> 368, 
       "2014-06-09" -> 709, "2014-06-27" -> 328, "2014-07-07" -> 325, 
       "2014-09-15" -> 399, "2014-10-13" -> 437, "2014-10-20" -> 363, 
       "2014-12-01" -> 447, "2012-07-10" -> 706, "2016-10-20" -> 600, 
       "2012-10-22" -> 705, "2012-11-16" -> 759, "2012-11-20" -> 1382, 
       "2012-12-20" -> 1673, "2014-10-30" -> 513, "2016-10-27" -> 731, 
       "2012-02-07" -> 677, "2012-02-21" -> 677, "2016-07-11" -> 627, 
       "2015-06-01" -> 576, "2012-02-16" -> 1091, "2012-03-05" -> 710, 
       "2012-03-06" -> 662, "2012-03-08" -> 1386, "2012-05-07" -> 820, 
       "2012-02-15" -> 222, "2013-02-06" -> 196, "2012-03-15" -> 1347, 
       "2012-06-11" -> 654, "2012-08-20" -> 690, "2012-09-20" -> 1110, 
       "2012-01-24" -> 516, "2012-04-10" -> 755, "2012-05-10" -> 1145, 
       "2012-05-24" -> 1294, "2012-07-02" -> 726, "2012-03-01" -> 1158, 
       "2012-03-20" -> 602, "2012-02-09" -> 1210, "2012-02-13" -> 825, 
       "2012-10-01" -> 713, "2016-07-01" -> 370, "2013-08-26" -> 379, 
       "2014-06-02" -> 499, "2013-03-25" -> 894, "2013-03-04" -> 751, 
       "2012-07-24" -> 621, "2012-08-06" -> 687, "2012-09-13" -> 1167, 
       "2012-04-12" -> 1258, "2012-04-30" -> 809, "2012-08-27" -> 768, 
       "2012-09-18" -> 619, "2012-04-03" -> 714, "2012-04-19" -> 1146, 
       "2012-05-21" -> 903, "2012-07-30" -> 806, "2013-12-19" -> 6, 
       "2014-02-03" -> 352, "2014-08-21" -> 856, "2014-09-08" -> 402, 
       "2014-11-25" -> 445, "2012-08-07" -> 654, "2014-03-31" -> 362, 
       "2012-06-19" -> 605, "2012-10-16" -> 682, "2016-10-10" -> 537, 
       "2012-09-27" -> 1197, "2012-10-02" -> 705, "2012-11-12" -> 786, 
       "2012-06-27" -> 446, "2014-12-26" -> 422, "2015-01-12" -> 308, 
       "2015-02-11" -> 2025, "2015-01-26" -> 396, "2012-06-04" -> 941, 
       "2012-09-10" -> 932, "2016-01-28" -> 429, "2015-11-09" -> 534, 
       "2012-01-16" -> 709, "2012-01-19" -> 1016, "2012-02-20" -> 788, 
       "2012-02-27" -> 775, "2012-04-09" -> 811, "2012-05-25" -> 724, 
       "2012-07-16" -> 708, "2012-09-24" -> 665, "2012-11-05" -> 709, 
       "2012-11-17" -> 588, "2012-12-24" -> 750, "2013-01-07" -> 938, 
       "2013-01-08" -> 672, "2013-01-14" -> 700, "2013-01-21" -> 753, 
       "2013-02-12" -> 633, "2013-05-13" -> 828, "2013-07-01" -> 965, 
       "2013-09-23" -> 315, "2013-05-15" -> 194, "2013-09-03" -> 412, 
       "2017-09-07" -> 497, "2012-01-09" -> 856, "2012-01-12" -> 859, 
       "2012-01-26" -> 925, "2012-02-23" -> 1149, "2012-03-19" -> 781, 
       "2012-03-22" -> 1220, "2012-03-27" -> 556, "2012-04-02" -> 810, 
       "2012-04-23" -> 672, "2012-06-25" -> 753, "2012-07-17" -> 662, 
       "2012-08-14" -> 614, "2012-09-06" -> 1327, "2012-09-25" -> 528, 
       "2012-10-23" -> 631, "2012-11-19" -> 172, "2012-12-11" -> 754, 
       "2013-01-29" -> 629, "2013-02-04" -> 701, "2013-02-19" -> 647, 
       "2013-02-21" -> 1266, "2013-02-25" -> 652, "2013-03-05" -> 649, 
       "2013-04-11" -> 1281, "2013-06-18" -> 1127, "2016-01-14" -> 436, 
       "2016-04-14" -> 474, "2016-06-09" -> 537, "2016-07-07" -> 544, 
       "2016-07-28" -> 609, "2012-04-24" -> 562, "2012-06-12" -> 615, 
       "2013-02-11" -> 730, "2013-05-02" -> 1327, "2015-02-05" -> 449, 
       "2017-06-22" -> 586, "2014-10-09" -> 473, "2017-02-16" -> 590, 
       "2017-04-27" -> 567, "2017-08-24" -> 578, "2012-01-03" -> 625, 
       "2012-01-17" -> 623, "2012-02-14" -> 627, "2012-02-22" -> 201, 
       "2012-03-21" -> 229, "2012-04-16" -> 902, "2012-05-15" -> 614, 
       "2012-05-30" -> 280, "2012-07-31" -> 788, "2012-08-28" -> 651, 
       "2012-08-31" -> 495, "2012-09-05" -> 266, "2012-11-28" -> 220, 
       "2013-01-03" -> 1155, "2013-01-24" -> 1044, "2013-02-28" -> 1212, 
       "2013-04-10" -> 226, "2013-04-16" -> 515, "2013-04-22" -> 824, 
       "2013-06-15" -> 342, "2013-07-16" -> 484, "2014-09-25" -> 505, 
       "2015-11-05" -> 580, "2016-03-10" -> 601, "2016-08-25" -> 552, 
       "2017-10-09" -> 675, "2012-04-26" -> 1142, "2013-02-07" -> 1284, 
       "2013-07-04" -> 1426, "2017-09-25" -> 348, "2012-02-08" -> 197, 
       "2012-03-07" -> 250, "2012-03-26" -> 759, "2012-05-17" -> 1201, 
       "2012-08-01" -> 301, "2012-08-29" -> 297, "2012-09-17" -> 752, 
       "2016-09-26" -> 498, "2017-09-18" -> 371, "2017-11-27" -> 436, 
       "2017-12-22" -> 555, "2013-11-04" -> 427, "2013-12-27" -> 329, 
       "2014-05-12" -> 356, "2015-03-09" -> 431, "2015-09-04" -> 179, 
       "2016-01-11" -> 435, "2016-05-02" -> 473, "2016-05-23" -> 559, 
       "2017-05-22" -> 427, "2017-07-10" -> 463, "2016-07-25" -> 519, 
       "2016-09-12" -> 707, "2016-09-30" -> 82, "2016-12-26" -> 628, 
       "2017-05-26" -> 211, "2012-02-06" -> 773, "2012-03-12" -> 993, 
       "2012-04-17" -> 553, "2012-05-14" -> 813, "2012-07-03" -> 576, 
       "2012-07-09" -> 763, "2012-08-21" -> 613, "2012-10-09" -> 693, 
       "2012-11-27" -> 725, "2013-01-15" -> 545, "2013-01-17" -> 1159, 
       "2013-03-19" -> 534, "2013-08-05" -> 309, "2014-02-20" -> 123, 
       "2014-04-14" -> 404, "2014-05-06" -> 108, "2014-05-05" -> 288, 
       "2014-08-11" -> 352, "2014-08-25" -> 397, "2014-10-06" -> 353, 
       "2014-11-03" -> 380, "2015-02-02" -> 362, "2015-02-09" -> 436, 
       "2015-02-16" -> 420, "2015-03-16" -> 481, "2015-03-30" -> 379, 
       "2015-04-06" -> 658, "2015-05-04" -> 387, "2015-05-11" -> 451, 
       "2015-09-14" -> 513, "2015-09-28" -> 390, "2015-10-12" -> 328, 
       "2015-11-02" -> 403, "2015-11-20" -> 160, "2015-11-30" -> 624, 
       "2016-01-25" -> 696, "2016-02-01" -> 491, "2016-02-08" -> 504, 
       "2016-02-22" -> 541, "2016-03-28" -> 596, "2016-04-11" -> 466, 
       "2016-05-09" -> 439, "2016-07-15" -> 75, "2016-08-18" -> 626, 
       "2016-08-15" -> 512, "2012-07-23" -> 603, "2016-11-22" -> 83, 
       "2012-01-25" -> 172, "2012-03-14" -> 208, "2012-04-11" -> 232, 
       "2012-05-09" -> 217, "2012-06-20" -> 215, "2012-07-06" -> 1348, 
       "2012-08-02" -> 1278, "2012-09-26" -> 188, "2012-12-05" -> 220, 
       "2012-12-19" -> 317, "2013-01-16" -> 219, "2013-02-20" -> 189, 
       "2013-03-06" -> 229, "2013-03-07" -> 1324, "2013-03-27" -> 271, 
       "2013-05-31" -> 1230, "2013-06-26" -> 271, "2013-10-10" -> 41, 
       "2013-10-14" -> 364, "2014-03-18" -> 490, "2014-10-23" -> 559, 
       "2015-03-23" -> 436, "2015-09-21" -> 422, "2016-02-29" -> 508, 
       "2012-01-18" -> 131, "2012-02-29" -> 158, "2012-03-28" -> 196, 
       "2012-07-05" -> 227, "2012-07-25" -> 205, "2012-08-15" -> 236, 
       "2012-09-19" -> 233, "2012-12-12" -> 256, "2013-01-02" -> 179, 
       "2013-01-10" -> 1078, "2013-04-29" -> 881, "2013-05-22" -> 230, 
       "2012-01-31" -> 616, "2014-05-19" -> 351, "2012-01-23" -> 707, 
       "2012-05-02" -> 195, "2012-05-22" -> 612, "2013-01-31" -> 1065, 
       "2012-05-23" -> 284, "2013-02-13" -> 295, "2015-06-04" -> 531, 
       "2012-06-13" -> 256, "2012-09-12" -> 231, "2012-01-05" -> 971, 
       "2015-03-12" -> 546, "2016-06-20" -> 411, "2016-09-19" -> 395, 
       "2017-02-13" -> 403, "2017-06-12" -> 422, "2017-06-30" -> 297, 
       "2012-05-16" -> 217, "2012-10-03" -> 244, "2013-01-09" -> 125, 
       "2013-01-23" -> 179, "2013-02-14" -> 1246, "2013-03-13" -> 204, 
       "2013-04-17" -> 219, "2013-05-08" -> 246, "2013-05-30" -> 234, 
       "2013-06-12" -> 247, "2013-06-17" -> 236, "2015-01-13" -> 642, 
       "2015-09-17" -> 420, "2012-02-01" -> 191, "2012-02-28" -> 539, 
       "2012-04-18" -> 192, "2012-06-06" -> 206, "2012-07-11" -> 239, 
       "2012-07-18" -> 162, "2012-10-24" -> 231, "2013-03-20" -> 214, 
       "2013-06-05" -> 233, "2013-07-03" -> 224, "2017-06-19" -> 384, 
       "2012-04-05" -> 1196, "2013-04-24" -> 201, "2015-02-23" -> 459, 
       "2015-08-10" -> 419, "2012-02-02" -> 973, "2012-04-04" -> 227, 
       "2012-04-25" -> 187, "2014-06-16" -> 500, "2014-01-06" -> 448, 
       "2013-12-09" -> 370, "2015-04-13" -> 359, "2015-04-20" -> 426, 
       "2016-04-26" -> 20, "2016-08-02" -> 12, "2012-08-08" -> 192, 
       "2012-01-04" -> 169, "2013-04-03" -> 240, "2014-05-15" -> 41, 
       "2016-06-06" -> 644, "2016-06-13" -> 506, "2015-08-24" -> 416, 
       "2013-01-30" -> 216, "2013-02-27" -> 171, "2017-08-07" -> 496, 
       "2012-08-22" -> 290, "2015-11-16" -> 443, "2016-04-04" -> 532, 
       "2016-08-22" -> 533, "2016-09-03" -> 240, "2017-03-20" -> 404, 
       "2013-07-15" -> 375, "2013-09-30" -> 271, "2013-10-21" -> 303, 
       "2014-02-10" -> 294, "2014-03-24" -> 481, "2014-07-14" -> 376, 
       "2015-04-27" -> 385, "2015-06-26" -> 258, "2016-08-01" -> 526, 
       "2013-12-20" -> 251, "2015-07-13" -> 448, "2015-08-31" -> 459, 
       "2016-05-16" -> 495, "2017-01-09" -> 533, "2017-02-20" -> 435, 
       "2013-07-29" -> 373, "2014-08-18" -> 401, "2015-10-05" -> 410, 
       "2015-10-26" -> 412, "2017-01-23" -> 477, "2017-06-26" -> 461, 
       "2017-07-03" -> 378, "2017-07-31" -> 382, "2017-08-28" -> 457, 
       "2017-09-11" -> 517, "2015-07-20" -> 376, "2016-03-14" -> 451, 
       "2016-04-25" -> 450, "2016-05-27" -> 233, "2016-06-27" -> 505, 
       "2017-01-30" -> 429, "2016-09-20" -> 8, "2015-06-15" -> 396, 
       "2013-05-01" -> 188, "2017-04-17" -> 433, "2013-07-08" -> 283, 
       "2014-05-23" -> 101, "2014-08-04" -> 409, "2015-10-19" -> 435, 
       "2016-08-29" -> 498, "2014-10-27" -> 379, "2015-12-18" -> 324, 
       "2017-04-03" -> 473, "2013-11-22" -> 164, "2014-04-21" -> 314, 
       "2017-01-27" -> 1, "2013-09-16" -> 386, "2014-01-20" -> 320, 
       "2014-03-03" -> 322, "2014-07-21" -> 332, "2014-11-07" -> 215, 
       "2015-05-22" -> 214, "2014-08-29" -> 213, "2014-09-22" -> 395, 
       "2016-04-18" -> 531, "2013-08-19" -> 353, "2013-11-11" -> 272, 
       "2014-03-13" -> 48, "2014-03-17" -> 409, "2015-07-06" -> 415, 
       "2016-02-15" -> 440, "2016-06-21" -> 66, "2017-01-17" -> 381, 
       "2017-03-06" -> 405, "2017-03-27" -> 393, "2013-10-28" -> 296, 
       "2014-03-10" -> 311, "2014-06-23" -> 295, "2014-11-21" -> 300, 
       "2015-01-16" -> 212, "2015-01-20" -> 36, "2015-05-18" -> 378, 
       "2015-06-08" -> 418, "2015-08-03" -> 424, "2016-01-15" -> 119, 
       "2015-03-02" -> 396, "2014-01-27" -> 323, "2014-09-02" -> 27, 
       "2017-11-17" -> 62, "2016-12-20" -> 132, "2017-11-21" -> 16, 
       "2017-01-13" -> 5, "2017-09-08" -> 7, "2017-12-29" -> 43, "2015-11-25" -> 
       61, "2013-07-22" -> 388, "2012-06-29" -> 55, "2017-10-13" -> 2, 
       "2013-06-21" -> 43, "2014-06-12" -> 1, "2017-09-05" -> 1, "2014-11-10" -> 
       47, "2014-04-03" -> 10, "2016-10-28" -> 2, "2014-03-06" -> 2, 
       "2017-02-21" -> 1, "2016-05-20" -> 2, "2017-06-02" -> 6, "2017-10-31" -> 
       3, "2016-10-21" -> 2, "2017-07-18" -> 3, "2016-12-02" -> 1, 
       "2016-09-14" -> 1, "2017-12-01" -> 2, "2017-08-08" -> 1, "2017-12-05" -> 
       1, "2017-10-17" -> 1, "2017-12-26" -> 1, "2016-09-16" -> 2, 
       "2017-12-08" -> 1, "2017-02-17" -> 1, "2016-11-29" -> 1, "2017-05-30" -> 
       1, "2014-05-22" -> 1, "2016-10-14" -> 1], "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[96.00000000000001], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 1021], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[96.00000000000001], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 1021], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     1021, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-10-19", 
                  Style[
                  "2016-10-19", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-10-19"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-10-19"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1929"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-10-19"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-10-26", 
                  Style[
                  "2016-10-26", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-10-26"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-10-26"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1950"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-10-26"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-12-14", 
                  Style[
                  "2016-12-14", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-12-14"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-12-14"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2379"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-12-14"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-06-29", 
                  Style[
                  "2016-06-29", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-06-29"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-06-29"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2360"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-06-29"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-07-13", 
                  Style[
                  "2016-07-13", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-07-13"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-07-13"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1934"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-07-13"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-12-21", 
                  Style[
                  "2016-12-21", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-12-21"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-12-21"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2335"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-12-21"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-10-05", 
                  Style[
                  "2016-10-05", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-10-05"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-10-05"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2011"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-10-05"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-11-02", 
                  Style[
                  "2016-11-02", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-11-02"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-02"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2096"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-02"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-11-07", 
                  Style[
                  "2016-11-07", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-11-07"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-07"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["614"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-07"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-11-14", 
                  Style[
                  "2016-11-14", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-11-14"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-14"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["540"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-14"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-11-21", 
                  Style[
                  "2016-11-21", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-11-21"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-21"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["544"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-21"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-11-23", 
                  Style[
                  "2016-11-23", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-11-23"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-23"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["872"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-12-06", 
                  Style[
                  "2016-12-06", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-12-06"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-12-06"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["199"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-12-06"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2017-02-27", 
                  Style[
                  "2017-02-27", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2017-02-27"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2017-02-27"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["499"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2017-02-27"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-10-06", 
                  Style[
                  "2016-10-06", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-10-06"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-10-06"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-10-06"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-11-03", 
                  Style[
                  "2016-11-03", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-11-03"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-03"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["550"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-03"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-11-09", 
                  Style[
                  "2016-11-09", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-11-09"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-09"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2009"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-09"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-11-16", 
                  Style[
                  "2016-11-16", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-11-16"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-16"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2680"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-16"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-11-17", 
                  Style[
                  "2016-11-17", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-11-17"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-17"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1066"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-17"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2016-11-28", 
                  Style[
                  "2016-11-28", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2016-11-28"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-28"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["493"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2016-11-28"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1021, 1], {1, 1021 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1021, 1], {1, 1021 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1021, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1021, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1021, 1], {1, 1021 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1021, 1], {1, 1021 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{209., {265., 271.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{209., {265., 271.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.825346661956298*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"e7e7a9cc-d04f-4f52-bd79-85f92c372778"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"withPurchaseCost", "[", 
   RowBox[{"Counts", ",", "\"\<Date\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.825291778713876*^9, 3.8252918030639296`*^9}, {
  3.8252931664335127`*^9, 3.825293172879771*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"e216a0af-f360-4234-b14e-0f6e2f1dca53"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxVm3ucF9Mbx0eSlaVBWEkmFSFMuaXCRGkpNZLa0mV0p62m+3af7vearrar
aXVZSU0JUTESQhi3rPsgWRUGySL8ft/PM5/v6zX+wPs1c87znOd2nnO+s7V7
Dm7fp5KiKP+cqiiZ//7/H7v4gSPN8X8zpxj//7e3l6z1yXB4jFwwP8Pu0o4J
B7MzHLxELnYyHP9Ajh7OsFa9U8JleD/aTa4/PcPq9+QiyDfOKUjYsjJsNyUH
CzKsHyLnYbx1dmfqC/luY7ID/YOe5PK5GXbO7JJwxawM+zeSDciPepCjftBv
Nrk/1h82epD6z8yw0i3L06DfDLLXH/ptI5cvgj26dE14P+SbU8nFkO9sIQcD
oF8ZOXch7DGpG+eHfO/Jbin54UdkDfZXlO4JH8f4oJTcGOPj98llsJ/2Dzno
Bf2u6EF7Q381JOuwv/EX2Z8K/epatOdg6NeWXLoU9viDnAN/urUf4voxX9Ca
rDwC/UaQczHer9WT/oD+UT45nAz9hpG9Qui3mqwuhj3u6pXwzhkZ1m2yNQn6
rSA78J+7j9wA9jMH9k7YhP+cR7MM/f2XyRbkR0fJPuznLenDfML48EVyMfRR
fiArA6HfeX1pP+gf7yLriGftMDkf+ptqP46H/k4Tcjn0N77NPke82Gf1T9jF
eO9msoX4Dx8il2G8W/VhyoP+wQ1kH/PF3ckW5GuzyAH0jxo+Qv9gvNqVHEr+
TydriH/bJx+CfL3zAPof460pZB3j3acGpMYHH5P3wf6OU8j4h/38TWRN8v9D
cjAE+v2XfX8J9LtyIPWHv5X3B6b8p58kOxhvXT4o4Q7LYI93yf3nZdj8k1wE
+zl1BlM+8te/l7wE8u0TZBv55mk29YP+4T1kxYZ+I8j7sf7gkiGMB8n/Vlme
DP2GkiPkn7mKrMB/asuh3C+wXmMwOcR89nJyNBb6vUIuWgH9fiQ7rWGfwmGM
H9jTXUZWoE98hCz5pJ0/nPks9WAxuQz6RHuyz2V/KSdHyCfj3BHMV6kHu8ga
3te/I0s9s6qNZD3rDf1uIdeHP8xvyGXQ18kdRf/CH/5NZA/+jCxyA8j3zihi
/Eo9uJ4s9V3pTg6HQr+Z5AqpB/roVPxoD5IlPsxp5KQebCXfgHgwCsawHs3J
sD2ZLPnkbSY7sF94kLwZ8t2JY1k/ID94glwf4+MPyBr01/4lr5N6sGEc9cN6
1ffIBdDf+JvsYrxdbzz1L4Z+7cjxhAxbFeQA+riXTaA9kQ9BG/Ju+M/5nawh
H/1LJ1IfqQd3kyPEnzqc3Az2C2s6tI/U71bkAozXh5A12M9amX2Oeqa1mMT8
FH8NIjvYj53iLKMe+3vJOyDfHjCZ9Rjx6y0l54DDl8jOIOh3hCz5o1efklpf
sIgs+3G8m1wq8fV99n3UN/OcqQnPhT+dpmSlB+z1AjkP/Z9xiGzK/nP2NMYr
/OM1Jn+O+ayvp6XW4545nfs37BvcOD2lf9yDXBnj/ZwZjGfpPxuRrYnQrxs5
hnxjBrmr1Ad9JuNZ6kMXsuxX1lSy9CvuFnKh1IdOsxi/iG9nErkU/vafnJXS
P/qIvBn+UZXZXK/U26vI1mTYawJZ+t2wlFyM8fH6ORyP/NZCcinWY/5FdrBf
OnXncr3Yr4y3yZH464+5qfV7teelxoetyTbku8fJPuQHtebTHlhPnE+W/Uob
Rt4J+0UXL2B+oP9W7yI3xnyGTQ6HQb8V5LrYb7x92fHivztd6gf57qPkCOOD
l7PPV0K/o+Q89KvOIwtT/oxeJFt9od8P5FypDwsXMd5RX5TdZOm/9MNkA/li
qYu5n7iwx/OLU/Y3vyXnoF9zzlpC+XJeuJlcU+pDRJb92qu6NLW/hTcsTemv
9CCbkB+cvoz1VOpBQ3Ip/K91JSuQb04nr8N49bpHEy6H/kZncgXms6eQpd/2
niKr8L/VsZj+lfx3yPsl/zeRbewP8YfkIsn/8ctT8RJtzDLWr75P9lBfjZPk
/ZL/61fQPnhff5dsYD3Wn9nnyD+3zkrWE9jfPEAugv2dE+R8yX9tFeVL/t9D
9rF+7zeynDfCS1YzPyZDv3yyg/5CH0pO+oMaaxi/kK+1JPvYX8zB5AD1y1lO
XiX9wR2PcT3SHxSS8yDfW5Z9jvwNA3II/d2HPdoT8oPFXkr/eA9Zwf6klZOb
Sf67axn/6NfVXWQP8W98RzZgP7taCes/xus7ybacF74h58l9Qe7jqfwJbiJL
/jhfkQO5LzhjHdc3HvpdT5bzttqdPFPyv8p6MuynNCRLv6Q/SJb93ZpGlv5E
u3YD/Yn1mwXk/bCfM5kcwH7+ZrIN/9sPbKT9oL83kSz9UvgE2UD+KR+SZf8K
xpUyf7F/xhvI9WF/7T1yAPubf5Md1H/jnSfI8L9dQZb88y7bRPnSX7YhN5b9
/y1yHvLd/Z0cjYN+lz5J+2N8fDd5uOT/r2QL9TuquZn5BPuprcgR7GcMIedI
/VxJLkK8eK+SrRGwV42nuD45r7cgr5L7lr3Z5y2h3zGyciPs1XwL5cO+zgCy
9Fv+UrLkV/QSuY30v/230h9yP7WILP2nsoeswD/69+R87O/xAp/1QPq5Q2S3
BPZ4bhvjaRTs8TXZQPx4Z25P+AUvw+6XZKMI8zd6mvmE+aLTdtD+mM/oQt7x
OPS75hk+x37sTiIX4LnT4Vn6G/NHpeR4LdY/9jnuHyMxX0ieAPna4zu5Xsh3
/iC3WI/1HH+e8Twa9rv7Bcpfl+HgF3IwHPPdtSvhq7B+9aLdKf3sgeTekG8Z
eyhf+o0l5ON47vd7MeVvdTd5DeQrC15K+cP6lhyI/c8KGG8tMP/NZLmfNZ8l
B7CPX/XlhLdAvvcFOcZ+qjTay3jA/HHlVzg/npudydthf6PBPq5vDOZzyJ+L
fzaRIzlP3/8q4xPxF28kl8Hf0ZjX6E/Y23iXfBeee3Vepz6YTy8hz4W+zhv7
uR6Jl0veSLhkA/SJyRrsqVz8JvVRMF9L8q+Qp+W9xfdhP6eQvGIj7LmMrORB
XkC2cB9q336A9oc9lBezLPlZTnax3qDv2wm/g/hU57/D+VH/7G/IzyI+rGfe
TY8/I0z4TcjzPycreK42fC/hDrCXUvn9hHU8twrIX5Zk2Lz6A46X+JlIvgfP
vfYfcr0SPxvJHuwXj/6I82O8+Q65reR3BTnonmFj7UHKg3+838n5j2XY3f8x
/QF945pljBfxV6uylD+jn8k28s9o8UnCudDfHkRW8jOsX/gp7Yl6YDUne6h/
7gDyGIm32z6jfDyPFpF3Qt+wz+ccL/XpBbIF+dYhslIX+s/7gvmC9Tlfk3X4
297xJest9Atzvkr4MOYLPiN7WK+mR9QP8aCe+jXrLe7r7E7kRhJPV31DfeBP
t0OWH8T8E8g1YW//vm+pD9anbiD/CvsYIVnqkzL6EPMT+6n1NjkH87l/kJX4
9oy82t9x/s6Qd5x8Avp6rx+mfXC+V2p+n3AN2CP+iSznefPO8oRnY7wzsDwl
z7jgB8rDfN4jZFf0u/UI40nOHwvJ7ZGv5mGyI/m24CjrD/TR5x6j/fHcjcg/
Ybzz9I8cj/iPTv8pJT/8lCz7kX7dz6wX8K9WKU7tR05H8msSP1f+korvcDx5
HOpjYP6ayndtPfmgxE/Rb4wnjLcPkCPpT06Q5fdC67HjCYfQJ/iNvBv5EV/y
O/03BfLyyR7OJ1FMVppC/sUnEt6P8UZLsof9TvmJrEn+3vEH1yf1o5Bsop83
z69I7Rf+w+SauE+IFpMDvO81+5P7Hd4P+5KDTpC/kBw+mmF9F9lFPMW9/krp
Z+4kL5N68g25WM47c/6mveEP7yvyydWQf8ZJzg/93O1kye+4yj8J78N6tIZk
OQ9En5B9zG9c+y/Hw152AbkI+uin/Mf3EZ/uA+R9qzIcTCTnyH1mfeVoYh+J
53HkjtI/bSS70Md4jyy/R4TtTknYaQX568jFWL/1DtnD/qiNqpSwgvmct8hr
IM//nexgPdGlp1I/uW9eQ1ZwH+TtJ4ewZ/Bq5YRjsFbjtIT7lmTYbEGOJ2N9
P5Ll/GA3r5LwTOSTN4CsyO8P1U/nePRTQX9yueyni8hyHtT2kE3Zn5vmJLwB
6436kE3kl32IbGF+pdcZCS/B/Po8stz3mbOr0r6IV/9L8gGZP+fMhH2pl9vI
Bvaf8DOyivUpVXIpD/dFup6b8pfVhezA/9qpZ/H5HdDnGvJmxJvT6ayUPwzl
bPoT+el1IK+TfJlATvbzK6qRYb94LLkQ69M2kFXEV9RW5fpE3uPkdZIvb5Nd
xL8+8hy+D3u7b5KPQZ/gODlP7otXn0t7irxfyGV4X615XsI7Eb/hvvNS69Uv
qp5wI+hv3UmukPP7MbLEl2Ocn3AzzO8/Qlbxvn3eBWS5P+hH1qV/XESW83LQ
5MKUfbQF5EM4f5rPk2O5j+uZx/XKefNZ8kzY04vIHvLTmnUR7YvxwRfk3nJe
Ob1GwrbUcz/L0p+cdjHzQfaP68jyPYlSRvZgH6tBzYRXId7cjmQL9jD/I6si
7/5LGJ/I72g8WX4v9C6vRfvhfWUsOQf66OtrpfSJ772U7yMezBLyOPjLOUD2
Mb8xQqP+0j+/QR4q57HfyPL7sVKrNuNHvr+IyVsk/i++jPNLvXyFLL/XGnl1
6O81GbbvIMv5Uz9K1iT+b6+b8D6sN3iYLN+jOOfWS8Vz1JdcJv3HQrIu99m3
XJ7ylz6f3FfifydZ7q/db8gaztvmnCvoT7HnM+Ry+b5lZn3Gq/RLn5PHlMB+
p1/J+eT30K1kOa9pla9KuC7Wa15LlnqpfkyWfs+++uqEW0Af7wFy8r3Kv2SJ
h6B9A64X9onHkWO879e7hvPDPuoYcp7E/zpy48lYz73Xcn6J/7XkqfCv+xZZ
+i1z+HXcr6GPv58s9SH6lWzgubdSp31k/4nJw/G+XqMh7Qn9471kqYfmhY3o
H+jvNCdrcr8+gCy/b3i3XU/7S/3vT5bfU9xzbiBLvvUhR1iv5pKlfkeNb0zt
n8Y8cg7qg/0cOZT4t27i+4hndwc5lvj/kuzB/s6Mm1P7bfQZua3Ef5XGXC/e
D7eQ5byhn3pLwovwvnUN2UG8aQfJOuqzc1UT5hf08TuQfdQ3+x+y3I+F9zVN
uCb6I2Uc2ZL+qG4zzo/3tdHkvdDHfLxZSn+1za2UB3vZHnmnxP+bZA36W8Nu
4/si73VyKc438S9k6b+0mrcz3nBf5K8gH5f+fh9Zft9QfyY7bbG+vQYZ9cO6
oDn3E8hzDXJjOV/+QI7Rj/u33sH9RvaDfuQKyPPUO1PrV/qQk35sATmS7x+f
JxtyH9mzRcJN8L45l1yGehRVbcn1Qx+jB1m+x7FnkQ9JP/o0eSb0c6fflbB8
bxZ/SpZ6o53Wivs/3o+eIkt8GZXyOR/ixW5Alv7A60gOukHelXdT/+UZDu4n
S3/nnCTL9x6ReQ/nl/PEWHKI/AzrtE7Fs15EdhDvVglZvsfUWrdJ5YvzGPkO
uU97gxxIvA69l+9Dv/A1so36ofySZemPlrdl/ZLvL38iF+J9M68d54e/1Jez
DH3s803Gm+TH7WQd9rfKybL/Bs3uS7hDSYbjvmQ5P/jV2qf2E7U3ubrsD/PJ
0t8pN9/P9YKtOeTL5T76GbL012b3Dqn65m8n5yIeos/J0k950x5I7S/Kp+Qq
sL9euSPjQc7Tm8manOdP6cT1yv5wNdmT+P+wU8o+Xv2ChPvD/mF7suy37t9k
Tfbbep2ZTzdAfjtyA9kvxpBtrDe6rEvCcj43RpFPYD32WrIi5+t7HuR4xJO7
hnwE9g32kyM53w7pSnvIef7Vril/qDFZ6otRoxvl4X40LCYn5/sfya9J/3Rh
d8Yf8sNtTpbf35zqPRjPcr6+jRzK+eF7suzPYVMrYbn/UfqS90u8nv0Q/SX7
VS9yA9k/5mWfw77qTT25Puw3hkV2TMifTT4g54kd5ByMt7r1on8gL9hGtksy
HH9GroD+WpXeXA/6NfUTsir3naf2SflT2UyW+mIpfZm/0k9dRZZ6G3QgB+2x
3g/IEn/+Ff3of4yP7iPL/af3F7mx5E+7/pwf7+ujyTnQJ679cKo+aW3ISn3I
H0muK/dTHlnO88bdjzBfYH9vNbmZ5NPr5Dz5Ps8ewPml39pHLpL8+ZnsQr/o
0ULu7xK/x8iu9FsXDOR+IvH7Eln6Bfe8QcwPuZ+6lSz7o7aILN8jRE0GJ9xT
8qcPWb4fC8+yuR75vqgnWe6PrbnkddiP3Wezz5Fv2o1DGK/oB80eZEWDfWeR
T8Ie/tPkYDLW23Voan2hT16H87XyGVnqu37aMOZDB6x/Cln6L62MXCjnk0rD
uT78fq4+SZb8tP8j75D7sStHML7xe394/4i0Pd4nS70OLh/JeML6YnNkan3a
2JEpe/l/kqW+qW1HpeLFKCKXyfdFJaNS45XaRazvmN8aQbZkv3qMrCN+gjfI
Sg7skT+azxGP/ipyb9greo1syfdWg8cwPyX/9pFj9Iv6T+RS3H/Fy8am6oX2
MjmAv8yjZEO+f3txHOur9Ofl41L29s4dn/BIrC9sRg7hT6Xf+NT77ndk+f49
qDaB+uP7kPgWcn/p93qTdfn+Ondiyj/GQ+RlJdBvDlnyWb/B4frle6ruZAd/
/+POJN+G8cF2chG+d3AenMT6L/VhK1l+71E/nZTyl/7xZK5H+r1TpqT00TaR
pb44/5J3I779+lNT9TlqT1aqZ9j7mxxiPwjrTaO/5HxkkmM8DyrI8j2Rdu90
zod+zhxFlu9dnbXTU/5StRkcj/7WHk5WJR/XkKWfslrN5PrlvLSSrEFe/CpZ
6rk/aBbth3quvkI2UD+NH8nS39gXzk7ppywjS/+vB+nn1hFyBeS71edQPuqD
uYcs+5l/zlz6G/KjpmTpP71DZFO+37hlXsIH5T6h17yUPeIz5/N96U+t+Sn7
O7PJcr9oXL+A65f9bQZ5kOTXNrL0D24Xlyzfw2whH4B/tE/ItvRrkxbyfekP
D5JLpD9UFtFfcn55giz3se4/ZPk9P7hicSpenZCswh9R3SUJF8j+1o4s/Xr4
x5KUPfU2SxMeh/OyNZIs98/apcs4Xs5nw8i15Ly0mpwv+8ddjzIf5D5hBdmS
89Kr5DKpxwOLqb/ky17ycehvHiPL933q0uXcXyU/fiDLfaB33grmj9yf30q2
5Hvuw+Tk92d1JeuL3K81Icv3qFofsnz/4X9L7i/6NF6VcHfpD3uS5fcY5czV
lC/3bT3ITSDPnUWW74PNRmsoT+6bp5MrJD98snzv5nV+jOtF/6hsIW8qybBe
RpZ+xKrkMR7l922HLPfJ5kfkLvL7+X9k6TeM0rX0r9z3nSSvk/vny0uoL953
3yV78vvwn2TZf+M6jycs/ZDWliz7ZXSCLL8fGK3XJSznY3sEWfZ3vdZ61kP5
/XIoWYF+wSpycv5vuYHPpR4NzjLiI1pOvknyaR+5HP4NCzfyfbmfe5lcKL9f
HiXH0n8vKU3VD6ecXFXOV+c+wXyA/exdZBf2DqttSviw/D7ThFwf9SzOfTKl
v3YzOV/uHx4iSz125mTfr4n1Vd3M+SSfu5OLMd6bSTahj9XwKdpf9r9p5Fzp
/7aS+8v+U7Al4QC/l6pPkSvDXsbHZEP6K2cr80fi90PyXunv/iVLvpobfdYL
+d7yb3Kx3M/V28b147lqkqWf9N4hJ/dLFdtS9lTqbE+4gew/95KT+7Pft6fs
Y97zdMLt5Xw1nCz3x8YlOxiP8r1FK7Lkhzck+1zOWyvJZViv2+IZ7h+QFxeT
K0k/9wpZ+udowLOcX+7vAvI4+X7kCFnOw1715/h+O6x3MVnui6092ec69Pme
bKOeOS/spD9lfzr7ecZ7Cex/C9mS/rfX8yl/hF+T5XsKJfeFlD/0m8hz5T7c
IpdjPnd2+n3tjF0p/zrdyPJ9mT+DLH+/buu7U/UunEp+E/orW8mN5e9FPyEX
SDxM2pOWv5ks32OZB8mW/D6svEh/tzT+BygOZTY=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.5345376*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.4712928*^9, 
        FormBox[
         StyleBox["\"2010\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{949.5, Automatic},
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.5345376*^9, 3.7234944*^9}, {0, 3021.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.825291807113059*^9, 3.825318736315984*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"9a8a39c8-d9e5-42fc-91b5-b1412708cf71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JoinAcross", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<b\>\"", "\[Rule]", "2"}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[Rule]", "2"}], ",", 
       RowBox[{"\"\<b\>\"", "\[Rule]", "2"}]}], "|>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<c\>\"", "\[Rule]", "3"}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<c\>\"", "\[Rule]", "1"}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[Rule]", "2"}], ",", 
       RowBox[{"\"\<c\>\"", "\[Rule]", "2"}]}], "|>"}]}], "}"}], ",", 
   "\"\<a\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.825290857767155*^9, 3.825291003144703*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"00807f32-1479-4a15-b48f-dfbefc48c753"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"c\"\>", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"c\"\>", "\[Rule]", "1"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"c\"\>", "\[Rule]", "2"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8252909979045477`*^9, 3.82529100352271*^9}},
 CellLabel->"Out[82]=",ExpressionUUID->"a6455bde-412f-4137-8f7e-549c6a4001cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JoinAcross", "[", 
  RowBox[{
   RowBox[{"Dataset", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<b\>\"", "\[Rule]", "2"}]}], "|>"}], ",", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "2"}], ",", 
        RowBox[{"\"\<b\>\"", "\[Rule]", "2"}]}], "|>"}]}], "}"}], "]"}], ",", 
   RowBox[{"Dataset", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<c\>\"", "\[Rule]", "3"}]}], "|>"}], ",", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<c\>\"", "\[Rule]", "1"}]}], "|>"}], ",", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "2"}], ",", 
        RowBox[{"\"\<c\>\"", "\[Rule]", "2"}]}], "|>"}]}], "}"}], "]"}], ",", 
   "\"\<a\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.825290857767155*^9, 3.825291003144703*^9}, {
  3.8252910809576855`*^9, 3.8252911026139584`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"eae2ed15-dda9-4ec3-b277-68a8795e52e4"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["a" -> 1, "b" -> 2, "c" -> 3], 
       Association["a" -> 1, "b" -> 2, "c" -> 1], 
       Association["a" -> 2, "b" -> 2, "c" -> 2]}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "a"} -> 1, {All, "b"} -> 1, {All, "c"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "a" -> TypeSystem`PackageScope`AtomShape[34], "b" -> 
            TypeSystem`PackageScope`AtomShape[34], "c" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"a", "b", "c"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "a"} -> 1, {All, "b"} -> 1, {All, "c"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "a" -> TypeSystem`PackageScope`AtomShape[34], "b" -> 
            TypeSystem`PackageScope`AtomShape[34], "c" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"a", "b", "c"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     3, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a", 
                  Style[
                  "a", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "a"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "a"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["b", 
                  Style[
                  "b", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "b"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "b"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c", 
                  Style[
                  "c", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "c"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "c"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{146., {63., 69.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{146., {63., 69.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.825291103481511*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"72816fe0-f198-4a7f-944f-f81a717621a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"invoice", "[", 
  RowBox[{"Counts", ",", "\"\<Item_id\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8251003146986485`*^9, 3.8251003552543354`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"2f1af61d-5f87-45d1-8048-cd2c7589703c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      35918 -> 4382, 23828 -> 3974, 36908 -> 6229, 34359 -> 2533, 36903 -> 
       4628, 36904 -> 9028, 35914 -> 2472, 35926 -> 1823, 11777 -> 2215, 
       24456 -> 1705, 48105 -> 4265, 53213 -> 3570, 11299 -> 895, 53214 -> 
       3021, 80574 -> 1150, 43026 -> 2628, 89194 -> 1203, 26820 -> 1054, 
       10807 -> 1802, 36886 -> 6343, 64866 -> 3653, 65253 -> 1224, 65254 -> 
       1831, 65256 -> 2784, 86884 -> 2070, 43124 -> 2022, 22151 -> 618, 64858 -> 
       5519, 80571 -> 1140, 11290 -> 3015, 80576 -> 815, 11773 -> 2224, 34423 -> 
       2738, 10805 -> 1368, 10804 -> 638, 11296 -> 3285, 11294 -> 3336, 64510 -> 
       352, 64722 -> 557, 64571 -> 201, 64759 -> 432, 34164 -> 580, 40069 -> 
       96, 40592 -> 640, 40191 -> 218, 40597 -> 326, 48099 -> 3282, 41696 -> 
       712, 41704 -> 1242, 37993 -> 1598, 37994 -> 2522, 38006 -> 1317, 64864 -> 
       2174, 86886 -> 2166, 75226 -> 126, 69634 -> 680, 11774 -> 3090, 11788 -> 
       5824, 26824 -> 1516, 43025 -> 918, 43024 -> 1765, 42703 -> 805, 56193 -> 
       299, 42712 -> 876, 86881 -> 1563, 32231 -> 1488, 77744 -> 12, 75224 -> 
       259, 75212 -> 1211, 73051 -> 1286, 38176 -> 2765, 89196 -> 2874, 43336 -> 
       4956, 36306 -> 3361, 12478 -> 820, 73055 -> 1240, 15248 -> 3143, 8826 -> 
       467, 12466 -> 351, 15246 -> 970, 15626 -> 2223, 17956 -> 1311, 19068 -> 
       1349, 20246 -> 398, 20248 -> 1534, 21596 -> 752, 22788 -> 1367, 23826 -> 
       3255, 24454 -> 1361, 25608 -> 3155, 26826 -> 3311, 27783 -> 534, 28206 -> 
       471, 31656 -> 711, 34006 -> 2925, 35316 -> 490, 35626 -> 909, 35913 -> 
       1464, 35916 -> 2815, 36301 -> 2019, 36668 -> 591, 36976 -> 748, 36978 -> 
       1980, 37346 -> 1066, 37348 -> 3203, 37416 -> 312, 37935 -> 731, 37938 -> 
       1768, 37996 -> 3100, 37998 -> 1471, 41846 -> 1592, 41989 -> 1574, 
       42009 -> 414, 43036 -> 915, 43126 -> 2410, 43128 -> 2553, 43138 -> 611,
        43316 -> 1114, 43331 -> 2138, 45278 -> 3366, 52582 -> 1257, 52596 -> 
       3301, 54448 -> 151, 55086 -> 735, 57129 -> 748, 57158 -> 215, 58801 -> 
       884, 58836 -> 336, 58868 -> 1212, 64868 -> 1169, 76486 -> 1158, 77740 -> 
       635, 77842 -> 669, 80578 -> 1310, 86670 -> 1588, 86796 -> 681, 86883 -> 
       1255, 89916 -> 289, 48106 -> 3088, 89193 -> 2158, 58866 -> 210, 49084 -> 
       555, 43034 -> 625, 49185 -> 2353, 43333 -> 1865, 38008 -> 1845, 77852 -> 
       428, 77709 -> 169, 77637 -> 289, 52590 -> 270, 55084 -> 309, 69945 -> 
       1445, 69657 -> 685, 24458 -> 2477, 41693 -> 2860, 41320 -> 234, 41299 -> 
       446, 41316 -> 505, 41413 -> 282, 69940 -> 1550, 10803 -> 1335, 24451 -> 
       1085, 36901 -> 2227, 41857 -> 738, 42002 -> 1108, 53211 -> 791, 37356 -> 
       968, 45886 -> 1261, 36969 -> 2592, 36308 -> 6381, 12408 -> 1903, 36887 -> 
       1559, 29998 -> 988, 29996 -> 873, 29994 -> 1192, 29993 -> 989, 45276 -> 
       1571, 64512 -> 406, 64511 -> 443, 32235 -> 297, 25601 -> 916, 26828 -> 
       1729, 41692 -> 1890, 52598 -> 1332, 54646 -> 575, 24156 -> 859, 25606 -> 
       1849, 37886 -> 1139, 15644 -> 1000, 64865 -> 1017, 64863 -> 826, 36304 -> 
       1792, 34003 -> 799, 34004 -> 1400, 43334 -> 3144, 43123 -> 1030, 32234 -> 
       2376, 32233 -> 1756, 32232 -> 1246, 37880 -> 350, 37889 -> 492, 31472 -> 
       468, 12464 -> 385, 23824 -> 3333, 22783 -> 292, 22784 -> 434, 19063 -> 
       1202, 19064 -> 1618, 24453 -> 1032, 25604 -> 1725, 25603 -> 1260, 
       40594 -> 1700, 67524 -> 456, 36967 -> 583, 89199 -> 1487, 88294 -> 
       2332, 88290 -> 1475, 52594 -> 2714, 52593 -> 2475, 52581 -> 1311, 
       53210 -> 1147, 56195 -> 665, 45246 -> 619, 53216 -> 1574, 49189 -> 
       1956, 66295 -> 409, 26823 -> 1859, 87484 -> 156, 87408 -> 1680, 34433 -> 
       2681, 26585 -> 409, 27025 -> 558, 17086 -> 693, 86692 -> 361, 27544 -> 
       1105, 27125 -> 135, 41670 -> 285, 37936 -> 384, 38174 -> 495, 37336 -> 
       1078, 53218 -> 462, 84171 -> 136, 68036 -> 1425, 82857 -> 62, 82866 -> 
       633, 69636 -> 1659, 69638 -> 822, 69658 -> 169, 77759 -> 40, 77760 -> 
       81, 27904 -> 13, 23823 -> 1797, 89121 -> 521, 87485 -> 613, 89155 -> 
       41, 88296 -> 2417, 37991 -> 2529, 37338 -> 988, 56792 -> 69, 42714 -> 
       511, 58876 -> 148, 66293 -> 680, 49086 -> 1023, 18407 -> 243, 26821 -> 
       2193, 34421 -> 941, 41078 -> 533, 41076 -> 1060, 41783 -> 1501, 89191 -> 
       1718, 86669 -> 773, 10809 -> 145, 40593 -> 799, 4716 -> 532, 5326 -> 
       717, 5346 -> 1124, 5036 -> 783, 75208 -> 1983, 84172 -> 892, 42716 -> 
       2532, 15621 -> 597, 86668 -> 1106, 41840 -> 319, 34425 -> 754, 66296 -> 
       397, 52316 -> 1661, 80577 -> 664, 33658 -> 272, 36965 -> 548, 63781 -> 
       26, 41601 -> 855, 26822 -> 629, 65191 -> 546, 19475 -> 214, 19473 -> 
       51, 52591 -> 799, 69631 -> 661, 57148 -> 1468, 35948 -> 1395, 56840 -> 
       286, 56850 -> 415, 37888 -> 718, 28866 -> 1537, 43338 -> 3218, 27102 -> 
       2344, 42718 -> 872, 28868 -> 736, 24158 -> 1571, 22786 -> 1069, 77847 -> 
       408, 77683 -> 351, 34008 -> 1499, 82786 -> 777, 34578 -> 1502, 43337 -> 
       2739, 58838 -> 2851, 65257 -> 2117, 81207 -> 502, 71886 -> 368, 80236 -> 
       185, 67556 -> 346, 82847 -> 1376, 67266 -> 666, 73986 -> 921, 80438 -> 
       180, 68611 -> 416, 80458 -> 254, 80456 -> 708, 68306 -> 315, 68022 -> 
       559, 68049 -> 171, 78866 -> 351, 79336 -> 322, 67610 -> 41, 83370 -> 
       244, 67540 -> 198, 56846 -> 301, 63355 -> 656, 43127 -> 1701, 43388 -> 
       981, 43848 -> 430, 52597 -> 214, 55088 -> 172, 45275 -> 816, 30318 -> 
       815, 30316 -> 404, 43986 -> 168, 89242 -> 509, 43501 -> 56, 43116 -> 
       246, 44476 -> 290, 44419 -> 543, 52806 -> 446, 52835 -> 268, 30036 -> 
       382, 52563 -> 484, 54446 -> 542, 56206 -> 323, 42166 -> 473, 43318 -> 
       43, 42666 -> 412, 50686 -> 498, 55068 -> 327, 28086 -> 627, 43536 -> 
       84, 44259 -> 30, 89150 -> 173, 89215 -> 330, 46112 -> 88, 87409 -> 215,
        27724 -> 28, 27780 -> 605, 5004 -> 19, 64870 -> 1364, 36974 -> 433, 
       64755 -> 756, 64573 -> 311, 38180 -> 328, 10624 -> 557, 31474 -> 526, 
       77734 -> 159, 11298 -> 1304, 40005 -> 38, 49186 -> 1626, 69609 -> 238, 
       10549 -> 584, 11771 -> 2109, 89139 -> 452, 87250 -> 255, 87510 -> 913, 
       87403 -> 517, 34001 -> 1315, 88741 -> 10, 3656 -> 14, 3657 -> 253, 
       3655 -> 15, 88298 -> 206, 89846 -> 59, 15677 -> 248, 4868 -> 309, 8828 -> 
       1190, 16676 -> 331, 19235 -> 118, 27048 -> 61, 19228 -> 22, 19226 -> 
       738, 15296 -> 648, 22216 -> 770, 22228 -> 127, 22213 -> 62, 6998 -> 
       333, 23626 -> 997, 19478 -> 375, 10008 -> 1575, 18048 -> 54, 19009 -> 
       74, 22175 -> 107, 4876 -> 266, 19112 -> 368, 10846 -> 198, 20366 -> 
       113, 5103 -> 75, 5006 -> 637, 5014 -> 204, 27014 -> 48, 5486 -> 520, 
       75211 -> 1347, 40071 -> 231, 34449 -> 140, 41019 -> 257, 41943 -> 197, 
       40007 -> 52, 40394 -> 377, 33663 -> 424, 34995 -> 346, 33983 -> 205, 
       34052 -> 605, 40331 -> 98, 40327 -> 258, 35315 -> 510, 41688 -> 282, 
       38177 -> 1111, 38178 -> 1477, 77284 -> 71, 19066 -> 2190, 10006 -> 359,
        3135 -> 37, 45248 -> 1733, 24466 -> 634, 18352 -> 83, 27246 -> 55, 
       64336 -> 729, 24157 -> 486, 87511 -> 57, 48164 -> 262, 36971 -> 715, 
       36968 -> 910, 31475 -> 1121, 40186 -> 221, 40297 -> 321, 40073 -> 40, 
       40313 -> 207, 40192 -> 203, 40193 -> 636, 40315 -> 130, 40598 -> 493, 
       40599 -> 1168, 64776 -> 685, 89154 -> 382, 29997 -> 330, 89197 -> 1691,
        87937 -> 945, 86251 -> 1198, 89577 -> 785, 86390 -> 184, 28867 -> 
       1007, 11586 -> 1166, 10550 -> 2266, 10627 -> 1063, 11297 -> 1854, 5037 -> 
       267, 86672 -> 417, 19067 -> 1403, 24457 -> 978, 8827 -> 684, 19477 -> 
       627, 25607 -> 1450, 11347 -> 330, 86887 -> 1298, 21597 -> 436, 22157 -> 
       514, 82607 -> 784, 69637 -> 1776, 67527 -> 1091, 83907 -> 216, 76487 -> 
       1351, 43137 -> 1104, 43387 -> 1059, 44603 -> 118, 45277 -> 1440, 73053 -> 
       841, 34007 -> 1599, 34029 -> 794, 34036 -> 611, 35947 -> 465, 34422 -> 
       1698, 41077 -> 303, 34457 -> 778, 41694 -> 1102, 37347 -> 793, 37417 -> 
       606, 37997 -> 1491, 34787 -> 53, 34871 -> 94, 54706 -> 387, 80096 -> 
       407, 64601 -> 556, 43028 -> 3415, 43984 -> 437, 27479 -> 577, 24706 -> 
       508, 67595 -> 276, 37642 -> 469, 46350 -> 1288, 72448 -> 191, 71529 -> 
       203, 43362 -> 325, 76478 -> 374, 64876 -> 594, 69706 -> 174, 43426 -> 
       152, 43205 -> 569, 43991 -> 52, 43386 -> 279, 5516 -> 80, 55246 -> 124,
        78616 -> 193, 79026 -> 167, 27890 -> 7, 27585 -> 73, 8825 -> 163, 
       34032 -> 205, 34061 -> 168, 87643 -> 368, 40053 -> 170, 62405 -> 177, 
       59037 -> 846, 40326 -> 213, 66199 -> 75, 43031 -> 1014, 74664 -> 37, 
       89164 -> 200, 35314 -> 81, 11588 -> 313, 39871 -> 16, 84617 -> 561, 
       82187 -> 208, 82606 -> 970, 68126 -> 780, 87596 -> 179, 41653 -> 358, 
       36305 -> 2538, 36307 -> 2210, 35416 -> 1243, 77900 -> 150, 42149 -> 42,
        19476 -> 1509, 18046 -> 179, 17958 -> 1148, 20286 -> 390, 32238 -> 
       1375, 13038 -> 567, 43125 -> 1140, 46351 -> 849, 42893 -> 24, 58886 -> 
       289, 27605 -> 106, 37986 -> 865, 37988 -> 751, 30238 -> 289, 52314 -> 
       1038, 40621 -> 376, 40390 -> 390, 77772 -> 31, 65066 -> 1230, 65896 -> 
       368, 54056 -> 340, 27913 -> 105, 43022 -> 902, 46502 -> 49, 27680 -> 
       346, 27390 -> 323, 10552 -> 230, 81124 -> 523, 69713 -> 119, 88183 -> 
       122, 45884 -> 467, 73052 -> 988, 49182 -> 285, 28236 -> 1260, 34300 -> 
       19, 42717 -> 1333, 82610 -> 442, 26827 -> 1926, 35917 -> 1962, 4626 -> 
       797, 77774 -> 140, 69947 -> 1587, 4717 -> 255, 55066 -> 1083, 52599 -> 
       542, 67267 -> 533, 82787 -> 627, 64867 -> 1682, 65258 -> 379, 11786 -> 
       2381, 57125 -> 750, 57174 -> 329, 11776 -> 3502, 34030 -> 1065, 43328 -> 
       446, 34368 -> 545, 139 -> 8, 68042 -> 41, 37934 -> 520, 36302 -> 150, 
       12404 -> 753, 64509 -> 87, 48101 -> 569, 28865 -> 492, 64711 -> 667, 
       32236 -> 2002, 84143 -> 374, 35418 -> 862, 37418 -> 1157, 86506 -> 508,
        75214 -> 946, 43219 -> 668, 12407 -> 187, 73755 -> 253, 65200 -> 933, 
       34820 -> 1951, 64716 -> 705, 36871 -> 786, 82846 -> 1346, 27392 -> 225,
        81206 -> 719, 21598 -> 1401, 27554 -> 646, 56843 -> 496, 86916 -> 608,
        35318 -> 1916, 31658 -> 1715, 30526 -> 287, 89786 -> 525, 43038 -> 
       759, 89198 -> 1042, 87410 -> 221, 46506 -> 232, 73054 -> 397, 58875 -> 
       1474, 58872 -> 1362, 58873 -> 402, 42175 -> 93, 43360 -> 101, 59154 -> 
       426, 42167 -> 245, 35317 -> 1313, 36435 -> 77, 43302 -> 657, 46504 -> 
       836, 34116 -> 485, 34746 -> 695, 38169 -> 183, 77688 -> 219, 55087 -> 
       237, 82820 -> 367, 67006 -> 708, 47785 -> 843, 47786 -> 731, 52186 -> 
       375, 28246 -> 175, 77786 -> 278, 79966 -> 61, 19486 -> 535, 4356 -> 
       392, 4866 -> 736, 4959 -> 114, 5290 -> 426, 5347 -> 720, 5596 -> 369, 
       10632 -> 184, 73715 -> 352, 76036 -> 809, 56957 -> 592, 27127 -> 19, 
       85526 -> 710, 80159 -> 19, 34702 -> 180, 41604 -> 574, 89387 -> 1094, 
       15627 -> 1094, 43285 -> 1762, 55106 -> 458, 86691 -> 390, 15628 -> 536,
        22156 -> 950, 22155 -> 734, 43121 -> 1560, 65204 -> 1194, 77674 -> 
       174, 4936 -> 193, 5133 -> 362, 5327 -> 369, 10548 -> 358, 10553 -> 244,
        10808 -> 507, 10836 -> 707, 12467 -> 84, 13638 -> 199, 23827 -> 1699, 
       25496 -> 23, 26656 -> 322, 27100 -> 53, 27370 -> 88, 27723 -> 80, 
       27776 -> 15, 27781 -> 126, 28210 -> 110, 28233 -> 786, 34155 -> 418, 
       34244 -> 279, 34821 -> 1648, 36591 -> 178, 39466 -> 32, 39920 -> 143, 
       40052 -> 275, 44657 -> 555, 44660 -> 78, 45887 -> 376, 52595 -> 237, 
       64000 -> 208, 64645 -> 73, 65195 -> 1167, 73702 -> 635, 73748 -> 48, 
       80487 -> 139, 80687 -> 300, 81196 -> 402, 81204 -> 663, 81208 -> 923, 
       82605 -> 246, 82849 -> 353, 87150 -> 326, 87152 -> 327, 87402 -> 265, 
       87509 -> 393, 88186 -> 331, 88540 -> 175, 88556 -> 654, 89099 -> 138, 
       89175 -> 547, 89646 -> 317, 29566 -> 230, 34579 -> 443, 36447 -> 169, 
       40152 -> 101, 43136 -> 1638, 43410 -> 536, 43352 -> 173, 88332 -> 46, 
       43120 -> 441, 58860 -> 449, 57144 -> 496, 89207 -> 108, 86918 -> 83, 
       22787 -> 231, 24728 -> 590, 4867 -> 512, 5289 -> 347, 4796 -> 287, 
       34162 -> 156, 40363 -> 144, 87619 -> 111, 10628 -> 1078, 10626 -> 797, 
       4090 -> 43, 5061 -> 476, 15890 -> 34, 48146 -> 337, 4096 -> 149, 34747 -> 
       337, 33672 -> 79, 36315 -> 23, 41701 -> 268, 41698 -> 456, 77647 -> 
       317, 35505 -> 139, 64996 -> 507, 66836 -> 302, 19061 -> 1441, 75209 -> 
       451, 43051 -> 847, 21236 -> 102, 88841 -> 127, 27751 -> 100, 26906 -> 
       593, 17206 -> 739, 43287 -> 310, 14192 -> 652, 44516 -> 113, 88548 -> 
       296, 89386 -> 712, 88036 -> 526, 89177 -> 40, 17766 -> 279, 34886 -> 
       120, 35039 -> 148, 35147 -> 72, 89230 -> 161, 43299 -> 126, 43314 -> 
       69, 76042 -> 213, 64356 -> 133, 66203 -> 110, 52312 -> 788, 82604 -> 
       474, 43134 -> 430, 88291 -> 1251, 65061 -> 420, 34026 -> 386, 34117 -> 
       280, 89787 -> 319, 82867 -> 739, 82637 -> 546, 52319 -> 355, 30527 -> 
       319, 82127 -> 316, 14474 -> 236, 22121 -> 319, 64736 -> 483, 64136 -> 
       1074, 15247 -> 707, 11936 -> 408, 43037 -> 194, 43117 -> 119, 89837 -> 
       377, 10818 -> 494, 33717 -> 215, 5345 -> 418, 34078 -> 112, 41927 -> 
       354, 67526 -> 1341, 34458 -> 592, 34786 -> 178, 34881 -> 49, 88767 -> 
       214, 45419 -> 277, 37640 -> 327, 65199 -> 397, 66936 -> 449, 10828 -> 
       116, 28625 -> 624, 86888 -> 909, 34456 -> 1105, 41116 -> 305, 37987 -> 
       245, 17916 -> 290, 39876 -> 26, 45274 -> 335, 69611 -> 500, 69656 -> 
       665, 5350 -> 119, 11285 -> 259, 15244 -> 374, 27782 -> 158, 64774 -> 
       17, 86698 -> 172, 89626 -> 288, 65251 -> 697, 67522 -> 396, 87586 -> 
       403, 26586 -> 798, 67192 -> 143, 4846 -> 305, 10838 -> 47, 11348 -> 
       457, 36188 -> 411, 39866 -> 757, 42777 -> 116, 43296 -> 420, 43415 -> 
       283, 67273 -> 147, 77375 -> 232, 29568 -> 460, 18120 -> 246, 16906 -> 
       129, 44487 -> 106, 82636 -> 403, 73533 -> 216, 34395 -> 168, 16416 -> 
       321, 34629 -> 47, 84457 -> 83, 87938 -> 358, 5246 -> 43, 65017 -> 164, 
       34729 -> 41, 34748 -> 214, 42983 -> 38, 15667 -> 272, 21480 -> 288, 
       27417 -> 26, 27474 -> 302, 28088 -> 185, 28795 -> 48, 29404 -> 16, 
       35964 -> 634, 36229 -> 33, 4084 -> 238, 42699 -> 560, 4825 -> 29, 
       58840 -> 193, 67586 -> 708, 8208 -> 161, 89610 -> 201, 58842 -> 135, 
       33518 -> 107, 5157 -> 100, 15884 -> 35, 56805 -> 57, 15658 -> 164, 
       73607 -> 6, 66636 -> 724, 1799 -> 811, 82126 -> 418, 81406 -> 391, 
       27410 -> 615, 89496 -> 609, 59159 -> 37, 43244 -> 1209, 43073 -> 132, 
       77880 -> 235, 36592 -> 60, 11346 -> 573, 11366 -> 416, 10840 -> 20, 
       15776 -> 533, 18196 -> 620, 19096 -> 320, 27453 -> 182, 27629 -> 82, 
       30056 -> 480, 30058 -> 496, 30236 -> 219, 33256 -> 654, 34856 -> 268, 
       34935 -> 302, 36015 -> 123, 36595 -> 56, 39834 -> 27, 40244 -> 73, 
       40632 -> 319, 41161 -> 39, 41512 -> 54, 41681 -> 357, 41707 -> 177, 
       42153 -> 59, 43027 -> 637, 43076 -> 212, 44306 -> 192, 44428 -> 87, 
       44456 -> 265, 53206 -> 313, 54436 -> 302, 63522 -> 120, 65426 -> 348, 
       72722 -> 331, 73136 -> 270, 76488 -> 486, 77378 -> 338, 77719 -> 81, 
       77776 -> 782, 82881 -> 425, 88147 -> 134, 88766 -> 361, 88768 -> 152, 
       47863 -> 160, 89533 -> 554, 43343 -> 50, 87646 -> 65, 89443 -> 53, 
       19880 -> 32, 46019 -> 20, 48102 -> 588, 78456 -> 415, 81966 -> 291, 
       903710 -> 5, 904794 -> 1, 980023 -> 9, 69715 -> 82, 22158 -> 68, 31208 -> 
       198, 10789 -> 96, 10790 -> 155, 10788 -> 200, 464 -> 14, 5105 -> 69, 
       21595 -> 288, 5635 -> 92, 25616 -> 362, 21602 -> 55, 15526 -> 123, 
       17127 -> 409, 27697 -> 82, 27027 -> 266, 5038 -> 39, 13388 -> 290, 
       27056 -> 353, 27037 -> 248, 15940 -> 472, 19019 -> 254, 76040 -> 429, 
       35354 -> 454, 36122 -> 39, 86112 -> 1395, 86310 -> 48, 44258 -> 243, 
       89030 -> 147, 43237 -> 339, 43232 -> 230, 42723 -> 192, 76767 -> 266, 
       57120 -> 528, 58892 -> 28, 63359 -> 179, 62422 -> 80, 58877 -> 41, 
       56797 -> 32, 73456 -> 300, 68038 -> 386, 69946 -> 994, 74086 -> 423, 
       67528 -> 243, 42599 -> 32, 80296 -> 59, 73684 -> 40, 11370 -> 57, 
       64572 -> 278, 5329 -> 282, 86625 -> 130, 27408 -> 260, 39868 -> 95, 
       77658 -> 134, 77698 -> 168, 77632 -> 179, 77668 -> 35, 77875 -> 249, 
       5349 -> 224, 10791 -> 307, 43035 -> 186, 41360 -> 847, 48181 -> 15, 
       34197 -> 976, 47790 -> 626, 903611 -> 8, 10826 -> 235, 557 -> 19, 
       41209 -> 222, 40126 -> 158, 39892 -> 31, 35946 -> 407, 27372 -> 57, 
       42984 -> 498, 62400 -> 332, 63530 -> 333, 89566 -> 168, 77773 -> 22, 
       35699 -> 491, 14484 -> 59, 23708 -> 730, 43197 -> 553, 52318 -> 663, 
       66213 -> 124, 86749 -> 94, 82611 -> 482, 49156 -> 136, 80686 -> 348, 
       83906 -> 267, 65126 -> 697, 34188 -> 173, 65127 -> 432, 68037 -> 828, 
       69667 -> 411, 42079 -> 215, 79516 -> 58, 44426 -> 65, 42687 -> 317, 
       85066 -> 13, 10792 -> 21, 35934 -> 377, 80144 -> 46, 84170 -> 676, 
       47776 -> 147, 42240 -> 94, 73058 -> 64, 56006 -> 107, 77723 -> 7, 
       77725 -> 7, 5159 -> 35, 27920 -> 69, 34972 -> 393, 34189 -> 150, 57092 -> 
       181, 41705 -> 324, 30528 -> 761, 82627 -> 289, 75087 -> 304, 56196 -> 
       525, 89278 -> 778, 34014 -> 313, 34076 -> 319, 67578 -> 56, 39943 -> 
       25, 40804 -> 68, 40821 -> 57, 43371 -> 253, 77858 -> 151, 34839 -> 158,
        40289 -> 209, 77735 -> 216, 43325 -> 126, 34366 -> 326, 22244 -> 14, 
       31470 -> 23, 37204 -> 62, 88116 -> 150, 88536 -> 205, 36034 -> 61, 
       77741 -> 92, 82827 -> 167, 29287 -> 446, 83363 -> 300, 84636 -> 192, 
       68846 -> 359, 77730 -> 74, 15739 -> 242, 77472 -> 228, 12406 -> 457, 
       34823 -> 90, 85606 -> 315, 86885 -> 289, 16987 -> 57, 27040 -> 25, 
       27604 -> 93, 33971 -> 22, 37414 -> 148, 37426 -> 222, 41500 -> 161, 
       43077 -> 152, 43095 -> 197, 43322 -> 191, 44557 -> 218, 48115 -> 37, 
       57161 -> 76, 64933 -> 201, 66165 -> 14, 66208 -> 47, 67264 -> 260, 
       67557 -> 379, 73517 -> 284, 76526 -> 102, 82618 -> 32, 82840 -> 238, 
       84456 -> 396, 87413 -> 65, 89206 -> 810, 258 -> 69, 58835 -> 410, 
       59231 -> 453, 46497 -> 35, 44658 -> 748, 80457 -> 179, 75216 -> 198, 
       28370 -> 41, 31473 -> 299, 12476 -> 428, 42370 -> 103, 43145 -> 282, 
       42242 -> 190, 43226 -> 236, 17669 -> 6, 19006 -> 54, 17090 -> 65, 
       19026 -> 294, 87632 -> 285, 16096 -> 94, 6206 -> 52, 64676 -> 503, 
       66226 -> 118, 69666 -> 362, 67426 -> 218, 72816 -> 164, 86666 -> 115, 
       28886 -> 284, 28890 -> 347, 15606 -> 27, 4636 -> 183, 52656 -> 56, 
       31718 -> 97, 76665 -> 55, 35453 -> 246, 4718 -> 94, 86817 -> 71, 10625 -> 
       174, 36494 -> 10, 34959 -> 76, 40656 -> 35, 64147 -> 47, 43409 -> 145, 
       39922 -> 88, 82957 -> 330, 82956 -> 76, 27454 -> 229, 84496 -> 164, 
       64762 -> 797, 52580 -> 1010, 48122 -> 50, 43349 -> 89, 89447 -> 198, 
       89796 -> 182, 77699 -> 33, 77843 -> 55, 65194 -> 518, 47865 -> 152, 
       82844 -> 392, 77487 -> 237, 77322 -> 17, 68031 -> 320, 5288 -> 293, 
       72480 -> 22, 72482 -> 10, 34919 -> 288, 45888 -> 348, 34566 -> 49, 
       38058 -> 20, 43112 -> 34, 80145 -> 129, 33316 -> 63, 72730 -> 32, 
       80326 -> 55, 82600 -> 142, 17826 -> 296, 17830 -> 314, 87936 -> 320, 
       18408 -> 189, 44350 -> 235, 58874 -> 104, 74740 -> 151, 56796 -> 31, 
       56803 -> 58, 32237 -> 342, 12888 -> 420, 39830 -> 11, 34817 -> 765, 
       52579 -> 704, 57157 -> 421, 80488 -> 142, 56793 -> 52, 56798 -> 60, 
       42151 -> 141, 43442 -> 59, 43439 -> 37, 44217 -> 147, 45247 -> 411, 
       45418 -> 94, 38088 -> 517, 39939 -> 14, 4367 -> 156, 77848 -> 91, 
       54447 -> 178, 82626 -> 291, 16517 -> 203, 63865 -> 7, 37147 -> 5, 
       48108 -> 318, 13062 -> 102, 18006 -> 471, 44308 -> 71, 28718 -> 90, 
       65144 -> 119, 68039 -> 458, 18350 -> 186, 19116 -> 45, 89274 -> 175, 
       53629 -> 76, 4111 -> 39, 6316 -> 79, 73140 -> 107, 77703 -> 85, 64750 -> 
       203, 84159 -> 284, 89836 -> 562, 9426 -> 188, 65109 -> 68, 28627 -> 
       124, 17520 -> 18, 16814 -> 33, 5446 -> 321, 36374 -> 7, 4001 -> 25, 
       4616 -> 135, 58888 -> 131, 80485 -> 139, 16850 -> 138, 18198 -> 254, 
       77318 -> 323, 62420 -> 395, 64816 -> 111, 28350 -> 82, 13542 -> 41, 
       12856 -> 37, 82826 -> 399, 9428 -> 116, 36667 -> 119, 5008 -> 5, 86626 -> 
       61, 76032 -> 181, 86684 -> 98, 40625 -> 267, 44486 -> 57, 77777 -> 19, 
       63354 -> 359, 86250 -> 131, 43282 -> 325, 64121 -> 12, 85796 -> 220, 
       80486 -> 113, 8824 -> 215, 26589 -> 75, 42676 -> 456, 42312 -> 287, 
       33994 -> 120, 45245 -> 460, 15604 -> 47, 14208 -> 142, 34870 -> 114, 
       28238 -> 296, 31990 -> 244, 35435 -> 244, 40151 -> 139, 89286 -> 49, 
       54647 -> 430, 73956 -> 15, 28087 -> 475, 30317 -> 239, 34051 -> 65, 
       951175 -> 1, 5040 -> 287, 5318 -> 170, 21206 -> 153, 37526 -> 49, 
       72732 -> 63, 36186 -> 339, 88833 -> 11, 62097 -> 190, 43109 -> 80, 
       35776 -> 122, 40229 -> 93, 82836 -> 245, 18604 -> 22, 20247 -> 273, 
       44520 -> 305, 82612 -> 76, 89468 -> 59, 46008 -> 10, 33286 -> 240, 
       56791 -> 68, 933900 -> 1, 77889 -> 72, 64986 -> 5, 34812 -> 194, 55506 -> 
       272, 51714 -> 5, 51712 -> 22, 51710 -> 6, 51708 -> 7, 4374 -> 35, 
       19481 -> 13, 5430 -> 231, 80437 -> 39, 64913 -> 97, 27793 -> 27, 27794 -> 
       10, 27774 -> 4, 27773 -> 31, 27778 -> 7, 27777 -> 18, 27802 -> 5, 
       59100 -> 69, 73729 -> 36, 76038 -> 309, 86694 -> 27, 100026 -> 8, 
       64912 -> 85, 64914 -> 90, 54057 -> 152, 11371 -> 103, 27898 -> 8, 
       16829 -> 18, 86821 -> 63, 77903 -> 58, 77188 -> 4, 86653 -> 2, 40070 -> 
       119, 89635 -> 37, 15888 -> 18, 35780 -> 198, 73596 -> 146, 84166 -> 
       316, 66810 -> 35, 2229 -> 67, 43366 -> 16, 89388 -> 177, 6997 -> 151, 
       64636 -> 199, 73526 -> 246, 86834 -> 36, 86832 -> 27, 64513 -> 21, 
       77870 -> 133, 89617 -> 231, 73206 -> 10, 76024 -> 3, 40118 -> 150, 
       42507 -> 21, 48154 -> 276, 65536 -> 129, 68017 -> 107, 71446 -> 258, 
       86693 -> 113, 16396 -> 68, 27560 -> 36, 89182 -> 42, 40359 -> 153, 
       88185 -> 88, 35427 -> 36, 36460 -> 9, 76668 -> 5, 76664 -> 4, 36535 -> 
       1, 86673 -> 133, 43040 -> 64, 44499 -> 368, 89394 -> 20, 56194 -> 199, 
       18116 -> 75, 4624 -> 30, 13036 -> 148, 986730 -> 5, 74090 -> 299, 
       68034 -> 587, 27891 -> 6, 19062 -> 54, 4853 -> 24, 308 -> 24, 35213 -> 
       517, 40001 -> 16, 2226 -> 16, 5153 -> 65, 30057 -> 321, 89788 -> 130, 
       12863 -> 2, 77714 -> 85, 35109 -> 201, 34255 -> 48, 19436 -> 66, 41326 -> 
       70, 80143 -> 32, 54444 -> 125, 31657 -> 196, 5492 -> 190, 51506 -> 173,
        359 -> 4, 643 -> 25, 52146 -> 107, 52317 -> 257, 34454 -> 45, 34690 -> 
       283, 89178 -> 69, 87266 -> 21, 5104 -> 110, 43323 -> 32, 88018 -> 87, 
       77746 -> 45, 614 -> 32, 34122 -> 243, 100054 -> 4, 46686 -> 39, 904976 -> 
       8, 917914 -> 9, 919040 -> 1, 927114 -> 4, 927666 -> 4, 941146 -> 2, 
       39919 -> 27, 76658 -> 7, 5555 -> 19, 5484 -> 2, 29288 -> 166, 73685 -> 
       52, 22178 -> 11, 5696 -> 198, 58879 -> 15, 3465 -> 5, 4150 -> 16, 490 -> 
       16, 108 -> 4, 725 -> 10, 100015 -> 29, 14481 -> 17, 62061 -> 396, 
       43174 -> 28, 3360 -> 12, 74782 -> 71, 149 -> 2, 479 -> 6, 364 -> 2, 
       212 -> 3, 2393 -> 15, 115 -> 36, 100033 -> 7, 893 -> 17, 881 -> 6, 159 -> 
       11, 472 -> 37, 470 -> 52, 217 -> 21, 866 -> 18, 434 -> 60, 428 -> 12, 
       647 -> 43, 447 -> 9, 457 -> 16, 19560 -> 2, 297 -> 17, 133 -> 6, 
       100005 -> 8, 758 -> 3, 633 -> 2, 789 -> 30, 983927 -> 3, 940570 -> 1, 
       67487 -> 35, 31719 -> 39, 15777 -> 135, 46044 -> 14, 4357 -> 17, 77768 -> 
       58, 33508 -> 9, 86802 -> 39, 58893 -> 32, 39916 -> 85, 39917 -> 111, 
       39918 -> 240, 100001 -> 4, 155 -> 2, 10834 -> 293, 2945 -> 11, 36970 -> 
       77, 86825 -> 42, 68040 -> 10, 10793 -> 10, 13037 -> 28, 25877 -> 102, 
       36384 -> 20, 42204 -> 66, 145 -> 2, 15856 -> 147, 10009 -> 117, 41279 -> 
       242, 89887 -> 82, 38202 -> 2, 68013 -> 67, 927762 -> 1, 349 -> 13, 
       5404 -> 28, 64911 -> 25, 558 -> 16, 100046 -> 1, 10890 -> 206, 65125 -> 
       196, 59161 -> 65, 940591 -> 7, 936966 -> 7, 36369 -> 7, 27409 -> 27, 
       34089 -> 3, 160 -> 3, 43507 -> 21, 43519 -> 18, 14480 -> 21, 27804 -> 
       7, 27806 -> 2, 27824 -> 7, 86639 -> 2, 64915 -> 2, 43050 -> 45, 77905 -> 
       8, 46687 -> 22, 46685 -> 35, 35527 -> 95, 27682 -> 166, 921540 -> 16, 
       10278 -> 169, 49083 -> 79, 36171 -> 1, 14483 -> 46, 86835 -> 35, 5149 -> 
       18, 19048 -> 27, 35179 -> 126, 36473 -> 33, 37937 -> 73, 82146 -> 191, 
       56958 -> 89, 11940 -> 71, 33528 -> 13, 36870 -> 82, 37436 -> 1, 21201 -> 
       25, 77545 -> 189, 58890 -> 93, 36468 -> 56, 87280 -> 48, 42244 -> 126, 
       561 -> 6, 2140 -> 29, 988063 -> 9, 40403 -> 95, 16988 -> 29, 100032 -> 
       10, 86507 -> 59, 35944 -> 52, 903394 -> 8, 100041 -> 16, 12668 -> 14, 
       48182 -> 3, 27677 -> 36, 86747 -> 30, 18348 -> 226, 16518 -> 827, 
       63812 -> 45, 80130 -> 17, 48183 -> 22, 77805 -> 1, 80826 -> 179, 35628 -> 
       150, 3345 -> 9, 904764 -> 1, 917946 -> 19, 16516 -> 401, 4798 -> 72, 
       27823 -> 4, 27138 -> 14, 47780 -> 6, 89029 -> 122, 34546 -> 156, 
       100051 -> 11, 101 -> 3, 100022 -> 2, 36482 -> 53, 35222 -> 13, 75213 -> 
       138, 82780 -> 89, 27433 -> 182, 114 -> 7, 100077 -> 7, 100040 -> 4, 
       29119 -> 39, 17087 -> 31, 89174 -> 11, 40926 -> 176, 905443 -> 2, 
       915980 -> 4, 18661 -> 13, 27123 -> 8, 14490 -> 27, 14489 -> 22, 27131 -> 
       10, 14487 -> 41, 27369 -> 11, 27849 -> 5, 80034 -> 27, 25878 -> 108, 
       39856 -> 24, 2313 -> 8, 77902 -> 19, 31167 -> 27, 37203 -> 18, 100035 -> 
       23, 36006 -> 34, 34753 -> 64, 36311 -> 25, 64715 -> 13, 77648 -> 15, 
       41625 -> 52, 34876 -> 36, 27692 -> 24, 56828 -> 135, 67506 -> 3, 
       100080 -> 1, 82147 -> 85, 15660 -> 57, 77319 -> 21, 100006 -> 5, 5281 -> 
       20, 52199 -> 186, 77324 -> 18, 89665 -> 23, 87448 -> 25, 88282 -> 10, 
       62920 -> 32, 2511 -> 13, 18790 -> 4, 68127 -> 47, 19040 -> 2, 27141 -> 
       22, 27026 -> 7, 74776 -> 64, 989491 -> 1, 905690 -> 1, 63959 -> 321, 
       64985 -> 23, 984154 -> 4, 76438 -> 5, 33653 -> 5, 100037 -> 28, 10855 -> 
       40, 30247 -> 45, 56804 -> 41, 86833 -> 11, 34267 -> 49, 979986 -> 2, 
       68559 -> 6, 80447 -> 17, 67296 -> 68, 494 -> 22, 238 -> 4, 902574 -> 
       14, 40465 -> 91, 88152 -> 40, 969712 -> 3, 36498 -> 12, 64363 -> 3, 
       43504 -> 7, 43515 -> 7, 2629 -> 7, 82898 -> 6, 57051 -> 19, 36552 -> 4,
        27832 -> 14, 902203 -> 7, 902207 -> 8, 940351 -> 4, 902981 -> 7, 
       939906 -> 4, 904761 -> 4, 941850 -> 4, 941336 -> 7, 941294 -> 9, 
       941220 -> 7, 941060 -> 14, 940131 -> 5, 940146 -> 6, 904760 -> 3, 
       904759 -> 6, 904769 -> 3, 941340 -> 6, 917951 -> 10, 88188 -> 24, 
       89621 -> 28, 31866 -> 22, 36471 -> 5, 27853 -> 30, 3347 -> 6, 946574 -> 
       20, 45870 -> 18, 2737 -> 9, 76044 -> 129, 3005 -> 13, 27476 -> 16, 
       85550 -> 6, 77785 -> 6, 57181 -> 33, 21594 -> 111, 86624 -> 6, 984160 -> 
       8, 940857 -> 3, 23612 -> 7, 18284 -> 4, 27007 -> 3, 976047 -> 4, 
       936859 -> 30, 27844 -> 6, 27846 -> 3, 4055 -> 22, 87270 -> 16, 88709 -> 
       1, 88590 -> 2, 88591 -> 1, 88707 -> 2, 88708 -> 1, 27439 -> 101, 66580 -> 
       29, 100065 -> 3, 27801 -> 9, 36466 -> 6, 5106 -> 102, 76436 -> 87, 
       27098 -> 17, 57179 -> 46, 86785 -> 30, 934031 -> 1, 934053 -> 2, 
       905552 -> 1, 921589 -> 10, 922036 -> 5, 5702 -> 13, 27130 -> 10, 124 -> 
       2, 44266 -> 31, 77779 -> 11, 963706 -> 2, 22217 -> 20, 80058 -> 94, 
       76669 -> 39, 83357 -> 11, 28650 -> 1, 74772 -> 12, 902007 -> 1, 23278 -> 
       5, 43990 -> 2, 37586 -> 13, 34605 -> 70, 86764 -> 28, 107 -> 2, 921600 -> 
       5, 86638 -> 4, 921228 -> 4, 984161 -> 8, 984393 -> 10, 972406 -> 1, 
       18096 -> 36, 1258 -> 54, 100100 -> 3, 18906 -> 53, 73721 -> 58, 76529 -> 
       9, 76531 -> 8, 76533 -> 15, 22897 -> 13, 5319 -> 73, 80060 -> 21, 
       27523 -> 8, 28770 -> 19, 36406 -> 5, 921248 -> 1, 27814 -> 26, 100018 -> 
       4, 9278 -> 17, 57168 -> 50, 14210 -> 25, 77724 -> 6, 47788 -> 6, 73762 -> 
       19, 910071 -> 2, 936973 -> 1, 14199 -> 30, 902684 -> 5, 919240 -> 3, 
       984145 -> 5, 984142 -> 6, 34158 -> 35, 12865 -> 5, 976046 -> 1, 75740 -> 
       9, 34436 -> 133, 916002 -> 4, 89152 -> 18, 64976 -> 36, 28656 -> 1, 
       322 -> 7, 64435 -> 32, 27066 -> 24, 89838 -> 9, 4381 -> 9, 27163 -> 12,
        902145 -> 5, 904903 -> 2, 63740 -> 11, 27094 -> 6, 904609 -> 1, 
       903550 -> 4, 37528 -> 6, 901435 -> 1, 903760 -> 15, 27165 -> 13, 33467 -> 
       97, 80166 -> 1, 902500 -> 3, 15592 -> 13, 36108 -> 9, 63741 -> 7, 
       964607 -> 2, 902407 -> 22, 940596 -> 2, 33466 -> 86, 72912 -> 79, 
       72913 -> 97, 919471 -> 7, 82837 -> 52, 64892 -> 12, 64752 -> 5, 38089 -> 
       24, 902755 -> 2, 905606 -> 6, 940355 -> 7, 940020 -> 11, 941063 -> 7, 
       942031 -> 7, 903771 -> 5, 28005 -> 15, 989457 -> 1, 902752 -> 1, 
       981177 -> 12, 27464 -> 9, 904855 -> 2, 18199 -> 5, 27167 -> 3, 34737 -> 
       7, 912880 -> 1, 980451 -> 3, 42566 -> 38, 36574 -> 77, 912463 -> 1, 
       940190 -> 2, 903066 -> 1, 921242 -> 8, 31627 -> 3, 100102 -> 9, 89448 -> 
       67, 72417 -> 10, 100083 -> 1, 100075 -> 1, 38031 -> 27, 15542 -> 7, 
       36576 -> 78, 77976 -> 6, 33469 -> 4, 15945 -> 2, 37040 -> 9, 905211 -> 
       2, 915962 -> 2, 87997 -> 84, 32426 -> 7, 38179 -> 137, 34092 -> 22, 
       72356 -> 55, 927543 -> 2, 72355 -> 31, 58865 -> 31, 89824 -> 12, 13928 -> 
       31, 34819 -> 21, 903155 -> 1, 988804 -> 7, 988805 -> 9, 988406 -> 13, 
       15818 -> 28, 80148 -> 17, 80162 -> 26, 266 -> 57, 43482 -> 8, 34015 -> 
       42, 58878 -> 13, 969711 -> 3, 973627 -> 13, 38081 -> 12, 4113 -> 11, 
       27289 -> 49, 51696 -> 28, 12409 -> 14, 36527 -> 4, 986677 -> 1, 23277 -> 
       12, 936981 -> 1, 988031 -> 5, 939820 -> 1, 39777 -> 12, 19021 -> 18, 
       33647 -> 13, 15241 -> 10, 46113 -> 21, 27478 -> 28, 973520 -> 2, 
       903809 -> 4, 27318 -> 11, 918001 -> 3, 916840 -> 1, 84152 -> 30, 84197 -> 
       110, 84207 -> 99, 27947 -> 3, 4949 -> 9, 4955 -> 9, 6238 -> 6, 47775 -> 
       3, 9432 -> 14, 27276 -> 24, 86910 -> 21, 86906 -> 20, 86909 -> 18, 
       59162 -> 17, 84201 -> 16, 57150 -> 10, 903293 -> 4, 900138 -> 5, 87416 -> 
       50, 941635 -> 2, 39930 -> 5, 10786 -> 16, 21226 -> 11, 27079 -> 12, 
       21222 -> 14, 943131 -> 1, 87306 -> 15, 34329 -> 7, 88549 -> 9, 59169 -> 
       26, 900199 -> 2, 921244 -> 6, 903474 -> 2, 902263 -> 1, 902031 -> 3, 
       64924 -> 41, 84211 -> 19, 905261 -> 2, 38033 -> 7, 40329 -> 15, 36124 -> 
       25, 43596 -> 30, 39770 -> 97, 940909 -> 1, 43593 -> 9, 77980 -> 1, 498 -> 
       8, 37413 -> 70, 73780 -> 23, 27323 -> 14, 88547 -> 4, 62809 -> 1, 
       24910 -> 1, 20656 -> 2, 34385 -> 12, 89781 -> 28, 6076 -> 41, 41691 -> 
       133, 41703 -> 53, 84144 -> 21, 81126 -> 28, 100233 -> 11, 57201 -> 32, 
       39759 -> 55, 988827 -> 3, 27535 -> 136, 6237 -> 3, 982902 -> 1, 994406 -> 
       1, 100108 -> 9, 80014 -> 14, 80015 -> 42, 26606 -> 10, 77955 -> 47, 
       77956 -> 81, 41167 -> 2, 33642 -> 6, 44511 -> 3, 44539 -> 13, 43208 -> 
       13, 35313 -> 11, 51184 -> 1, 49374 -> 8, 49376 -> 13, 906197 -> 1, 
       915862 -> 6, 927001 -> 3, 986725 -> 3, 43345 -> 4, 64466 -> 1, 902370 -> 
       1, 43201 -> 63, 39771 -> 25, 100017 -> 16, 26996 -> 13, 26998 -> 9, 
       912887 -> 1, 927171 -> 2, 989320 -> 1, 19070 -> 8, 36606 -> 18, 36604 -> 
       31, 34678 -> 35, 986704 -> 1, 902977 -> 18, 36641 -> 6, 36644 -> 11, 
       19227 -> 5, 100068 -> 1, 28043 -> 68, 27799 -> 8, 100130 -> 13, 40569 -> 
       75, 904570 -> 1, 902323 -> 5, 100129 -> 42, 571 -> 16, 86637 -> 16, 
       100119 -> 7, 38056 -> 5, 49373 -> 3, 919242 -> 1, 921806 -> 1, 1838 -> 
       9, 28025 -> 2, 84151 -> 3, 86856 -> 4, 16502 -> 3, 86858 -> 3, 89233 -> 
       20, 87385 -> 25, 39864 -> 3, 63752 -> 3, 51606 -> 3, 75218 -> 149, 
       75221 -> 58, 100135 -> 16, 75228 -> 6, 916666 -> 5, 918326 -> 6, 
       921231 -> 3, 902282 -> 2, 988865 -> 1, 67194 -> 17, 4610 -> 5, 900289 -> 
       2, 86621 -> 8, 89221 -> 6, 693 -> 31, 19485 -> 1, 5606 -> 247, 86661 -> 
       7, 44084 -> 3, 39659 -> 15, 34698 -> 14, 66015 -> 5, 29812 -> 12, 
       35586 -> 23, 89578 -> 6, 88148 -> 7, 72364 -> 7, 77824 -> 3, 72434 -> 
       43, 502 -> 9, 73783 -> 4, 54710 -> 8, 29712 -> 16, 29710 -> 19, 905554 -> 
       1, 5286 -> 7, 89234 -> 9, 87380 -> 9, 89235 -> 4, 15646 -> 48, 28812 -> 
       1, 39755 -> 10, 41867 -> 2, 29728 -> 19, 33937 -> 6, 66833 -> 4, 
       965208 -> 1, 902997 -> 1, 48143 -> 10, 40500 -> 53, 40528 -> 37, 74936 -> 
       3, 39753 -> 38, 46142 -> 21, 87647 -> 8, 11910 -> 32, 11912 -> 22, 
       46140 -> 12, 46144 -> 39, 36648 -> 56, 921212 -> 1, 43538 -> 5, 36650 -> 
       46, 39752 -> 26, 72878 -> 1, 28042 -> 3, 28039 -> 37, 930051 -> 2, 
       941310 -> 2, 49712 -> 1, 4947 -> 5, 100143 -> 7, 28056 -> 4, 89445 -> 
       11, 36258 -> 1, 37020 -> 6, 77851 -> 9, 80022 -> 44, 80332 -> 3, 36614 -> 
       8, 77846 -> 2, 33621 -> 3, 80295 -> 13, 917669 -> 1, 16835 -> 3, 32054 -> 
       3, 48185 -> 5, 77841 -> 4, 987407 -> 1, 988849 -> 1, 88602 -> 18, 
       903089 -> 1, 100276 -> 3, 77482 -> 5, 78590 -> 6, 84153 -> 13, 44468 -> 
       1, 24906 -> 5, 43565 -> 4, 71410 -> 3, 28040 -> 5, 39655 -> 13, 37881 -> 
       21, 969709 -> 1, 902788 -> 11, 73802 -> 18, 73803 -> 17, 44083 -> 8, 
       89339 -> 12, 87849 -> 5, 905231 -> 1, 33900 -> 5, 89329 -> 3, 27175 -> 
       7, 163 -> 13, 984168 -> 1, 18856 -> 14, 22207 -> 4, 5360 -> 3, 5362 -> 
       9, 36618 -> 17, 36616 -> 7, 36617 -> 10, 100300 -> 6, 919017 -> 3, 
       940055 -> 2, 989502 -> 3, 46041 -> 8, 71412 -> 3, 78592 -> 3, 904602 -> 
       1, 39865 -> 54, 14495 -> 5, 903923 -> 4, 39714 -> 5, 39715 -> 7, 66977 -> 
       3, 66979 -> 2, 66983 -> 2, 927461 -> 1, 918190 -> 1, 16853 -> 1, 18858 -> 
       2, 77739 -> 2, 902243 -> 1, 900013 -> 3, 921605 -> 3, 985806 -> 2, 
       940013 -> 6, 66982 -> 1, 66978 -> 1, 56767 -> 6, 56768 -> 19, 28067 -> 
       9, 28068 -> 11, 28466 -> 1, 39725 -> 12, 65252 -> 16, 918014 -> 1, 
       900219 -> 1, 17509 -> 9, 21075 -> 15, 996026 -> 1, 5247 -> 4, 5433 -> 
       12, 5443 -> 4, 100332 -> 10, 14512 -> 5, 57169 -> 1, 64939 -> 24, 
       33894 -> 3, 33938 -> 3, 65963 -> 4, 100331 -> 8, 15866 -> 22, 100243 -> 
       9, 5614 -> 3, 80141 -> 4, 17088 -> 2, 56765 -> 6, 89136 -> 5, 935863 -> 
       1, 80591 -> 12, 57070 -> 6, 66708 -> 2, 10784 -> 22, 14513 -> 11, 
       44442 -> 2, 66710 -> 9, 39608 -> 2, 64919 -> 11, 64921 -> 7, 64937 -> 
       15, 962477 -> 1, 988924 -> 1, 925966 -> 1, 987860 -> 1, 80128 -> 5, 
       88205 -> 8, 14493 -> 2, 80589 -> 7, 4993 -> 6, 4989 -> 2, 4977 -> 5, 
       69711 -> 12, 6052 -> 4, 80421 -> 1, 86867 -> 6, 86873 -> 15, 956790 -> 
       1, 19029 -> 2, 80422 -> 1, 975920 -> 1, 87716 -> 2, 28019 -> 9, 100335 -> 
       3, 25990 -> 1, 27237 -> 5, 26988 -> 3, 43608 -> 4, 73338 -> 5, 43607 -> 
       6, 73337 -> 7, 58758 -> 5, 994786 -> 1, 2070 -> 1, 64945 -> 2, 39825 -> 
       10, 38507 -> 12, 39707 -> 6, 39839 -> 11, 36092 -> 1, 73624 -> 1, 
       100179 -> 4, 28069 -> 2, 100264 -> 8, 1400 -> 90, 900606 -> 1, 4000 -> 
       4, 80580 -> 7, 44448 -> 1, 5325 -> 10, 77977 -> 15, 287 -> 2, 100309 -> 
       10, 1025 -> 2, 100128 -> 14, 61616 -> 10, 100242 -> 8, 944565 -> 2, 
       978036 -> 1, 100202 -> 17, 100137 -> 7, 18286 -> 2, 89583 -> 8, 100298 -> 
       3, 100278 -> 8, 100329 -> 1, 918370 -> 1, 100245 -> 2, 100334 -> 4, 
       100127 -> 6, 100215 -> 4, 100310 -> 1, 80017 -> 7, 80024 -> 22, 100258 -> 
       6, 100209 -> 1, 61613 -> 3, 100208 -> 3, 28066 -> 2, 100246 -> 5, 
       64138 -> 1, 43539 -> 5, 39723 -> 4, 38504 -> 3, 905078 -> 2, 927101 -> 
       3, 927156 -> 1, 927189 -> 5, 100210 -> 1, 100232 -> 2, 100229 -> 8, 
       39705 -> 10, 100161 -> 7, 699 -> 23, 5605 -> 3, 77336 -> 4, 77332 -> 8,
        77309 -> 3, 39704 -> 11, 100344 -> 1, 38086 -> 6, 36620 -> 1, 39727 -> 
       1, 559 -> 3, 4044 -> 2, 46499 -> 3, 27171 -> 2, 4043 -> 1, 75204 -> 11,
        89465 -> 1, 5755 -> 2, 100293 -> 3, 1643 -> 71, 100201 -> 1, 1221 -> 
       1, 1876 -> 3, 100282 -> 4, 39706 -> 5, 16673 -> 2, 15982 -> 9, 43529 -> 
       2, 10623 -> 10, 46939 -> 1, 100227 -> 3, 927798 -> 1, 928133 -> 1, 
       100144 -> 1, 100071 -> 4, 903490 -> 2, 905434 -> 1, 927228 -> 3, 37641 -> 
       1, 100353 -> 1, 5136 -> 2, 100360 -> 8, 903663 -> 2, 922250 -> 1, 
       20369 -> 2, 20372 -> 2, 48107 -> 7, 28628 -> 14, 903378 -> 3, 47861 -> 
       4, 67826 -> 1, 43086 -> 12, 28134 -> 7, 19118 -> 2, 61618 -> 1, 64790 -> 
       3, 18412 -> 4, 100354 -> 2, 36685 -> 2, 994972 -> 1, 904181 -> 1, 
       904184 -> 1, 990244 -> 1, 905215 -> 1, 905380 -> 1, 77682 -> 1, 910862 -> 
       3, 924570 -> 4, 16580 -> 12, 3201 -> 3, 64507 -> 1, 5242 -> 3, 88654 -> 
       1, 34759 -> 2, 15995 -> 3, 100394 -> 1, 990381 -> 1, 19060 -> 2, 47806 -> 
       1, 68809 -> 3, 68811 -> 2, 86839 -> 2, 66243 -> 2, 36723 -> 1, 905625 -> 
       1, 88406 -> 4, 27181 -> 4, 939783 -> 1, 904837 -> 1, 905636 -> 1, 
       918414 -> 3, 36673 -> 1, 66827 -> 1, 15648 -> 3, 33660 -> 1, 33665 -> 
       1, 36578 -> 1, 66240 -> 1, 903942 -> 2, 100406 -> 1, 43156 -> 651, 
       5012 -> 87, 42035 -> 16, 48104 -> 269, 69610 -> 57, 56865 -> 8, 73050 -> 
       1461, 69654 -> 177, 45995 -> 98, 41786 -> 180, 41796 -> 562, 41592 -> 
       221, 34467 -> 33, 75210 -> 1114, 77395 -> 30, 52808 -> 3, 67536 -> 107,
        68028 -> 79, 77570 -> 178, 80396 -> 54, 84486 -> 111, 34709 -> 49, 
       35466 -> 2, 35637 -> 55, 35766 -> 157, 35867 -> 45, 39666 -> 48, 40841 -> 
       54, 40946 -> 342, 40956 -> 488, 40976 -> 269, 40997 -> 168, 41715 -> 
       237, 41746 -> 307, 27562 -> 185, 42006 -> 458, 43046 -> 262, 43163 -> 
       122, 43183 -> 44, 43418 -> 441, 4725 -> 60, 34198 -> 248, 48103 -> 196,
        64764 -> 236, 64795 -> 23, 65065 -> 332, 65124 -> 215, 66050 -> 115, 
       66052 -> 90, 82784 -> 25, 89204 -> 45, 58863 -> 22, 63550 -> 129, 
       63792 -> 60, 63894 -> 131, 52216 -> 16, 53652 -> 9, 72953 -> 17, 72950 -> 
       27, 36907 -> 1251, 5034 -> 70, 64016 -> 6, 59160 -> 13, 62096 -> 40, 
       63755 -> 208, 73516 -> 116, 34199 -> 51, 41806 -> 366, 89946 -> 112, 
       73482 -> 69, 82613 -> 212, 69941 -> 167, 40835 -> 28, 44536 -> 24, 
       73452 -> 31, 82746 -> 1, 27508 -> 45, 11293 -> 967, 64742 -> 145, 
       41922 -> 84, 62382 -> 64, 62380 -> 17, 63730 -> 11, 15656 -> 128, 
       27486 -> 26, 44664 -> 6, 44662 -> 34, 35469 -> 108, 35743 -> 72, 77568 -> 
       39, 41938 -> 17, 28223 -> 28, 43096 -> 119, 12463 -> 9, 33266 -> 162, 
       32216 -> 2, 19474 -> 197, 34962 -> 27, 35549 -> 45, 71441 -> 80, 40849 -> 
       32, 82856 -> 43, 87946 -> 15, 87945 -> 10, 40986 -> 171, 84710 -> 4, 
       86190 -> 20, 31654 -> 233, 43335 -> 153, 42484 -> 19, 45950 -> 51, 
       89079 -> 163, 42485 -> 33, 42665 -> 44, 33716 -> 326, 4797 -> 51, 
       62838 -> 27, 40845 -> 12, 89200 -> 15, 35897 -> 12, 67159 -> 35, 77089 -> 
       118, 63798 -> 59, 31666 -> 211, 89482 -> 110, 66863 -> 5, 65229 -> 134,
        65188 -> 14, 40962 -> 72, 27625 -> 61, 77256 -> 40, 34138 -> 20, 
       34880 -> 4, 89453 -> 16, 69639 -> 109, 41079 -> 17, 34136 -> 3, 67546 -> 
       34, 15711 -> 12, 40939 -> 207, 37599 -> 22, 74763 -> 17, 35221 -> 3, 
       11358 -> 10, 6996 -> 59, 41876 -> 119, 1751 -> 2, 53367 -> 40, 41747 -> 
       74, 64135 -> 52, 62837 -> 28, 61752 -> 1, 34630 -> 121, 35785 -> 16, 
       35891 -> 100, 27512 -> 24, 43368 -> 5, 74760 -> 8, 63825 -> 75, 41146 -> 
       155, 902828 -> 1, 86812 -> 22, 79986 -> 46, 78036 -> 113, 63352 -> 19, 
       77558 -> 3, 77074 -> 9, 37344 -> 13, 49175 -> 59, 40965 -> 249, 37339 -> 
       176, 41719 -> 237, 83356 -> 67, 30250 -> 3, 35692 -> 63, 15820 -> 2, 
       89489 -> 8, 88019 -> 3, 27081 -> 4, 34561 -> 3, 67186 -> 26, 35779 -> 
       2, 69704 -> 39, 35881 -> 34, 34968 -> 62, 40917 -> 114, 38002 -> 26, 
       89212 -> 85, 25876 -> 36, 63528 -> 155, 40831 -> 12, 40930 -> 190, 
       35553 -> 15, 79816 -> 156, 35770 -> 89, 904733 -> 17, 69646 -> 89, 
       5620 -> 11, 82757 -> 13, 89451 -> 9, 41966 -> 30, 40992 -> 15, 42031 -> 
       43, 88037 -> 5, 903775 -> 2, 904481 -> 1, 40949 -> 98, 40853 -> 48, 
       68043 -> 79, 87383 -> 7, 27126 -> 27, 5086 -> 136, 49176 -> 105, 35702 -> 
       20, 43428 -> 2, 53368 -> 14, 37146 -> 109, 41936 -> 9, 41944 -> 10, 
       41935 -> 1, 35921 -> 32, 64712 -> 289, 65185 -> 47, 85316 -> 90, 34958 -> 
       43, 40810 -> 16, 41991 -> 22, 3036 -> 16, 43206 -> 10, 33966 -> 75, 
       40945 -> 51, 27110 -> 6, 43066 -> 146, 34997 -> 7, 903767 -> 1, 902791 -> 
       2, 903649 -> 31, 55504 -> 24, 46105 -> 1, 934 -> 5, 13636 -> 49, 40957 -> 
       44, 43416 -> 13, 9078 -> 64, 912900 -> 1, 21220 -> 4, 16870 -> 6, 
       35920 -> 43, 67067 -> 15, 34096 -> 6, 83927 -> 2, 89490 -> 13, 77497 -> 
       9, 902281 -> 9, 902602 -> 2, 948696 -> 6, 903037 -> 2, 43097 -> 6, 
       902386 -> 2, 27551 -> 77, 27582 -> 122, 27577 -> 63, 66107 -> 86, 
       87756 -> 15, 41954 -> 3, 64820 -> 4, 48144 -> 6, 902795 -> 3, 904836 -> 
       4, 66054 -> 4, 2368 -> 2, 34017 -> 10, 35713 -> 2, 4376 -> 85, 59153 -> 
       11, 63694 -> 1, 40682 -> 41, 40678 -> 30, 62383 -> 16, 77562 -> 1, 
       77564 -> 3, 902266 -> 1, 3438 -> 2, 3118 -> 2, 34160 -> 5, 40909 -> 89,
        41807 -> 73, 942777 -> 3, 62384 -> 14, 64581 -> 89, 28231 -> 23, 
       84616 -> 13, 35773 -> 28, 63963 -> 115, 17954 -> 11, 34041 -> 50, 2889 -> 
       3, 2878 -> 4, 67571 -> 49, 2677 -> 5, 80504 -> 1, 43023 -> 20, 25874 -> 
       2, 902445 -> 2, 904476 -> 1, 903209 -> 2, 904792 -> 11, 64446 -> 37, 
       64862 -> 302, 903202 -> 4, 903064 -> 10, 88100 -> 5, 34680 -> 11, 
       34815 -> 43, 904211 -> 27, 903985 -> 5, 902767 -> 10, 902781 -> 6, 
       914001 -> 2, 64098 -> 16, 904475 -> 4, 964068 -> 10, 31207 -> 42, 
       904726 -> 3, 904736 -> 5, 904620 -> 2, 904601 -> 4, 902772 -> 4, 
       904535 -> 6, 3310 -> 49, 3051 -> 4, 33989 -> 1, 34543 -> 11, 42063 -> 
       22, 2928 -> 4, 43198 -> 5, 33987 -> 43, 44410 -> 47, 35915 -> 29, 
       41940 -> 16, 34548 -> 4, 904582 -> 2, 87513 -> 18, 48116 -> 10, 904560 -> 
       2, 80136 -> 147, 41797 -> 65, 34034 -> 17, 4863 -> 15, 41901 -> 2, 
       58885 -> 224, 413 -> 8, 74165 -> 10, 41467 -> 47, 76216 -> 4, 902458 -> 
       4, 904943 -> 6, 904942 -> 5, 903996 -> 4, 2912 -> 6, 41787 -> 51, 
       41906 -> 1, 904625 -> 2, 904469 -> 3, 902353 -> 1, 902490 -> 6, 42310 -> 
       28, 64930 -> 14, 67285 -> 13, 67288 -> 3, 81180 -> 2, 904984 -> 11, 
       35937 -> 14, 35907 -> 61, 35975 -> 21, 43980 -> 110, 904480 -> 2, 
       62212 -> 11, 62208 -> 15, 82186 -> 3, 35950 -> 29, 35887 -> 86, 35953 -> 
       40, 34349 -> 2, 43048 -> 74, 77412 -> 5, 77415 -> 5, 36821 -> 26, 
       40697 -> 9, 77396 -> 5, 77414 -> 4, 77413 -> 6, 35543 -> 18, 40616 -> 
       9, 3309 -> 8, 34114 -> 11, 903746 -> 2, 902062 -> 8, 40637 -> 103, 
       40636 -> 19, 40619 -> 4, 903688 -> 1, 904900 -> 6, 76227 -> 14, 67599 -> 
       42, 82926 -> 9, 40691 -> 9, 40694 -> 13, 40661 -> 12, 48095 -> 9, 
       904574 -> 3, 902393 -> 5, 964058 -> 7, 903752 -> 1, 73720 -> 9, 22219 -> 
       11, 904638 -> 3, 34849 -> 15, 80045 -> 4, 35904 -> 5, 35759 -> 3, 
       42317 -> 55, 42316 -> 41, 43209 -> 266, 43210 -> 74, 1343 -> 1, 903194 -> 
       1, 902966 -> 1, 902059 -> 8, 1408 -> 18, 904692 -> 9, 40686 -> 12, 
       62381 -> 12, 3496 -> 2, 11416 -> 2, 40658 -> 21, 904652 -> 2, 39606 -> 
       1, 903162 -> 2, 904821 -> 1, 28224 -> 4, 42936 -> 56, 34190 -> 163, 
       902497 -> 2, 56838 -> 10, 867 -> 5, 63357 -> 94, 87406 -> 2, 11390 -> 
       18, 903255 -> 3, 3301 -> 5, 2228 -> 3, 40570 -> 120, 904629 -> 1, 
       40576 -> 50, 40574 -> 44, 44667 -> 8, 21210 -> 44, 63356 -> 7, 40629 -> 
       85, 40572 -> 30, 35969 -> 16, 64883 -> 2, 3348 -> 8, 23276 -> 6, 3637 -> 
       7, 3402 -> 2, 86805 -> 19, 57176 -> 69, 86807 -> 199, 84399 -> 43, 
       40657 -> 8, 35691 -> 5, 35973 -> 6, 902106 -> 12, 21376 -> 1, 37111 -> 
       1, 904009 -> 1, 41190 -> 95, 35982 -> 51, 64746 -> 180, 15686 -> 25, 
       904547 -> 2, 65015 -> 1, 36010 -> 39, 33999 -> 4, 40687 -> 6, 64593 -> 
       65, 903105 -> 6, 904098 -> 1, 988536 -> 1, 73627 -> 4, 40648 -> 4, 
       40669 -> 66, 27078 -> 2, 3285 -> 20, 35873 -> 44, 3337 -> 13, 19400 -> 
       7, 77121 -> 13, 902410 -> 4, 16186 -> 2, 40590 -> 27, 40595 -> 32, 
       73577 -> 7, 902427 -> 1, 904530 -> 11, 903510 -> 2, 35456 -> 2, 904568 -> 
       9, 73574 -> 10, 87256 -> 8, 42440 -> 19, 40649 -> 13, 42433 -> 8, 
       84160 -> 17, 84161 -> 14, 40667 -> 7, 40604 -> 271, 40603 -> 41, 46915 -> 
       1, 73571 -> 22, 62494 -> 22, 62496 -> 19, 1399 -> 8, 42444 -> 161, 
       42437 -> 115, 1437 -> 8, 35022 -> 3, 2959 -> 5, 62906 -> 6, 67575 -> 
       32, 67513 -> 9, 952 -> 22, 969 -> 8, 3120 -> 17, 717 -> 5, 33962 -> 2, 
       525 -> 19, 861 -> 2, 77122 -> 11, 40600 -> 19, 1500 -> 9, 1377 -> 15, 
       433 -> 20, 2870 -> 33, 74476 -> 30, 59102 -> 35, 74440 -> 14, 3334 -> 
       1, 3697 -> 1, 3396 -> 24, 76046 -> 7, 34192 -> 4, 40496 -> 16, 40497 -> 
       139, 72954 -> 4, 42073 -> 3, 33282 -> 96, 34400 -> 17, 904741 -> 1, 
       33280 -> 9, 68772 -> 2, 33236 -> 1, 80440 -> 128, 3381 -> 4, 68047 -> 
       57, 903501 -> 2, 40647 -> 3, 34398 -> 10, 35136 -> 12, 34318 -> 10, 
       34326 -> 36, 64626 -> 4, 64590 -> 33, 34486 -> 9, 12316 -> 13, 34679 -> 
       20, 67406 -> 13, 68046 -> 3, 67508 -> 9, 1012 -> 4, 20320 -> 3, 89802 -> 
       40, 36061 -> 28, 3355 -> 11, 74560 -> 3, 74561 -> 2, 64624 -> 7, 62498 -> 
       10, 40608 -> 10, 903838 -> 1, 904997 -> 1, 27290 -> 6, 859 -> 16, 3333 -> 
       1, 67509 -> 13, 903900 -> 1, 73448 -> 6, 73508 -> 22, 35961 -> 30, 
       3373 -> 1, 2249 -> 17, 83348 -> 39, 3224 -> 4, 4723 -> 38, 80783 -> 5, 
       86746 -> 33, 902366 -> 2, 1814 -> 1, 902727 -> 1, 901880 -> 1, 27536 -> 
       4, 66823 -> 6, 66824 -> 8, 903687 -> 3, 904728 -> 6, 46430 -> 15, 
       80827 -> 12, 3614 -> 1, 902979 -> 4, 89875 -> 14, 15951 -> 34, 27028 -> 
       3, 65646 -> 3, 903119 -> 1, 89488 -> 3, 3711 -> 1, 3710 -> 1, 10815 -> 
       336, 965817 -> 3, 904585 -> 1, 64017 -> 7, 902369 -> 4, 67274 -> 51, 
       67275 -> 117, 67272 -> 59, 40474 -> 31, 40475 -> 141, 42100 -> 2, 
       903442 -> 1, 10582 -> 11, 89568 -> 10, 33945 -> 74, 33944 -> 5, 33285 -> 
       13, 903382 -> 1, 902420 -> 2, 73645 -> 22, 903885 -> 1, 973530 -> 4, 
       78010 -> 16, 71426 -> 19, 904696 -> 1, 33947 -> 6, 843 -> 1, 3138 -> 7,
        43457 -> 3, 904982 -> 1, 15737 -> 44, 4864 -> 27, 33921 -> 22, 43263 -> 
       15, 903220 -> 5, 902945 -> 2, 3221 -> 1, 63358 -> 71, 71731 -> 20, 
       33893 -> 14, 33899 -> 31, 33927 -> 6, 80427 -> 5, 66008 -> 5, 66038 -> 
       3, 35538 -> 31, 77573 -> 172, 40446 -> 10, 77363 -> 90, 904954 -> 4, 
       40447 -> 16, 19032 -> 68, 73463 -> 9, 19030 -> 32, 86724 -> 60, 86728 -> 
       73, 86730 -> 36, 77400 -> 24, 77405 -> 27, 77410 -> 44, 40411 -> 197, 
       63543 -> 24, 63545 -> 27, 63541 -> 28, 43510 -> 91, 58819 -> 67, 58821 -> 
       57, 58823 -> 15, 40489 -> 14, 40399 -> 112, 40407 -> 297, 40442 -> 33, 
       33822 -> 71, 33827 -> 102, 33820 -> 8, 66043 -> 5, 58816 -> 14, 58814 -> 
       23, 86681 -> 75, 86688 -> 23, 66789 -> 17, 66790 -> 17, 35279 -> 16, 
       58822 -> 11, 33825 -> 13, 64888 -> 49, 64765 -> 14, 33791 -> 96, 44565 -> 
       34, 43508 -> 13, 63351 -> 80, 34597 -> 1, 62378 -> 7, 903348 -> 1, 
       33788 -> 12, 88630 -> 18, 979511 -> 1, 975907 -> 1, 56870 -> 9, 42298 -> 
       32, 33783 -> 53, 43280 -> 16, 73743 -> 5, 27260 -> 17, 67341 -> 16, 
       42299 -> 28, 42214 -> 70, 33782 -> 13, 903458 -> 1, 903784 -> 1, 
       903972 -> 1, 3872 -> 4, 62376 -> 2, 62369 -> 7, 42213 -> 22, 33789 -> 
       61, 43079 -> 6, 903755 -> 1, 44561 -> 16, 44297 -> 4, 85806 -> 1, 
       903181 -> 1, 15572 -> 12, 33786 -> 33, 33785 -> 27, 64854 -> 3, 27588 -> 
       15, 828 -> 18, 826 -> 4, 15256 -> 101, 80425 -> 3, 3952 -> 1, 837 -> 2,
        35798 -> 4, 36083 -> 1, 75907 -> 3, 79511 -> 2, 27442 -> 9, 15266 -> 
       7, 966293 -> 5, 2666 -> 14, 903147 -> 1, 926886 -> 2, 956869 -> 1, 
       956860 -> 1, 66152 -> 2, 66153 -> 2, 66155 -> 2, 940309 -> 11, 940308 -> 
       11, 33800 -> 42, 47782 -> 29, 33866 -> 20, 33868 -> 16, 33802 -> 53, 
       902132 -> 1, 34065 -> 12, 66861 -> 2, 3136 -> 30, 33924 -> 3, 33918 -> 
       5, 44331 -> 2, 33773 -> 92, 40351 -> 29, 3888 -> 4, 58516 -> 7, 58548 -> 
       14, 10819 -> 18, 64727 -> 131, 40292 -> 24, 64719 -> 20, 5280 -> 2, 
       43306 -> 14, 3887 -> 1, 57090 -> 1, 40285 -> 12, 3898 -> 3, 27597 -> 2,
        904768 -> 4, 25966 -> 10, 74752 -> 7, 58488 -> 6, 58550 -> 3, 3963 -> 
       16, 424 -> 17, 808 -> 9, 67574 -> 18, 2916 -> 3, 40370 -> 16, 33750 -> 
       43, 65248 -> 112, 818 -> 8, 68048 -> 23, 36162 -> 1, 813 -> 1, 3620 -> 
       8, 831 -> 2, 3953 -> 7, 817 -> 1, 454 -> 6, 1989 -> 2, 3954 -> 1, 706 -> 
       4, 3984 -> 16, 66004 -> 26, 874 -> 17, 33704 -> 16, 1051 -> 11, 27292 -> 
       2, 967757 -> 2, 989644 -> 2, 989624 -> 2, 3891 -> 6, 942240 -> 3, 
       942244 -> 3, 986682 -> 1, 986680 -> 1, 27406 -> 74, 821 -> 2, 3964 -> 
       2, 14470 -> 3, 27394 -> 5, 27404 -> 72, 14472 -> 2, 904703 -> 1, 
       942242 -> 3, 3899 -> 1, 965185 -> 2, 902962 -> 2, 2849 -> 6, 80336 -> 
       37, 34166 -> 16, 40255 -> 12, 40256 -> 33, 40260 -> 15, 40259 -> 5, 
       88582 -> 22, 40271 -> 17, 902394 -> 1, 64615 -> 67, 832 -> 5, 903416 -> 
       3, 40268 -> 4, 3342 -> 5, 904866 -> 1, 982746 -> 1, 33701 -> 9, 33737 -> 
       14, 33700 -> 10, 33703 -> 10, 36164 -> 12, 36014 -> 13, 15617 -> 13, 
       67495 -> 7, 40308 -> 18, 40309 -> 4, 36165 -> 29, 33291 -> 24, 33749 -> 
       11, 33959 -> 26, 76035 -> 20, 76039 -> 15, 11216 -> 33, 11452 -> 13, 
       11472 -> 12, 89085 -> 7, 87398 -> 9, 19036 -> 23, 76043 -> 5, 76049 -> 
       25, 1931 -> 95, 19038 -> 5, 15810 -> 6, 15814 -> 23, 11450 -> 6, 11470 -> 
       6, 15809 -> 7, 15813 -> 9, 88780 -> 4, 89889 -> 2, 89885 -> 4, 3789 -> 
       2, 38172 -> 2, 40349 -> 2, 41029 -> 1, 973482 -> 3, 4025 -> 11, 86686 -> 
       13, 73500 -> 2, 5355 -> 10, 27636 -> 17, 6196 -> 24, 855 -> 5, 64856 -> 
       109, 1071 -> 1, 86663 -> 1, 68526 -> 3, 4556 -> 17, 66835 -> 6, 901916 -> 
       1, 901915 -> 1, 73540 -> 3, 34684 -> 4, 34269 -> 5, 34118 -> 2, 942100 -> 
       4, 86923 -> 3, 36215 -> 19, 36214 -> 11, 74790 -> 18, 74792 -> 9, 
       986676 -> 1, 35933 -> 7, 941467 -> 2, 1176 -> 1, 966295 -> 1, 933281 -> 
       2, 933287 -> 6, 983356 -> 1, 77353 -> 55, 965188 -> 1, 34822 -> 38, 
       40228 -> 31, 77351 -> 2, 27080 -> 4, 86680 -> 5, 22214 -> 17, 29122 -> 
       5, 31471 -> 26, 40335 -> 3, 56366 -> 1, 86919 -> 5, 27310 -> 3, 15616 -> 
       2, 15673 -> 1, 15674 -> 1, 62089 -> 10, 43512 -> 9, 67278 -> 1, 37742 -> 
       18, 33226 -> 7, 46750 -> 4, 27542 -> 41, 35981 -> 1, 41474 -> 3, 44130 -> 
       1, 36020 -> 3, 42686 -> 4, 44489 -> 11, 27412 -> 1, 89644 -> 14, 89624 -> 
       18, 3382 -> 1, 58106 -> 1, 64857 -> 149, 57027 -> 2, 57012 -> 2, 57028 -> 
       2, 57026 -> 2, 57024 -> 2, 66787 -> 1, 13730 -> 9, 86806 -> 14, 982784 -> 
       1, 67757 -> 9, 3526 -> 6, 32650 -> 21, 42511 -> 20, 80498 -> 11, 67866 -> 
       33, 4002 -> 7, 3326 -> 6, 65134 -> 2, 77727 -> 5, 27065 -> 5, 904557 -> 
       1, 67590 -> 16, 35183 -> 2, 35695 -> 7, 984568 -> 2, 86774 -> 6, 37984 -> 
       6, 80497 -> 8, 6306 -> 8, 46434 -> 14, 902799 -> 1, 904763 -> 1, 71424 -> 
       4, 901645 -> 2, 15938 -> 18, 46432 -> 1, 934096 -> 2, 65768 -> 16, 
       65767 -> 25, 42218 -> 37, 42217 -> 25, 64725 -> 30, 16825 -> 15, 40203 -> 
       3, 933284 -> 4, 5846 -> 8, 40202 -> 3, 28368 -> 3, 34237 -> 6, 43089 -> 
       37, 43330 -> 43, 33656 -> 22, 33661 -> 23, 904099 -> 2, 33689 -> 11, 
       63683 -> 9, 63361 -> 16, 63362 -> 21, 44292 -> 18, 967285 -> 1, 902951 -> 
       2, 14473 -> 8, 4656 -> 10, 4854 -> 6, 5452 -> 4, 4657 -> 4, 34873 -> 2,
        74089 -> 24, 933205 -> 1, 933206 -> 1, 44568 -> 20, 903261 -> 1, 
       943306 -> 1, 4139 -> 10, 3685 -> 10, 19081 -> 13, 4131 -> 9, 4114 -> 
       35, 64724 -> 47, 27403 -> 4, 940559 -> 2, 903816 -> 1, 901522 -> 1, 
       42233 -> 14, 34642 -> 8, 36200 -> 2, 902585 -> 1, 941550 -> 2, 944257 -> 
       1, 934297 -> 1, 942030 -> 1, 940362 -> 1, 941669 -> 1, 942105 -> 1, 
       904813 -> 3, 772 -> 7, 760 -> 5, 1361 -> 4, 36221 -> 17, 64713 -> 8, 
       904448 -> 1, 940533 -> 1, 903997 -> 2, 77317 -> 15, 1014 -> 12, 89589 -> 
       6, 16562 -> 102, 66231 -> 1, 42230 -> 11, 4127 -> 11, 780 -> 6, 4128 -> 
       5, 946502 -> 1, 987401 -> 2, 12861 -> 8, 36121 -> 6, 40330 -> 7, 18216 -> 
       1, 20316 -> 11, 934349 -> 3, 10812 -> 43, 3916 -> 1, 33670 -> 3, 77479 -> 
       7, 73435 -> 8, 86731 -> 1, 86732 -> 3, 27324 -> 3, 987507 -> 2, 58882 -> 
       3, 59069 -> 6, 734 -> 17, 902589 -> 2, 901838 -> 1, 987256 -> 1, 10555 -> 
       119, 52816 -> 5, 33932 -> 2, 730 -> 6, 58824 -> 2, 58826 -> 2, 58828 -> 
       2, 37976 -> 22, 46503 -> 25, 33680 -> 2, 33763 -> 3, 64761 -> 58, 
       59068 -> 1, 27654 -> 1, 42141 -> 26, 933589 -> 1, 933579 -> 1, 40145 -> 
       8, 33761 -> 3, 4109 -> 4, 43204 -> 3, 903196 -> 1, 77577 -> 21, 4071 -> 
       4, 692 -> 3, 943367 -> 4, 933642 -> 1, 411 -> 3, 33682 -> 3, 88017 -> 
       4, 89469 -> 5, 934154 -> 1, 42142 -> 62, 40232 -> 6, 27286 -> 3, 77348 -> 
       16, 77345 -> 17, 903966 -> 2, 968848 -> 6, 37148 -> 5, 680 -> 13, 770 -> 
       5, 66178 -> 23, 86707 -> 39, 904600 -> 1, 86685 -> 2, 43135 -> 2, 
       86709 -> 12, 86704 -> 19, 89674 -> 16, 36896 -> 9, 31991 -> 7, 81536 -> 
       4, 27664 -> 1, 28883 -> 3, 66177 -> 2, 89672 -> 21, 928223 -> 1, 
       902276 -> 1, 27021 -> 12, 965815 -> 1, 40213 -> 2, 80482 -> 52, 80484 -> 
       49, 80489 -> 36, 80483 -> 26, 4129 -> 2, 632 -> 1, 965803 -> 1, 40125 -> 
       4, 64767 -> 4, 968772 -> 1, 88310 -> 8, 40107 -> 3, 33554 -> 13, 
       43055 -> 2, 901912 -> 1, 953603 -> 1, 983359 -> 1, 15631 -> 6, 56825 -> 
       20, 36238 -> 17, 64570 -> 65, 4020 -> 8, 29900 -> 11, 40614 -> 34, 
       4029 -> 2, 3981 -> 7, 42146 -> 18, 77877 -> 9, 77867 -> 5, 40146 -> 5, 
       934194 -> 1, 964761 -> 1, 456 -> 7, 4048 -> 58, 969701 -> 1, 75215 -> 
       111, 686 -> 3, 4047 -> 4, 2992 -> 4, 15659 -> 7, 73981 -> 26, 4115 -> 
       2, 407 -> 7, 40105 -> 2, 33567 -> 24, 33565 -> 5, 33571 -> 4, 34573 -> 
       6, 33537 -> 21, 33538 -> 30, 36278 -> 12, 64613 -> 15, 69661 -> 18, 
       77872 -> 6, 665 -> 3, 4137 -> 4, 989203 -> 2, 4079 -> 2, 35784 -> 10, 
       36002 -> 8, 921602 -> 1, 904988 -> 1, 902088 -> 1, 37217 -> 1, 36973 -> 
       28, 40184 -> 39, 40185 -> 28, 788 -> 5, 4178 -> 21, 4190 -> 9, 4197 -> 
       7, 574 -> 3, 629 -> 2, 2918 -> 3, 4032 -> 9, 43052 -> 4, 903454 -> 1, 
       964085 -> 3, 942665 -> 1, 65231 -> 4, 27673 -> 2, 40355 -> 5, 13647 -> 
       32, 19110 -> 13, 56004 -> 1, 56005 -> 7, 36218 -> 1, 4063 -> 1, 580 -> 
       4, 27754 -> 18, 27750 -> 7, 72455 -> 12, 72452 -> 8, 36296 -> 4, 593 -> 
       8, 597 -> 1, 863 -> 1, 922096 -> 1, 922095 -> 1, 900596 -> 1, 644 -> 6,
        905136 -> 2, 903056 -> 1, 552 -> 5, 64599 -> 20, 27753 -> 4, 27371 -> 
       41, 2380 -> 7, 66206 -> 34, 66211 -> 21, 37977 -> 1, 30557 -> 22, 
       33556 -> 2, 5202 -> 6, 62387 -> 3, 796 -> 1, 18351 -> 2, 15860 -> 2, 
       33295 -> 30, 4119 -> 4, 3277 -> 2, 3403 -> 9, 89208 -> 6, 993880 -> 4, 
       63364 -> 10, 63363 -> 16, 77833 -> 2, 75898 -> 5, 27740 -> 12, 40455 -> 
       2, 594 -> 2, 66834 -> 3, 3495 -> 2, 27293 -> 10, 919456 -> 1, 927605 -> 
       2, 89322 -> 5, 72596 -> 3, 72636 -> 2, 37145 -> 15, 33559 -> 4, 33540 -> 
       11, 33539 -> 7, 40063 -> 3, 40059 -> 2, 16196 -> 10, 902412 -> 3, 
       948151 -> 3, 38026 -> 3, 40299 -> 4, 27063 -> 7, 40295 -> 18, 40064 -> 
       17, 40060 -> 3, 5809 -> 8, 721 -> 4, 905173 -> 1, 34183 -> 1, 964741 -> 
       1, 36252 -> 7, 85516 -> 2, 17085 -> 9, 10880 -> 14, 27668 -> 4, 76047 -> 
       12, 26916 -> 1, 65238 -> 12, 36288 -> 7, 37335 -> 2, 77899 -> 7, 33648 -> 
       1, 3346 -> 5, 86712 -> 4, 42174 -> 10, 2618 -> 2, 27255 -> 1, 43290 -> 
       36, 43308 -> 22, 77886 -> 12, 220 -> 3, 17176 -> 3, 36287 -> 3, 89016 -> 
       4, 904329 -> 1, 36314 -> 2, 4041 -> 1, 77325 -> 3, 19480 -> 7, 36309 -> 
       11, 86645 -> 6, 86644 -> 9, 86642 -> 9, 86641 -> 10, 11520 -> 5, 89666 -> 
       2, 1224 -> 5, 77093 -> 6, 77099 -> 10, 973704 -> 3, 940010 -> 1, 
       973720 -> 4, 940019 -> 1, 403 -> 13, 902665 -> 1, 973714 -> 3, 919076 -> 
       1, 938081 -> 1, 904690 -> 1, 42162 -> 7, 33511 -> 9, 4646 -> 1, 77094 -> 
       7, 77100 -> 5, 34736 -> 2, 980132 -> 1, 40024 -> 19, 77097 -> 5, 40023 -> 
       10, 40000 -> 13, 477 -> 11, 19082 -> 5, 40154 -> 2, 66671 -> 3, 56666 -> 
       4, 932216 -> 1, 4067 -> 4, 52653 -> 3, 29282 -> 4, 44215 -> 5, 900674 -> 
       1, 915951 -> 2, 63810 -> 6, 63745 -> 7, 38580 -> 3, 38581 -> 11, 
       910623 -> 1, 987400 -> 1, 781 -> 19, 18788 -> 4, 63510 -> 6, 63511 -> 
       5, 43992 -> 5, 12479 -> 130, 27543 -> 2, 43092 -> 3, 43142 -> 4, 
       916860 -> 1, 919481 -> 4, 42177 -> 6, 42178 -> 12, 339 -> 10, 353 -> 2,
        65121 -> 13, 76033 -> 10, 56802 -> 14, 36317 -> 2, 34715 -> 2, 48178 -> 
       4, 42179 -> 1, 42189 -> 2, 89841 -> 3, 63536 -> 1, 40157 -> 23, 40092 -> 
       34, 37097 -> 3, 41506 -> 1, 43340 -> 4, 5439 -> 8, 28860 -> 13, 74666 -> 
       3, 44697 -> 4, 39850 -> 4, 39849 -> 2, 324 -> 10, 363 -> 2, 1475 -> 4, 
       1488 -> 2, 361 -> 23, 314 -> 8, 5701 -> 5, 86627 -> 1, 631 -> 2, 658 -> 
       2, 34785 -> 2, 1996 -> 1, 88297 -> 6, 327 -> 4, 87401 -> 27, 76676 -> 
       4, 76661 -> 3, 71902 -> 15, 36376 -> 5, 50375 -> 3, 15724 -> 5, 11206 -> 
       6, 66167 -> 11, 66169 -> 10, 36399 -> 5, 2381 -> 3, 402 -> 2, 904611 -> 
       1, 969703 -> 1, 36331 -> 9, 36059 -> 3, 36235 -> 3, 36233 -> 2, 352 -> 
       9, 312 -> 10, 17670 -> 10, 4973 -> 1, 18620 -> 9, 30258 -> 2, 33500 -> 
       5, 335 -> 2, 27339 -> 2, 64453 -> 1, 64396 -> 3, 663 -> 2, 619 -> 3, 
       922099 -> 1, 64126 -> 11, 65534 -> 1, 36410 -> 2, 483 -> 14, 36379 -> 
       4, 249 -> 5, 475 -> 8, 12862 -> 2, 401 -> 4, 1334 -> 8, 2946 -> 4, 
       2935 -> 2, 36390 -> 5, 51196 -> 2, 51193 -> 2, 34381 -> 1, 39506 -> 1, 
       36344 -> 1, 900185 -> 2, 72948 -> 1, 36232 -> 1, 86751 -> 6, 51197 -> 
       1, 27829 -> 6, 316 -> 4, 905427 -> 1, 35410 -> 2, 173 -> 2, 89718 -> 3,
        68868 -> 1, 4972 -> 1, 36411 -> 1, 903969 -> 1, 27718 -> 1, 497 -> 7, 
       66070 -> 1, 80462 -> 1, 902043 -> 1, 39946 -> 2, 17284 -> 13, 902375 -> 
       2, 973139 -> 1, 940035 -> 1, 942111 -> 1, 940791 -> 1, 941282 -> 1, 
       941421 -> 1, 939932 -> 1, 51199 -> 4, 36443 -> 2, 39869 -> 13, 39890 -> 
       17, 39874 -> 13, 51202 -> 3, 51201 -> 2, 41941 -> 11, 51120 -> 3, 
       900179 -> 1, 36433 -> 8, 940451 -> 1, 940585 -> 1, 919480 -> 1, 89956 -> 
       3, 901702 -> 3, 36444 -> 1, 35311 -> 1, 26675 -> 4, 941599 -> 3, 36393 -> 
       1, 65009 -> 1, 77190 -> 1, 46753 -> 1, 915882 -> 1, 915880 -> 1, 
       902251 -> 1, 68445 -> 1, 41127 -> 3, 915646 -> 2, 927835 -> 1, 65090 -> 
       1, 906034 -> 1, 904970 -> 4, 927618 -> 2, 927617 -> 3, 927615 -> 3, 
       903984 -> 2, 75920 -> 1, 14486 -> 9, 89952 -> 2, 53936 -> 2, 53937 -> 
       2, 38046 -> 2, 10797 -> 20, 904328 -> 2, 919562 -> 3, 28638 -> 1, 235 -> 
       4, 293 -> 3, 16862 -> 6, 146 -> 2, 183 -> 10, 915964 -> 1, 208 -> 21, 
       27850 -> 4, 77755 -> 3, 45869 -> 1, 35698 -> 4, 161 -> 2, 972407 -> 1, 
       129 -> 6, 127 -> 3, 986937 -> 1, 641 -> 1, 102 -> 2, 36352 -> 1, 43560 -> 
       2, 995606 -> 1, 905277 -> 2, 903927 -> 1, 987952 -> 1, 987955 -> 1, 
       901822 -> 1, 927940 -> 1, 927942 -> 1, 927944 -> 1, 904227 -> 1, 250 -> 
       2, 903522 -> 1, 20536 -> 1, 989699 -> 1, 994186 -> 1, 994644 -> 1, 
       912300 -> 1, 923701 -> 1, 917562 -> 1], "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Atom[Integer], 4165], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Atom[Integer], 4165], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     4165, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["35918"], 
                  Style[
                   RawBoxes["35918"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[35918]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[35918]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4382"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[35918]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["23828"], 
                  Style[
                   RawBoxes["23828"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[23828]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[23828]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3974"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[23828]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["36908"], 
                  Style[
                   RawBoxes["36908"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[36908]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[36908]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6229"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[36908]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["34359"], 
                  Style[
                   RawBoxes["34359"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[34359]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[34359]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2533"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[34359]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["36903"], 
                  Style[
                   RawBoxes["36903"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[36903]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[36903]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4628"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[36903]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["36904"], 
                  Style[
                   RawBoxes["36904"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[36904]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[36904]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9028"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[36904]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["35914"], 
                  Style[
                   RawBoxes["35914"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[35914]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[35914]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2472"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[35914]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["35926"], 
                  Style[
                   RawBoxes["35926"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[35926]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[35926]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1823"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[35926]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11777"], 
                  Style[
                   RawBoxes["11777"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11777]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11777]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2215"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11777]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["24456"], 
                  Style[
                   RawBoxes["24456"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[24456]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[24456]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1705"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[24456]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["48105"], 
                  Style[
                   RawBoxes["48105"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[48105]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[48105]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4265"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[48105]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["53213"], 
                  Style[
                   RawBoxes["53213"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[53213]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[53213]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3570"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[53213]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11299"], 
                  Style[
                   RawBoxes["11299"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11299]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11299]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["895"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11299]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["53214"], 
                  Style[
                   RawBoxes["53214"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[53214]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[53214]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3021"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[53214]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["80574"], 
                  Style[
                   RawBoxes["80574"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[80574]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[80574]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1150"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[80574]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["43026"], 
                  Style[
                   RawBoxes["43026"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[43026]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[43026]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2628"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[43026]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["89194"], 
                  Style[
                   RawBoxes["89194"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[89194]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[89194]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1203"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[89194]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["26820"], 
                  Style[
                   RawBoxes["26820"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[26820]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[26820]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1054"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[26820]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10807"], 
                  Style[
                   RawBoxes["10807"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10807]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10807]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1802"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10807]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["36886"], 
                  Style[
                   RawBoxes["36886"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[36886]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[36886]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6343"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[36886]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 4165, 1], {1, 4165 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 4165, 1], {1, 4165 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    4165, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    4165, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 4165, 1], {1, 4165 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 4165, 1], {1, 4165 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{208., {265., 271.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{208., {265., 271.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.825100339107289*^9, 3.825100361279022*^9}},
 CellLabel->
  "Out[109]=",ExpressionUUID->"bc89bb88-ea05-47cb-81c6-5de7deb64ca5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"invoice", "[", 
  RowBox[{"Histogram", ",", "\"\<Bottles_Sold\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.825064517451932*^9, 3.825064536538193*^9}, {
  3.8250645752568674`*^9, 3.825064591544206*^9}, {3.8250646969330196`*^9, 
  3.8250646978387985`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"581a94d6-07c5-43a6-b320-ae7f751b8db5"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.588], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.588], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {2.16, 321421.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{41.84357485988791, 
           64.55277078805902}, {-98.40938964826043, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 321421]& ,
        TagBoxNote->"321421"],
       StyleBox["321421", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[321421, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.16, 0}, {4.32, 120415.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{64.05277078805902, 86.76196671623012}, {
           18.00849927510872, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 120415]& ,
        TagBoxNote->"120415"],
       StyleBox["120415", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[120415, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.32, 0}, {6.48, 147670.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{86.26196671623012, 108.97116264440125`}, {
           2.2230522605597685`, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 147670]& ,
        TagBoxNote->"147670"],
       StyleBox["147670", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[147670, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.48, 0}, {8.64, 6927.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{108.47116264440125`, 131.18035857257235`}, {
           83.73804654302768, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6927]& ,
        TagBoxNote->"6927"],
       StyleBox["6927", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6927, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.64, 0}, {10.8, 7746.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{130.68035857257235`, 153.38955450074346`}, {
           83.2637012447369, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7746]& ,
        TagBoxNote->"7746"],
       StyleBox["7746", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7746, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10.8, 0}, {12.96, 213002.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{152.88955450074346`, 
           175.59875042891457`}, {-35.615686479286566`, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 213002]& ,
        TagBoxNote->"213002"],
       StyleBox["213002", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[213002, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{12.96, 0}, {15.12, 953.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{175.09875042891457`, 197.80794635708565`}, {
           87.19804509246505, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 953]& ,
        TagBoxNote->"953"],
       StyleBox["953", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[953, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{15.12, 0}, {17.28, 186.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{197.30794635708565`, 220.0171422852568}, {
           87.6422732289596, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 186]& ,
        TagBoxNote->"186"],
       StyleBox["186", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[186, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{17.28, 0}, {19.44, 5012.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{219.5171422852568, 242.22633821342788`}, {
           84.8471689437931, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5012]& ,
        TagBoxNote->"5012"],
       StyleBox["5012", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5012, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{19.44, 0}, {21.6, 622.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{241.72633821342788`, 264.435534141599}, {
           87.38975241082188, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 622]& ,
        TagBoxNote->"622"],
       StyleBox["622", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[622, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{21.6, 0}, {23.76, 49.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{263.935534141599, 286.6447300697701}, {
           87.72162036676893, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 49]& ,
        TagBoxNote->"49"],
       StyleBox["49", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[49, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{23.76, 0}, {25.92, 60135.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{286.1447300697701, 308.85392599794125`}, {
           52.92123991121258, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 60135]& ,
        TagBoxNote->"60135"],
       StyleBox["60135", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[60135, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{25.92, 0}, {28.08, 45.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{308.35392599794125`, 331.0631219261123}, {
           87.72393707152249, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 45]& ,
        TagBoxNote->"45"],
       StyleBox["45", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[45, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{28.08, 0}, {30.24, 1760.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{330.5631219261123, 353.2723178542834}, {
           86.73064990843493, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1760]& ,
        TagBoxNote->"1760"],
       StyleBox["1760", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1760, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{30.24, 0}, {32.4, 14.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{352.7723178542834, 375.4815137824545}, {
           87.74189153336255, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 14]& ,
        TagBoxNote->"14"],
       StyleBox["14", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[14, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{32.4, 0}, {34.56, 18.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{374.9815137824545, 397.69070971062564`}, {
           87.739574828609, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 18]& ,
        TagBoxNote->"18"],
       StyleBox["18", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{34.56, 0}, {36.72, 7982.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{397.19070971062564`, 419.8999056387967}, {
           83.12701566427702, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7982]& ,
        TagBoxNote->"7982"],
       StyleBox["7982", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7982, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{36.72, 0}, {38.88, 10.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{419.3999056387967, 442.10910156696787`}, {
           87.7442082381161, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{38.88, 0}, {41.04, 52.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{441.60910156696787`, 464.31829749513895`}, {
           87.71988283820376, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 52]& ,
        TagBoxNote->"52"],
       StyleBox["52", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[52, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{41.04, 0}, {43.2, 326.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{463.81829749513895`, 486.5274934233101}, {
           87.5611885625851, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 326]& ,
        TagBoxNote->"326"],
       StyleBox["326", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[326, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{43.2, 0}, {45.36, 326.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{486.0274934233101, 508.7366893514812}, {
           87.5611885625851, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 326]& ,
        TagBoxNote->"326"],
       StyleBox["326", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[326, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{45.36, 0}, {47.52, 9.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{508.2366893514812, 530.9458852796523}, {
           87.7447874143045, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{47.52, 0}, {49.68, 20964.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{530.4458852796523, 553.1550812078234}, {
           75.6081503866078, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 20964]& ,
        TagBoxNote->"20964"],
       StyleBox["20964", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[20964, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{49.68, 0}, {51.84, 76.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{552.6550812078234, 575.3642771359946}, {
           87.70598260968242, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 76]& ,
        TagBoxNote->"76"],
       StyleBox["76", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[76, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{51.84, 0}, {54., 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{574.8642771359946, 597.5734730641657}, {
           87.74826247143483, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{54., 0}, {56.16, 179.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{597.0734730641657, 619.7826689923367}, {
           87.64632746227832, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 179]& ,
        TagBoxNote->"179"],
       StyleBox["179", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[179, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{56.16, 0}, {58.32, 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{619.2826689923367, 641.9918649205079}, {
           87.74768329524645, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{58.32, 0}, {60.48, 3386.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{641.4918649205079, 664.2010608486789}, {
           85.788909426114, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3386]& ,
        TagBoxNote->"3386"],
       StyleBox["3386", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3386, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{60.48, 0}, {62.64, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{663.7010608486789, 686.41025677685}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{62.64, 0}, {64.8, 29.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{685.91025677685, 708.6194527050211}, {
           87.73320389053671, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 29]& ,
        TagBoxNote->"29"],
       StyleBox["29", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[29, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{64.8, 0}, {66.96, 94.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{708.1194527050211, 730.8286486331922}, {
           87.69555743829142, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 94]& ,
        TagBoxNote->"94"],
       StyleBox["94", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[94, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{66.96, 0}, {69.12, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{730.3286486331922, 753.0378445613634}, {
           87.74826247143483, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{69.12, 0}, {71.28, 9.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{752.5378445613634, 775.2470404895345}, {
           87.7447874143045, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{71.28, 0}, {73.44, 2495.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{774.7470404895345, 797.4562364177056}, {
           86.30495540996883, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2495]& ,
        TagBoxNote->"2495"],
       StyleBox["2495", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2495, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{73.44, 0}, {75.6, 13.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{796.9562364177056, 819.6654323458766}, {
           87.74247070955094, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 13]& ,
        TagBoxNote->"13"],
       StyleBox["13", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[13, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{75.6, 0}, {77.76, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{819.1654323458766, 841.8746282740478}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{77.76, 0}, {79.92, 87.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{841.3746282740478, 864.0838242022189}, {
           87.69961167161013, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 87]& ,
        TagBoxNote->"87"],
       StyleBox["87", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[87, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{79.92, 0}, {82.08, 8.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{863.5838242022189, 886.29302013039}, {
           87.74536659049289, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{82.08, 0}, {84.24, 739.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{885.79302013039, 908.5022160585611}, {
           87.32198879678035, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 739]& ,
        TagBoxNote->"739"],
       StyleBox["739", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[739, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{84.24, 0}, {86.4, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{908.0022160585611, 930.7114119867323}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{86.4, 0}, {88.56, 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{930.2114119867323, 952.9206079149034}, {
           87.74652494286967, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{88.56, 0}, {90.72, 370.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{952.4206079149034, 975.1298038430745}, {
           87.53570481029598, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 370]& ,
        TagBoxNote->"370"],
       StyleBox["370", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[370, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{90.72, 0}, {92.88, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{974.6298038430745, 997.3389997712455}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{92.88, 0}, {95.04, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{996.8389997712455, 1019.5481956994167`}, {
           87.74826247143483, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{95.04, 0}, {97.2, 1963.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1019.0481956994167`, 1041.7573916275878`}, {
           86.61307714219191, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1963]& ,
        TagBoxNote->"1963"],
       StyleBox["1963", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1963, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{97.2, 0}, {99.36, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1041.2573916275878`, 1063.966587555759}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{99.36, 0}, {101.52, 20.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1063.466587555759, 1086.17578348393}, {
           87.73841647623222, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 20]& ,
        TagBoxNote->"20"],
       StyleBox["20", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[20, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{101.52, 0}, {103.68, 39.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1085.67578348393, 1108.3849794121013`}, {
           87.72741212865282, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 39]& ,
        TagBoxNote->"39"],
       StyleBox["39", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[39, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{103.68, 0}, {105.84, 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1107.8849794121013`, 1130.5941753402724`}, {
           87.74710411905805, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{108., 0}, {110.16, 301.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1152.3033712684435`, 1175.0125671966143`}, {
           87.57566796729483, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 301]& ,
        TagBoxNote->"301"],
       StyleBox["301", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[301, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{112.32, 0}, {114.48, 33.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1196.7217631247854`, 1219.4309590529567`}, {
           87.73088718578316, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 33]& ,
        TagBoxNote->"33"],
       StyleBox["33", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[33, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{114.48, 0}, {116.64, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1218.9309590529567`, 1241.6401549811278`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{118.8, 0}, {120.96, 1345.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1263.349350909299, 1286.05854683747}, {
           86.97100802661646, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1345]& ,
        TagBoxNote->"1345"],
       StyleBox["1345", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1345, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{125.28, 0}, {127.44, 42.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1329.9769386938121`, 1352.6861346219832`}, {
           87.72567460008766, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 42]& ,
        TagBoxNote->"42"],
       StyleBox["42", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[42, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{127.44, 0}, {129.6, 2.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{1352.1861346219832`, 1374.8953305501543`}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{129.6, 0}, {131.76, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1374.3953305501543`, 1397.1045264783254`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{131.76, 0}, {133.92, 155.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1396.6045264783254`, 1419.3137224064965`}, {
           87.66022769079967, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 155]& ,
        TagBoxNote->"155"],
       StyleBox["155", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[155, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{133.92, 0}, {136.08, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1418.8137224064965`, 1441.5229183346678`}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{136.08, 0}, {138.24, 42.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1441.0229183346678`, 1463.7321142628389`}, {
           87.72567460008766, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 42]& ,
        TagBoxNote->"42"],
       StyleBox["42", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[42, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{138.24, 0}, {140.4, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1463.2321142628389`, 1485.94131019101}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{142.56, 0}, {144.72, 589.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1507.650506119181, 1530.3597020473521`}, {
           87.40886522503874, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 589]& ,
        TagBoxNote->"589"],
       StyleBox["589", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[589, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{144.72, 0}, {146.88, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1529.8597020473521`, 1552.5688979755232`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{149.04, 0}, {151.2, 284.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1574.2780939036943`, 1596.9872898318654`}, {
           87.58551396249746, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 284]& ,
        TagBoxNote->"284"],
       StyleBox["284", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[284, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{155.52, 0}, {157.68, 110.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1640.9056816882078`, 1663.6148776163789`}, {
           87.68629061927719, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 110]& ,
        TagBoxNote->"110"],
       StyleBox["110", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[110, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{159.84, 0}, {162., 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1685.32407354455, 1708.033269472721}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{162., 0}, {164.16, 19.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{1707.533269472721, 1730.2424654008921`}, {
           87.7389956524206, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 19]& ,
        TagBoxNote->"19"],
       StyleBox["19", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[19, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{164.16, 0}, {166.32, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1729.7424654008921`, 1752.4516613290632`}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{166.32, 0}, {168.48, 142.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1751.9516613290632`, 1774.6608572572343`}, {
           87.66775698124873, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 142]& ,
        TagBoxNote->"142"],
       StyleBox["142", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{168.48, 0}, {170.64, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1774.1608572572343`, 1796.8700531854054`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{172.8, 0}, {174.96, 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1818.5792491135767`, 1841.2884450417478`}, {
           87.74652494286967, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{174.96, 0}, {177.12, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1840.7884450417478`, 1863.4976409699188`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{179.28, 0}, {181.44, 391.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1885.20683689809, 1907.916032826261}, {
           87.5235421103398, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 391]& ,
        TagBoxNote->"391"],
       StyleBox["391", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[391, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{185.76, 0}, {187.92, 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1951.8344246826032`, 1974.5436206107743`}, {
           87.74710411905805, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{187.92, 0}, {190.08, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1974.0436206107743`, 1996.7528165389456`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{190.08, 0}, {192.24, 146.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1996.2528165389456`, 2018.9620124671167`}, {
           87.66544027649518, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 146]& ,
        TagBoxNote->"146"],
       StyleBox["146", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[146, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{196.56, 0}, {198.72, 11.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2062.880404323459, 2085.58960025163}, {
           87.74362906192772, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{200.88, 0}, {203.04, 1.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{2107.2987961798012`, 2130.0079921079723`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{203.04, 0}, {205.2, 47.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2129.5079921079723`, 2152.2171880361434`}, {
           87.72277871914571, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 47]& ,
        TagBoxNote->"47"],
       StyleBox["47", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[47, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{207.36, 0}, {209.52, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2173.926383964315, 2196.635579892486}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{209.52, 0}, {211.68, 29.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2196.135579892486, 2218.844775820657}, {
           87.73320389053671, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 29]& ,
        TagBoxNote->"29"],
       StyleBox["29", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[29, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{216., 0}, {218.16, 67.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2262.7631676769993`, 2285.47236360517}, {
           87.71119519537793, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 67]& ,
        TagBoxNote->"67"],
       StyleBox["67", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[67, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{220.32, 0}, {222.48, 8.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2307.181559533341, 2329.890755461512}, {
           87.74536659049289, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{226.8, 0}, {228.96, 28.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2373.8091473178547`, 2396.518343246026}, {
           87.7337830667251, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 28]& ,
        TagBoxNote->"28"],
       StyleBox["28", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[28, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{233.28, 0}, {235.44, 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2440.436735102368, 2463.145931030539}, {
           87.74768329524645, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{239.76, 0}, {241.92, 287.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2507.064322886881, 2529.7735188150523`}, {
           87.58377643393229, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 287]& ,
        TagBoxNote->"287"],
       StyleBox["287", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[287, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{244.08, 0}, {246.24, 9.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2551.4827147432234`, 2574.1919106713945`}, {
           87.7447874143045, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{246.24, 0}, {248.4, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2573.6919106713945`, 2596.4011065995655`}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{250.56, 0}, {252.72, 26.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{2618.1103025277366`, 2640.8194984559077`}, {
           87.73494141910189, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 26]& ,
        TagBoxNote->"26"],
       StyleBox["26", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[26, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{257.04, 0}, {259.2, 11.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2684.7378903122503`, 2707.447086240421}, {
           87.74362906192772, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{263.52, 0}, {265.68, 29.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2751.365478096763, 2774.0746740249347`}, {
           87.73320389053671, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 29]& ,
        TagBoxNote->"29"],
       StyleBox["29", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[29, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{267.84, 0}, {270., 16.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2795.7838699531053`, 2818.493065881277}, {
           87.74073318098577, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 16]& ,
        TagBoxNote->"16"],
       StyleBox["16", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{274.32, 0}, {276.48, 28.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2862.411457737619, 2885.12065366579}, {
           87.7337830667251, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 28]& ,
        TagBoxNote->"28"],
       StyleBox["28", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[28, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{280.8, 0}, {282.96, 7.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2929.0390455221323`, 2951.7482414503033`}, {
           87.74594576668127, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{287.28, 0}, {289.44, 109.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2995.6666333066455`, 3018.3758292348166`}, {
           87.68686979546557, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 109]& ,
        TagBoxNote->"109"],
       StyleBox["109", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[109, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{293.76, 0}, {295.92, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3062.2942210911588`, 3085.0034170193303`}, {
           87.74826247143483, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{298.08, 0}, {300.24, 301.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3106.712612947501, 3129.4218088756725`}, {
           87.57566796729483, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 301]& ,
        TagBoxNote->"301"],
       StyleBox["301", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[301, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{304.56, 0}, {306.72, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3173.3402007320146`, 3196.0493966601857`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{311.04, 0}, {313.2, 17.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3239.967788516528, 3262.676984444699}, {
           87.74015400479739, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 17]& ,
        TagBoxNote->"17"],
       StyleBox["17", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[17, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{315.36, 0}, {317.52, 1.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{3284.38618037287, 3307.095376301041}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{317.52, 0}, {319.68, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3306.595376301041, 3329.304572229212}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{324., 0}, {326.16, 11.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3373.2229640855544`, 3395.932160013726}, {
           87.74362906192772, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{328.32, 0}, {330.48, 11.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3417.6413559418966`, 3440.350551870068}, {
           87.74362906192772, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{334.8, 0}, {336.96, 18.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3484.2689437264103`, 3506.978139654581}, {
           87.739574828609, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 18]& ,
        TagBoxNote->"18"],
       StyleBox["18", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{341.28, 0}, {343.44, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3550.896531510923, 3573.6057274390946`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{347.76, 0}, {349.92, 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3617.524119295437, 3640.233315223608}, {
           87.74652494286967, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{352.08, 0}, {354.24, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3661.942511151779, 3684.65170707995}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{358.56, 0}, {360.72, 92.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3728.570098936292, 3751.2792948644637`}, {
           87.6967157906682, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 92]& ,
        TagBoxNote->"92"],
       StyleBox["92", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[92, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{365.04, 0}, {367.2, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3795.197686720806, 3817.9068826489765`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{371.52, 0}, {373.68, 8.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3861.8252745053187`, 3884.5344704334902`}, {
           87.74536659049289, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{378., 0}, {380.16, 3.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{3928.4528622898324`, 3951.1620582180035`}, {
           87.74826247143483, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{382.32, 0}, {384.48, 12.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3972.8712541461746`, 3995.5804500743457`}, {
           87.74304988573932, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 12]& ,
        TagBoxNote->"12"],
       StyleBox["12", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{388.8, 0}, {390.96, 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4039.498841930688, 4062.2080378588585`}, {
           87.74768329524645, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{395.28, 0}, {397.44, 9.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4106.1264297152, 4128.835625643372}, {
           87.7447874143045, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{401.76, 0}, {403.92, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4172.754017499714, 4195.463213427885}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{406.08, 0}, {408.24, 10.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4217.172409356056, 4239.881605284228}, {
           87.7442082381161, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{412.56, 0}, {414.72, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4283.79999714057, 4306.509193068741}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{419.04, 0}, {421.2, 38.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4350.4275849250835`, 4373.136780853254}, {
           87.72799130484121, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 38]& ,
        TagBoxNote->"38"],
       StyleBox["38", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[38, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{425.52, 0}, {427.68, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4417.055172709596, 4439.764368637768}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{427.68, 0}, {429.84, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4439.264368637768, 4461.973564565938}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{432., 0}, {434.16, 10.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4483.68276049411, 4506.391956422281}, {
           87.7442082381161, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{436.32, 0}, {438.48, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4528.101152350451, 4550.810348278623}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{442.8, 0}, {444.96, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4594.728740134965, 4617.437936063136}, {
           87.74826247143483, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{449.28, 0}, {451.44, 14.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4661.356327919478, 4684.065523847649}, {
           87.74189153336255, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 14]& ,
        TagBoxNote->"14"],
       StyleBox["14", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[14, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{455.76, 0}, {457.92, 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4727.983915703991, 4750.693111632163}, {
           87.74652494286967, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{460.08, 0}, {462.24, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4772.402307560334, 4795.111503488505}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{466.56, 0}, {468.72, 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4839.029895344847, 4861.739091273019}, {
           87.74768329524645, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{479.52, 0}, {481.68, 48.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{4972.285070913874, 4994.994266842045}, {
           87.72219954295731, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 48]& ,
        TagBoxNote->"48"],
       StyleBox["48", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[48, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{488.16, 0}, {490.32, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{5061.121854626558, 5083.83105055473}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{490.32, 0}, {492.48, 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{5083.33105055473, 5106.0402464829}, {
           87.74652494286967, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{503.28, 0}, {505.44, 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{5216.586226123756, 5239.295422051927}, {
           87.74768329524645, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{509.76, 0}, {511.92, 8.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{5283.213813908269, 5305.9230098364405`}, {
           87.74536659049289, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{514.08, 0}, {516.24, 11.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{5327.632205764612, 5350.341401692783}, {
           87.74362906192772, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{520.56, 0}, {522.72, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{5394.259793549125, 5416.968989477296}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{527.04, 0}, {529.2, 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{5460.887381333638, 5483.59657726181}, {
           87.74710411905805, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{533.52, 0}, {535.68, 1.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{5527.514969118151, 5550.224165046322}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{537.84, 0}, {540., 16.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{5571.9333609744945`, 5594.642556902665}, {
           87.74073318098577, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 16]& ,
        TagBoxNote->"16"],
       StyleBox["16", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{544.32, 0}, {546.48, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{5638.560948759007, 5661.270144687179}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{550.8, 0}, {552.96, 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{5705.18853654352, 5727.897732471692}, {
           87.74768329524645, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{557.28, 0}, {559.44, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{5771.816124328034, 5794.525320256205}, {
           87.74826247143483, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{563.76, 0}, {565.92, 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{5838.4437121125475`, 5861.152908040718}, {
           87.74652494286967, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{568.08, 0}, {570.24, 9.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{5882.86210396889, 5905.57129989706}, {
           87.7447874143045, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{574.56, 0}, {576.72, 19.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{5949.489691753402, 5972.198887681574}, {
           87.7389956524206, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 19]& ,
        TagBoxNote->"19"],
       StyleBox["19", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[19, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{581.04, 0}, {583.2, 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{6016.117279537915, 6038.826475466088}, {
           87.74710411905805, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{587.52, 0}, {589.68, 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{6082.744867322429, 6105.4540632506}, {
           87.74652494286967, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{594., 0}, {596.16, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{6149.372455106943, 6172.081651035113}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{598.32, 0}, {600.48, 108.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{6193.790846963286, 6216.500042891456}, {
           87.68744897165396, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 108]& ,
        TagBoxNote->"108"],
       StyleBox["108", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[108, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{622.08, 0}, {624.24, 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{6438.092002173167, 6460.801198101339}, {
           87.74710411905805, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{628.56, 0}, {630.72, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{6504.71958995768, 6527.4287858858515`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{635.04, 0}, {637.2, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{6571.347177742194, 6594.056373670365}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{641.52, 0}, {643.68, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{6637.9747655267065`, 6660.683961454878}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{648., 0}, {650.16, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{6704.60235331122, 6727.311549239391}, {
           87.74826247143483, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{658.8, 0}, {660.96, 8.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{6815.648332952075, 6838.357528880248}, {
           87.74536659049289, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{671.76, 0}, {673.92, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{6948.903508521103, 6971.612704449273}, {
           87.74826247143483, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{676.08, 0}, {678.24, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{6993.321900377446, 7016.031096305616}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{682.56, 0}, {684.72, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{7059.949488161958, 7082.65868409013}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{689.04, 0}, {691.2, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{7126.577075946471, 7149.286271874643}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{706.32, 0}, {708.48, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{7304.250643371841, 7326.9598393000115`}, {
           87.74826247143483, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{719.28, 0}, {721.44, 15.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{7437.505818940866, 7460.215014869039}, {
           87.74131235717417, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 15]& ,
        TagBoxNote->"15"],
       StyleBox["15", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[15, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{730.08, 0}, {732.24, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{7548.551798581723, 7571.260994509894}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{743.04, 0}, {745.2, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{7681.806974150749, 7704.516170078921}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{749.52, 0}, {751.68, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{7748.4345619352625`, 7771.143757863433}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{756., 0}, {758.16, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{7815.062149719776, 7837.771345647947}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{766.8, 0}, {768.96, 15.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{7926.108129360631, 7948.817325288803}, {
           87.74131235717417, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 15]& ,
        TagBoxNote->"15"],
       StyleBox["15", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[15, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{779.76, 0}, {781.92, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{8059.363304929658, 8082.072500857828}, {
           87.74826247143483, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{810., 0}, {812.16, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{8370.292047924053, 8393.001243852224}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{814.32, 0}, {816.48, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{8414.710439780396, 8437.419635708568}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{827.28, 0}, {829.44, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{8547.965615349422, 8570.674811277595}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{838.08, 0}, {840.24, 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{8659.01159499028, 8681.720790918449}, {
           87.74652494286967, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{851.04, 0}, {853.2, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{8792.266770559305, 8814.975966487476}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{864., 0}, {866.16, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{8925.521946128332, 8948.231142056502}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{887.76, 0}, {889.92, 1.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{9169.823101338214, 9192.532297266383}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{898.56, 0}, {900.72, 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{9280.869080979068, 9303.578276907241}, {
           87.74652494286967, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{911.52, 0}, {913.68, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{9414.124256548095, 9436.833452476267}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{959.04, 0}, {961.2, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{9902.72656696786, 9925.435762896032}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{969.84, 0}, {972., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{10013.772546608716`, 10036.481742536887`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{982.8, 0}, {984.96, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{10147.027722177741`, 10169.736918105913`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{995.76, 0}, {997.92, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{10280.282897746769`, 10302.99209367494}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1019.52, 0}, {1021.68, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{10524.58405295665, 10547.293248884822`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1054.08, 0}, {1056.24, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{10879.931187807388`, 10902.640383735561`}, {
           87.74884164762322, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1077.84, 0}, {1080., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{11124.232343017271`, 11146.941538945443`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1114.56, 0}, {1116.72, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{11501.78867379618, 11524.497869724351`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1188., 0}, {1190.16, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{12256.901335353998`, 12279.61053128217}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1198.8, 0}, {1200.96, 10.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{12367.947314994854`, 12390.656510923025`}, {
           87.7442082381161, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1259.28, 0}, {1261.44, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{12989.804800983644`, 13012.513996911815`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1296., 0}, {1298.16, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{13367.361131762553`, 13390.070327690724`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1313.28, 0}, {1315.44, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{13545.034699187921`, 13567.743895116093`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1438.56, 0}, {1440.72, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{14833.168063021845`, 14855.877258950019`}, {
           87.74826247143483, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1451.52, 0}, {1453.68, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{14966.423238590873`, 14989.132434519044`}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1499.04, 0}, {1501.2, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{15455.025549010637`, 15477.734744938809`}, {
           87.74826247143483, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2157.84, 0}, {2160., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{22228.830307102828`, 22251.539503031}, {
           87.7494208238116, 88.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.6048, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->NCache[{{0, 
      Rational[756, 25]}, {All, All}}, {{0, 30.24}, {All, All}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.825064527646143*^9, {3.825064675305279*^9, 3.8250646997779555`*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"4b9aa859-025a-405f-a29a-e62f59695ef5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"invoice", "[", 
  RowBox[{"Max", ",", "\"\<Bottles_Sold\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.825064517451932*^9, 3.825064536538193*^9}, {
  3.8250645752568674`*^9, 3.825064591544206*^9}, {3.8250646969330196`*^9, 
  3.8250646978387985`*^9}, {3.82507227979559*^9, 3.8250722841309752`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"b587c583-9843-4e4c-8c74-c0f2d7c2753f"],

Cell[BoxData["2160"], "Output",
 CellChangeTimes->{3.8250722859331403`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"fc6df43e-5e17-456a-a61a-65205a0ab1ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"invoice", "[", 
  RowBox[{"Min", ",", "\"\<Bottles_Sold\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.825064517451932*^9, 3.825064536538193*^9}, {
  3.8250645752568674`*^9, 3.825064591544206*^9}, {3.8250646969330196`*^9, 
  3.8250646978387985`*^9}, {3.82507227979559*^9, 3.8250722939123993`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"14c4369c-8a7a-4b18-aaba-192d6d077238"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8250722943870897`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"e23f39ed-6f67-40a1-a1ed-670b753820a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"item", "[", 
  RowBox[{"Histogram", ",", "\"\<Bottle_Cost\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8250726368866653`*^9, 3.8250726624891143`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"7adafa4f-d54d-41fe-b047-9f29053bdbc7"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.602], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.602], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.4955, 0}, {1.994, 274.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{30.196757405924743`, 57.558246597277815`}, {
           42.65126906544293, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 274]& ,
        TagBoxNote->"274"],
       StyleBox["274", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[274, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.994, 0}, {2.4925, 1062.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{57.058246597277815`, 
           84.41973578863092}, {-98.55238048357525, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1062]& ,
        TagBoxNote->"1062"],
       StyleBox["1062", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1062, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.4925, 0}, {2.991, 1077.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{83.91973578863092, 
           111.281224979984}, {-101.24026721356923`, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1077]& ,
        TagBoxNote->"1077"],
       StyleBox["1077", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1077, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.991, 0}, {3.4895, 581.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{110.781224979984, 
           138.14271417133705`}, {-12.360812675100945`, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 581]& ,
        TagBoxNote->"581"],
       StyleBox["581", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[581, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.4895, 0}, {3.9880000000000004`, 361.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{137.64271417133705`, 165.0042033626902}, {
           27.061526031477726`, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 361]& ,
        TagBoxNote->"361"],
       StyleBox["361", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[361, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.9880000000000004`, 0}, {4.4865, 236.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{164.5042033626902, 191.86569255404328`}, {
           49.46058211476107, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 236]& ,
        TagBoxNote->"236"],
       StyleBox["236", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[236, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.4865, 0}, {4.985, 137.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{191.36569255404328`, 218.72718174539636`}, {
           67.20063453272147, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 137]& ,
        TagBoxNote->"137"],
       StyleBox["137", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[137, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.985, 0}, {5.4835, 122.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{218.22718174539636`, 245.58867093674945`}, {
           69.88852126271547, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 122]& ,
        TagBoxNote->"122"],
       StyleBox["122", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[122, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.4835, 0}, {5.982, 71.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{245.08867093674945`, 272.45016012810254`}, {
           79.02733614469508, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 71]& ,
        TagBoxNote->"71"],
       StyleBox["71", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[71, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.982, 0}, {6.4805, 53.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{271.95016012810254`, 299.3116493194556}, {
           82.25280022068787, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 53]& ,
        TagBoxNote->"53"],
       StyleBox["53", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[53, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.4805, 0}, {6.979, 17.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{298.8116493194556, 326.17313851080866`}, {
           88.70372837267348, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 17]& ,
        TagBoxNote->"17"],
       StyleBox["17", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[17, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.979, 0}, {7.4775, 29.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{325.67313851080866`, 353.03462770216174`}, {
           86.55341898867827, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 29]& ,
        TagBoxNote->"29"],
       StyleBox["29", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[29, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.4775, 0}, {7.976, 23.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{352.53462770216174`, 379.89611689351483`}, {
           87.62857368067588, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 23]& ,
        TagBoxNote->"23"],
       StyleBox["23", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[23, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.976, 0}, {8.4745, 7.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{379.39611689351483`, 406.757606084868}, {
           90.49565285933615, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.4745, 0}, {8.973, 20.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{406.257606084868, 433.61909527622106`}, {
           88.16615102667468, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 20]& ,
        TagBoxNote->"20"],
       StyleBox["20", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[20, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.973, 0}, {9.4715, 12.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{433.11909527622106`, 460.48058446757415`}, {
           89.5996906160048, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 12]& ,
        TagBoxNote->"12"],
       StyleBox["12", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9.4715, 0}, {9.97, 10.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{459.98058446757415`, 487.34207365892723`}, {
           89.95807551333735, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9.97, 0}, {10.4685, 9.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{486.84207365892723`, 514.2035628502803}, {
           90.13726796200362, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10.4685, 0}, {10.967, 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{513.7035628502803, 541.0650520416334}, {
           90.85403775666867, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10.967, 0}, {11.4655, 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{540.5650520416334, 567.9265412329864}, {
           90.67484530800242, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{11.4655, 0}, {11.964, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{567.4265412329864, 594.7880304243396}, {
           91.21242265400122, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{11.964, 0}, {12.4625, 7.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{594.2880304243396, 621.6495196156926}, {
           90.49565285933615, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{12.4625, 0}, {12.961, 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{621.1495196156926, 648.5110088070458}, {
           90.85403775666867, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{12.961, 0}, {13.4595, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{648.0110088070458, 675.3724979983988}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{13.4595, 0}, {13.958, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{674.8724979983988, 702.2339871897518}, {
           91.21242265400122, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{14.4565, 0}, {14.955, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{728.595476381105, 755.956965572458}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{14.955, 0}, {15.4535, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{755.456965572458, 782.8184547638111}, {
           91.21242265400122, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{15.4535, 0}, {15.952, 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{782.3184547638111, 809.6799439551642}, {
           91.03323020533495, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{15.952, 0}, {16.4505, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{809.1799439551642, 836.5414331465174}, {
           91.39161510266749, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{16.4505, 0}, {16.949, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{836.0414331465174, 863.4029223378705}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{17.4475, 0}, {17.946, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{889.7644115292235, 917.1259007205766}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{18.4445, 0}, {18.943, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{943.4873899119297, 970.8488791032828}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{19.4415, 0}, {19.94, 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{997.2103682946359, 1024.5718574859889`}, {
           90.85403775666867, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{19.94, 0}, {20.4385, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1024.0718574859889`, 1051.433346677342}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{20.4385, 0}, {20.937, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1050.933346677342, 1078.294835868695}, {
           91.39161510266749, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{23.4295, 0}, {23.928, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1212.1022818254603`, 1239.4637710168136`}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{27.4175, 0}, {27.916, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1426.994195356285, 1454.355684547638}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{27.916, 0}, {28.4145, 1.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{1453.855684547638, 1481.2171737389913`}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{29.4115, 0}, {29.91, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1534.4401521216973`, 1561.8016413130504`}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{31.4055, 0}, {31.904, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1641.8861088871097`, 1669.2475980784627`}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{32.4025, 0}, {32.901, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1695.609087269816, 1722.9705764611692`}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{35.892, 0}, {36.3905, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1883.6395116092876`, 1911.0010008006407`}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{39.88, 0}, {40.3785, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2098.5314251401123`, 2125.8929143314654`}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{56.3305, 0}, {56.829, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2984.960568454764, 3012.322057646117}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{60.3185, 0}, {60.817, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3199.8524819855884`, 3227.213971176942}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{61.3155, 0}, {61.814, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3253.575460368295, 3280.936949559648}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{198.403, 0}, {198.9015, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{10640.484987990394`, 10667.846477181747`}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{226.8175, 0}, {227.316, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{12171.589871897519`, 12198.951361088873`}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{499.9955, 0}, {500.49399999999997`, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{26891.685948759008`, 26919.04743795036}, {
           91.57080755133374, 92.25000000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.37586, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{1.4955, 7.4775}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8250726631592855`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"e918a3dc-3b48-421a-b124-8190c6cef511"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"item", "[", 
  RowBox[{"Histogram", ",", "\"\<Bottle_Retail_Price\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8250726368866653`*^9, 3.8250726936210065`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"2dc98f9a-814b-459d-9636-c239e059f427"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.602], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.602], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.24265, 0}, {2.9901999999999997`, 269.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{30.196757405924757`, 57.558246597277844`}, {
           45.10635051172495, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 269]& ,
        TagBoxNote->"269"],
       StyleBox["269", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[269, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.9901999999999997`, 0}, {3.7377499999999997`, 
            1002.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{57.058246597277844`, 
           84.41973578863093}, {-81.99325943216209, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1002]& ,
        TagBoxNote->"1002"],
       StyleBox["1002", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1002, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.7377499999999997`, 0}, {4.4853, 1113.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{83.91973578863093, 
           111.28122497998402`}, {-101.24026721356927`, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1113]& ,
        TagBoxNote->"1113"],
       StyleBox["1113", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1113, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.4853, 0}, {5.232849999999999, 605.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{110.78122497998402`, 
           138.14271417133708`}, {-13.154862231994073`, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 605]& ,
        TagBoxNote->"605"],
       StyleBox["605", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[605, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.232849999999999, 0}, {5.9803999999999995`, 360.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{137.64271417133708`, 165.0042033626902}, {
           29.32727206030104, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 360]& ,
        TagBoxNote->"360"],
       StyleBox["360", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[360, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.9803999999999995`, 0}, {6.72795, 238.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{164.5042033626902, 191.86569255404328`}, {
           50.48164097319902, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 238]& ,
        TagBoxNote->"238"],
       StyleBox["238", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[238, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.72795, 0}, {7.4754999999999985`, 138.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{191.36569255404328`, 218.7271817453963}, {
           67.8212876231154, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 138]& ,
        TagBoxNote->"138"],
       StyleBox["138", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[138, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.4754999999999985`, 0}, {8.223049999999999, 121.}, 
            "RoundingRadius" -> 0]},
          ImageSizeCache->{{218.2271817453963, 245.5886709367494}, {
           70.76902755360118, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 121]& ,
        TagBoxNote->"121"],
       StyleBox["121", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[121, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.223049999999999, 0}, {8.9706, 72.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{245.0886709367494, 272.45016012810254`}, {
           79.26545441206021, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 72]& ,
        TagBoxNote->"72"],
       StyleBox["72", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[72, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.9706, 0}, {9.71815, 53.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{271.95016012810254`, 299.3116493194556}, {
           82.55998727554432, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 53]& ,
        TagBoxNote->"53"],
       StyleBox["53", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[53, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.71815, 0}, {10.465699999999998`, 17.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{298.8116493194556, 326.17313851080866`}, {
           88.80226006951422, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 17]& ,
        TagBoxNote->"17"],
       StyleBox["17", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[17, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{10.465699999999998`, 0}, {11.213249999999999`, 29.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{325.67313851080866`, 353.03462770216174`}, {
           86.72150247152425, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 29]& ,
        TagBoxNote->"29"],
       StyleBox["29", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[29, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{11.213249999999999`, 0}, {11.960799999999999`, 23.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{352.53462770216174`, 379.8961168935149}, {
           87.76188127051924, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 23]& ,
        TagBoxNote->"23"],
       StyleBox["23", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[23, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{11.960799999999999`, 0}, {12.708349999999998`, 7.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{379.3961168935149, 406.7576060848679}, {
           90.53622473450585, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{12.708349999999998`, 0}, {13.455899999999998`, 20.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{406.2576060848679, 433.619095276221}, {
           88.28207067001672, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 20]& ,
        TagBoxNote->"20"],
       StyleBox["20", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[20, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{13.455899999999998`, 0}, {14.203449999999998`, 12.}, 
            "RoundingRadius" -> 0]},
          ImageSizeCache->{{433.119095276221, 460.4805844675741}, {
           89.66924240201004, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 12]& ,
        TagBoxNote->"12"],
       StyleBox["12", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{14.203449999999998`, 0}, {14.950999999999999`, 10.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{459.9805844675741, 487.34207365892723`}, {
           90.01603533500837, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{14.950999999999999`, 0}, {15.69855, 8.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{486.84207365892723`, 514.2035628502803}, {
           90.3628282680067, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{15.69855, 0}, {16.446099999999998`, 5.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{513.7035628502803, 541.0650520416333}, {
           90.88301766750418, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{16.446099999999998`, 0}, {17.193649999999998`, 6.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{540.5650520416333, 567.9265412329864}, {
           90.70962120100502, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{17.193649999999998`, 0}, {17.9412, 3.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{567.4265412329864, 594.7880304243396}, {
           91.2298106005025, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{17.9412, 0}, {18.68875, 7.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{594.2880304243396, 621.6495196156926}, {
           90.53622473450585, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{18.68875, 0}, {19.4363, 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{621.1495196156926, 648.5110088070458}, {
           90.88301766750418, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{19.4363, 0}, {20.18385, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{648.0110088070458, 675.3724979983989}, {
           91.40320706700167, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{20.18385, 0}, {20.9314, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{674.8724979983989, 702.2339871897519}, {
           91.2298106005025, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{21.67895, 0}, {22.4265, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{728.5954763811051, 755.9569655724581}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{22.4265, 0}, {23.174049999999998`, 3.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{755.4569655724581, 782.8184547638111}, {
           91.2298106005025, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{23.174049999999998`, 0}, {23.921599999999998`, 4.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{782.3184547638111, 809.6799439551643}, {
           91.05641413400335, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{23.921599999999998`, 0}, {24.66915, 2.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{809.1799439551643, 836.5414331465173}, {
           91.40320706700167, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{24.66915, 0}, {25.4167, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{836.0414331465173, 863.4029223378705}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{26.16425, 0}, {26.9118, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{889.7644115292236, 917.1259007205766}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{27.65935, 0}, {28.4069, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{943.4873899119298, 970.8488791032828}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{29.15445, 0}, {29.901999999999997`, 5.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{997.2103682946359, 1024.5718574859889`}, {
           90.88301766750418, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{29.901999999999997`, 0}, {30.649549999999998`, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1024.0718574859889`, 1051.433346677342}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{30.649549999999998`, 0}, {31.3971, 2.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1050.933346677342, 1078.294835868695}, {
           91.40320706700167, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{35.13484999999999, 0}, {35.8824, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1212.1022818254605`, 1239.4637710168136`}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{41.115249999999996`, 0}, {41.86279999999999, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1426.9941953562852`, 1454.3556845476382`}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{41.86279999999999, 0}, {42.61035, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1453.8556845476382`, 1481.2171737389913`}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{44.10544999999999, 0}, {44.852999999999994`, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1534.4401521216973`, 1561.8016413130504`}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{47.09564999999999, 0}, {47.843199999999996`, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1641.88610888711, 1669.247598078463}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{48.59074999999999, 0}, {49.3383, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1695.609087269816, 1722.970576461169}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{53.82359999999999, 0}, {54.571149999999996`, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1883.6395116092876`, 1911.0010008006407`}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{59.803999999999995`, 0}, {60.55154999999999, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2098.5314251401123`, 2125.8929143314654`}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{84.47314999999999, 0}, {85.2207, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2984.960568454764, 3012.322057646117}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{90.45354999999999, 0}, {91.2011, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3199.852481985589, 3227.213971176942}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{91.94864999999999, 0}, {92.69619999999999, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3253.575460368295, 3280.936949559648}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{297.5249, 0}, {298.27245, 1.}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{10640.484987990396`, 10667.846477181749`}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{340.13525, 0}, {340.8828, 1.}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{12171.58987189752, 12198.951361088873`}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{749.79265, 0}, {750.5401999999999, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{26891.68594875901, 26919.04743795036}, {
           91.57660353350083, 92.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.0632379999999997`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{2.24265, 11.213249999999999`}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8250726963506713`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"4fa3ab72-d420-4983-b99f-499a11c63175"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"item", "[", 
  RowBox[{"Histogram", ",", "\"\<Bottle_Volume_ml\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8250726368866653`*^9, 3.8250726936210065`*^9}, {
  3.8250997290913815`*^9, 3.825099744729949*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"39f7fac5-bf26-403a-8f92-e10f638181c7"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.609], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.609], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {378., 549.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{30.19675740592474, 62.14435450799664}, {
           53.678977110941574`, 92.24999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 549]& ,
        TagBoxNote->"549"],
       StyleBox["549", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[549, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{378., 0}, {756., 2783.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{61.64435450799664, 
           93.59195161006853}, {-101.24026721356931`, 92.24999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2783]& ,
        TagBoxNote->"2783"],
       StyleBox["2783", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2783, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{756., 0}, {1134., 368.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{93.09195161006853, 125.03954871214043`}, {
           66.23062582299909, 92.24999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 368]& ,
        TagBoxNote->"368"],
       StyleBox["368", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[368, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1134., 0}, {1512., 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{124.53954871214043`, 156.48714581421234`}, {
           91.47261549807607, 92.24999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1512., 0}, {1890., 426.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{155.98714581421234`, 187.93474291628422`}, {
           62.208550545102206`, 92.24999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 426]& ,
        TagBoxNote->"426"],
       StyleBox["426", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[426, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1890., 0}, {2268., 7.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{187.43474291628422`, 219.3823400183561}, {
           91.26457712163312, 92.24999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2268., 0}, {2646., 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{218.8823400183561, 250.829937120428}, {
           91.54196162355704, 92.24999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2646., 0}, {3024., 15.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{250.329937120428, 282.2775342224999}, {
           90.70980811778527, 92.24999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 15]& ,
        TagBoxNote->"15"],
       StyleBox["15", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[15, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3402., 0}, {3780., 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{313.22513132457186`, 345.17272842664374`}, {
           91.54196162355704, 92.24999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3780., 0}, {4158., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{344.67272842664374`, 376.6203255287156}, {
           91.68065387451901, 92.24999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4158., 0}, {4536., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{376.1203255287156, 408.0679226307875}, {
           91.68065387451901, 92.24999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4536., 0}, {4914., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{407.5679226307875, 439.51551973285945`}, {
           91.68065387451901, 92.24999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5670., 0}, {6048., 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{501.9107139370032, 533.8583110390751}, {
           91.54196162355704, 92.24999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{139860., 0}, {140238., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{11665.807685172527`, 11697.7552822746}, {
           91.68065387451901, 92.24999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{378000., 0}, {378378., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{31477.79385947782, 31509.741456579894`}, {
           91.68065387451901, 92.24999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-77.49, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0, 3874.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8250997505274477`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"0562f943-db4b-494c-b646-9619a6c81398"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"item", "[", 
  RowBox[{"ListPlot", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Bottle_Cost\>\"", ",", "\"\<Bottle_Retail_Price\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8250727135469856`*^9, 3.8250727520219755`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"cea46097-7d9d-4e25-a667-e6340579dccb"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJy9nUuI51mW1yMfke+sjIx3RkRmREZkZGVVTmVlPcYqpin+Yds4gzYtPaAt
2Iij2Agt2Aq1GRf2phiYTW16o8gg6MJVgfSmGZiNLnqjiCDmZhioTW90MZsR
ycrKsvP/Pd976v859+fN6GyMzZ8b93Xuueee972/u3//n/zuPzy7tLT0V1aW
ll78/s7nv7/+2W/fPPlf3/3ZnU/+562Tf/ejj648+bdXTpbmf+sn/+pfvvi7
p99b75/8p7948P1P/+PNaLdz8r9fFP/i0smL3t/92erJi9KD7984eVG688lW
1F+L+o2TN+YNLkT/lWFZ/S6c/LLwy//cPJn/PLl6Mgf78/UTwX/x5J++aP6j
mydcj9pfjPY3T353PuD5k3/+ovj7rwWc12PezZMX/13/7Easc6uNr/Y34/ds
tLva4Jov+1Pj71q024h2X8z+y39+8Xe+wCv8Xj55b/63drI/B2g9yncC7msx
zkbUX451rUa7cyca/9rJfNr19Wh35+QHL/5+8Uj4ePjByXzajzai/37gaV3t
frAf+7Ua8O3F+CuBt+22Lo1/UODTfq0HHPuFPvT7fCa8XQz8nwu8XC/0ZXoU
fqf2O/dH6zoXcN8o9KB5t+P3MOC7EniZHt9lr0Pr24v9u9rWrfEuBD5uFvrT
+bga614v8Pfnvxr1tT3H17m9GePfinXdjPpb8X+PuxP9bwbed8r+8/yyrHVe
bPum8pnYryuB5zONzkkP3B/V34r1HZX2PK8sC47rQa+bgY8r0W4t4DgT9H6l
0APpV/TnfY3z9INrMf5G4Om+2v/3xzHPcjvP3E+eF/JbzWt6XyvrZ5nnXf+/
Fv03Ao9L8f9LQ/6ocS4Gnd6M9V6K9a4GntcCz5X+uV7Nfz7qXyv15rPz8f/b
3YJf0ucIX/rd0/p+eBx88a7246dvDvGp+VdjXbuBlyuxbtPBSsB/a7gereNa
47vEp8Y/D7lpvn+/yAfNvx3wHsb/v5hp3PNlfP1eivlXg+5Wgt5vBbxnGl6F
r7UY/3b8/7XA91bj//Ofn9wVvfzRodb/5w/LetRvI9a1X+iN+Bbe3tM8f/xR
4X9av/nX7oT8zvWRnljm+OaXgvNWgU/1awH/XqxvJda7HXSwEnBsh/w9Uv2f
vlXoWefNcny3nF+Ncz3mNT+7EPCuTPCDPA9qtxXw3y36idpbb/A+XQ641gKu
q4GH9SanNe9GoW+uX/Bea3SgfVqJ9tsxzvnodyPgfi3402ZZj8Zdjf3dCziv
tvkp3zyO1nE38LQS41pfu9DOtelA7e4U+aXzcTbm8z6dD3p4LeBZifm2y/5S
P6a84viC79lM+Fku8lb4PNvomPoU6a2vn6X+IzhvBhyWD1/NhMeLRZ7o93zg
qfIvlb+aGW7KA63vfMDxWqkX3JY7e21e4X21nQP9fzvm3Yz2dxvfmo/zzbsB
50b03y/8gPx2VCa/HZUpf/X/vcD/cTvvarcZ9HIu4L5e5tc45+L3ejlPPJ/k
v9xP7gfPP8ejfkT9gedX4x2Kvr79sKxH8FwI+Kr9J3q4EevYKvzGfEvlvaJv
CY5L0W+1rEdwX2x8ROX1RtfsT3zq3NhO2In1b0a/g2I/6PdC1K8Ufm38qbze
1qN1bhZ+on06iPYPGh2ovNX0YNHX7WIvcP9IT6QX9T8b+3O10CPlaV+/zfFt
t2kdW6FXvx/0MivwE/99+t6O9RzGfl8JOlor8r3Pv6b1MZbJv1lP/sX9s/y1
ns31kH9Q/zdf1zpfL/XWV/S7HfPtBR6OBd/f/k7g52+V/aK8oj+F41PfYNn8
UetabX4M4W2j4JP02ZdvO0GP9wLv5lt3iv48n/fnb2ic770XeL8V+D5sdui8
/Ydvxbx3Yr6w+37yruD6s28UfiN99s2A+/1YZ8ixD48LfkmPWsd6/N4p69W5
2Q047sX/ree9WfRT6/fCx+2Yx3parPNnt+K8HcV455repvkuB9z2V1nPsL25
Fvt1u+hfnm++Dx8fNr1J42/F72r03y36DPmL4Lna+KP1ELXfKvJe460EHrbb
edN+GS9rgY/bZT9p71Iemc/N+/3eUSnr9yDgeVD4mehzPdZV/Wc+J6KTsJe+
uy94f/x64PUg7N0Hzb8xn2f5sIxHfVr75HO3X/iD9t123xtRH+f66KDQT99f
uK19/veHpT/5Hf1R/fkJX/K7Pj6SHgyv8HoUeDyMfX24aIc9Oijwmg/OwfuT
gwl+nGXjW/SV+onOq/Wzy7Geau/QnuR+Cl77uXfi3IddtHxQ7GuNuxzrst/7
auz/OuyyrTIe+a3qTTevl/NBf4nPm9axF3RxEPh5I+bdjPN+EPi4Hfr8/aDX
6PfguMGt/+8H3m3HHAZeV8D3zLf2y/5o39+Oc/tB8e/QHzXy79G+Iv8hvgyH
fo+bPiI6uB/4Oxb8T98u8JM/097hfC4Lvq3m5xIdHxX9VPtypvnJ6J82n1X7
w4Iflc82PZz8Xvi7FOPZX3Yh9tt6dsYT6M8Svs9EuytBZ2djPPs90j7r++sv
B32nvaV219t5UXm9lCXHzja/P8fnenk++vG49F+rfC7aXx/Wa97nM+Hl4kS8
4cuZ/Uzav6XA4+Xi32PZ8Q/TOfVF0gfjCdQXqF9qnjNNbyL/4nha/0qTO/T3
d/W1/8d89nfoXN0o/WmPcj712w19817TrwTn9aIfC1/Wu7aLPKG9pP/bT1T9
afaLSu89LPjWfl9pcUjaL7SXvZ+Ce3XifFN/Oo7xHpf1a7wzAdfl4o+wv9Jy
3PjR+rcLf+L+0b9E/4Lo3n6ozaIfEP88b4xf99fv+NBK8Y+Rf4zqeb6oH5t/
CH/WJ841v7l+v5gZz+QP5O+iQ8dXr5d6n3+NZ/68hLj1cpPDgnupyUHiU+2T
f9MfqnmXGp+2P8J+Te6H9u/pzHxR+Mj4vM7L85nXYf+q/WDk16zv+x8uBXzW
t5fj/KwU/x7ptc/Ps0z7mOsl/6a/hu3JP7lf3if72Ubyn/WC03rVcfF/kf8s
+lX2mh1qvU74uBF4tf/kTPPz9M9b1pMfqH4z4D0o/v2Xq8/xX7V+VGZ/4fNs
i4uQnnkeSX/cD9JjXx7mePZ/aj92ij0xiofTH0J+K3py/O12jOu4y1bR1zTu
1YBjvchn5r/0+Tv0p6/Z75aztgtoz4/8B9qX20GH98t4tKdpD1IeUN+nfLCc
1XmI/InlsNO++U6R99Q/NY7jMpvFH8z9Y73wY7lS45XUZ6ifGP/ydz0o+KV/
h/s5ih9wvd35vzZfP56b+VuCZ7nxLa3rPOLqGR/t+3vzvBBftGf6+RaXmx+F
8X2eJ+YLcH2O+2qeg+F57uebbCzu49fWI7+o/fQPS3zAfkKd87tFX6R9qPrl
qL/R8K5xNwt8Xf/R1/xPnI/7rfXZLtiasOcdN6nxQO2P48e1zHiB+p9rcpv+
I5UzX7JvL6f+PeLH1D8Y33Q8Xeu7Weid+jv1UeslWtd6oWfio5+vlmXyQ8cN
NM9O08u0vt2gm0stbs/1ap0XAm8rzS8h+HbLebG/1n56+g+Jb9obtLe0fq/D
frK0VyjP7KdQebPYO9QXqH/Rvqf8Z3uuv4+Px5Gf9eGE/Z/6IulD63g607jn
ovw89PcLBT7md2h//f+1aG+9cLvAy/il24tetsv4mnep+ZUW7aSN0p/rFxzM
X0n+bLqd//7hUaknP7a/T//fGOqPtqsE/0qjL9Vvtri39mW38GOuj/5SwW89
cbWMR3+u/QrCk+NhZ6CnnGl8j/vR108vRDnzG31OSW/UtygfaF/19cetiD9U
eUX7hPyP8o/6LMvCm/NqNps+43rNk/nilAdqv9TiCiz3+f+FxpdVZv7kpbaP
/fWeC3q59pL+9Mw3ob4s/Ge+heDZC/35uJTt59D/azyZ/NT7ov24U/LFqC8K
jqcz+2V07p7NrJfovHw1s15M+tZ+ng8+VPNnyS8pzymfuT9PkN+lec43PV/r
Svi13oSf/bUvSy1OTH+q21vP5flhe65P+Hg2s59T+PpqZrzQ3y46Ot/4GPHR
988nfIRH7c3Xq/4mfGX+pvVz82HjT/Mtl/loj9O/3fe/pL9P+Hw28zkTvpYa
3KQvy3et40bR/0kvhI/50Gp3K/BzNBnPsD/Seo3Wv1/GV73vU9gf8cXMckvw
LbU4Efsb7453Wa4Jf45LbQS8B0Wf13jXg342mzxwfI36/sh+UL3xcOvU9gn1
X85H/jnSx/r6e8pbzXMv+OWjIr8JH+XRaH79Og/yqJwf+issN3wfifRB/Vrz
Gc69ptdrnMyvER7vFHqnvkV8a74Hmu8fvDvhD3Ce2nHR5zleX1++0eIapD/m
s9E+ofzs38e60vDQtzcvQi/N/G/62zTvxbYO+ru4n9R3qC84jqD175T7GCzT
XqW+1ef/ST/Gi8ap9j77s57yiu0F19lml4/um9F/QHuM8pP6ougk8/H6/qSk
P+Kzz28sR4yn9BfTvuL5Jr55HmlPE7/0j3G/NM5y48u2e7WOg1LP8bhfGvd8
06tpP9mfod9qv6l8temtxpfjIzyvxM+nyDcW3m1nVv7H/dJv5j9+gngi18t4
Ul/fTHuzb49nmf4W+iv7+evT9bQ/hLflgH+l+ZfNN0bt++c74e/HI5NeTjv+
qD396zyfI35B/ZDxF/szBL/vN51veQIs9+3djLeQPzF/c8TvzDdUvz1sb3q1
vT6Kt/f9menvsn3jc07+zf3menW+vppZThJ+wsf4q8+h7/NQP6D/QeOarur9
TcGT9zX6+fppD9F/SH1WcFxpfIT5dczP0rzpDyA9Uj7zPpjvT+n/js+ZXnfi
/ISf9+Pj4t90nM5+APrLST/UZ0z3tuPVPvMFnU+k+u1ib3O9wlP6/xx/0b7e
LvTE+Ykvxot4vtU+8xtoH5mvOS4o+DLeZv+pxr9S9D/Tu/B8sYzneW032S+n
8lrR76f8C7SP7V8QHSy1uBb9FZRv9K/wPAiOC4HvGu+mPNG+nmt5WrSn52j8
2nsL5PeUZ6RHwf3VzHo09buRPOT6WDa+1P61iXL6Q5hvQ32d8Pb9T0vgE7m/
7M/9Jb9ie/pH6H8ifu1H0zibL6k/pb9U6zjbzqH6P5153fSPEV7G67QvZ5se
2c9HyftAlL/0nwt/1iNuNXhFL1fL/Kzn+WF71hN+tmeZ54X4HL0PQX4+us9P
e4n9qQ+wTP3N+6x13BjCy/mFt8z/ov+H8wkvS/F7aQgv9Q/Kh9H89B+dtn3f
H+R7fVW/Y5n4FB2fbXYU8TmqJ//TPJlP6P10Pu9ovJH+TXtN/Ods84NwPNYT
HsJP/FgOW+8mPukPHe3nqJ7jW154fK9v0W+V/GxUT3lGfI3qaU9x/H55Gr/e
T81X+Yv1A53D1SJv1C7fG+i/N5Lt+/L6UtvfPv+bvp/b96fneLaPfP+I55fw
0Z7ieH3+m+OP+CXPA+0n6yUad73JZfvxCe9ovin70fBSvyD++/vD+Mj0+xyE
h/FNjs/+hIf3dVimP5XnacpeWvQPZb4H7RGfB/sHSY/EN9/LYL4M46m09zg/
5Q3x67iR9vm1xu98j4Blxv/ozxacZ5rfk/hkPjT9KYyHE7+2R3zPle/P9eVt
xgc4Pt/XYv7jVD6k43X99zlSv6D9KnrIfFjSs+0Cxw9G/J3240g+s57+adtz
tgvsH7ZdTnxQ/+P4ff0j82fU33Hu+v5BX99NfqJ1LwW+L5X5bG8Lf2uF/nie
aF/QPiK8tsPUbxNxgN3Cn4i/vryeHp/6B/Gl/TsT41+esAezPe9Xaf4vZ/bD
j+b7PPyCjo/07fl8R2vxHZWtQt9sT3xwP6jv0X9HfYX66FS9y4Iz82FGZdqD
xE9fP7V/8Gbhtxx/6nxZf6R86tsHyb8Np98pEHz2Q95u+Tr2O+g85f0grtdl
7Wv1L9E/Rv5H+UF61jjM15x+P4X0S32K7z1x/2l/UN8j/yM8HE/3ueMdph+/
WfyBfX6a8V/Sz4jfkj7oD2I9+1t/cX5Dn7+m/vFy+KO9l/4wxhtG66P+xP0d
9R/B119P8iOun/vH88N8N+5n35+U+Zqir/PxO7YPOR71n5E8EtzPZv6//XeL
fIP3XRK+09LnCN8sk17WP1uMP/P8c37mw3M/SE+klxG9Ld4jrPhlf9ON4LY/
LvMJyB9J/9Q/uT76c0b+u/55zPsk+vU7RHX80f5TvhH+/nps1+yXfDmO53iJ
44J9+475cRnvNZ07Hsn90fxLLU+Q593xAuGj5reyPIpPjvxRGifv4/J9bOq3
ff0l74sR/9Qn+/Hfl9eX1N90c1DivYzf8jwJfxmPI32M8DWit0U7tr4/zPcW
aX+P6kmPI3z184HjHaXP3yr2jPYr88lH/uope33qPpvwfqbFxcmP2F/782Wc
x5rvO7KnT6t/U98U/BlP43mx/rwYD894jfCU7wP29aHMrzTffhL5HISP9wn6
/rCMf5i/2M6yfLbey/HMz5xHy3jmaD8Yv2R8lPHP09oL3B/uN+mt/343vx8w
7W+i/sPx5//+6X31u/hOqWf82edrMZ6XZdPT1PunxL/wlvEtzkd/HdsLv1/M
hB+fo+n7LP33FHgfhe/9Tt8XojzgeaZ+6LiJ1jP1Xrrzjtaan0fwrBb6F9x5
/0nzMH6Z44uen89sV3I89c/7ayzTnjK/sP+j72+63Oxswjtq3/dHp74ivHw5
+yji+PaXmq/07eHMT6I/iPb0yH9E+Wa61jwrrZ/vgVGeMt+S9NJ/TzTpl/dt
1S/zf/ye7pPIG6P+Rnqhvsv3Hmk/mX86P8dw2Z9FfjLS59U/7WO/N2O9nueV
/HPEL0fnRXDm9ysI76jM9VhfcL4w6fG0+sBInpDf8ryOyqPv8RBfLLM99RWe
9358L88v6Yvni/5Pyv/++f/V60+rP1BfeDl7tr6XyO/DuMzzRf3J9ovfySE9
0h4c9R/Bz/1ePK9Vf+V6XhW/ffrkezJZpj5M/YPrHdWf1l9BeE+7/tO2H+Gf
/P7l6CX7Uz/qxyvzPJ223nqezwnh6+fjZj3xNaKnUb4P2/9q553vrU63977q
3N8s8pz97U+1XD5tveNwmu9g4nsEqY84njpVT3uhTz/T/sUp+e7+I3rqf29g
uj3tO5atd6p/3R/Ox3qWTa+LfsaXP9/CS+ZjnrY/93+EH9OP7ZY+f01/CeOl
I/7C/qxnvIDwU57x+xKsN/06z//l+pM/sD2/d5L6OumX+uco3jEq9+/PXGj3
gPr+hOWm/7M80kdY5nq5nn58PeMjfXpL/k/67H9PaHo82oMjeh/Zh6P5SA/k
37S/yB9G/hni+9OIt/t+Qz9fcDo/kvnZpH/ba6qv8qMfz56WN5YPXif5C+1Z
8zn9Vv8y7xdR35qyx2xvkN/Y76Tfmu/H9dEeY3vaXz5vzo9ge+4P8cX2o/lG
4/M8kL5H+QfCd8bzyM9H59Hvn3g+jsf52Z/7MbLPR/vF915Z5npI3+Tvtj+0
7zcLffldXsd7KD/77/3x/kDax4yPkH54vokf8iPii/zA9qPjZ9yPzyK+7vsx
/fXwfuu0Pkr9sn+fZlqfWMRv/X5nX7+Z/r4Z9/u0Zb5nNZpvVD+yZzjfqMz5
Fv2OFZ7R+9fsT39pP96R3/vt2xt8P2caP5SvvF9lv7nGdXzSekONdxG//ffO
M9+zv57Ex+i+hODK+MVo/80ffK769/fyPZSp+Kjz5Ufv/VLfeRLxMut9qs/4
hOWPx2WZ72Np/b6nVd930jz5Xjjly5S8MT9c9DPUeB37s97vMJufCw7HwUxH
ad+SfrWe1H/pr6S8dnu1q/TdzxdK/BAenl/C/0nkdfieAeHn/H1+kP0X5exG
2U/Gf0b0T3jIzywXha9pf6r79+2D3F+tM7/f2vdfZH+vV/OvN3tH864U+UP8
s0x+Rf2P+sTifGk/TvmbuX+kz5e7fzVd7sv/pA/io88fE74R/2T7fnyK+RLT
8fj+/aJLuKeR+RUvh+/p8Wnv8Lzw/rXPu/NDvG/+/k8/vyXfkzad6Xe7fI+2
b78nPY7WM6qn/4f0T32V7fv64PT5GdEX8WO/m8at33sg/Y7Wq3nyPjrxyzL3
v3+eUl8xf3O8x3mf6r9VxuN5oL4wOt+fRhzfeVxcv/mR4eivJ9erfcv3VWhP
9d9zTH2E8tP6hPPBST9PEH/t86Mcj2X6L/TL+D3vp6a9y/f/tZ+Z70h/IN+v
6PvP0j+occ+0e2nGr+DJfAT7qzVOvp9L/zfruX+sf9Uy3zMmP2B7+odYz/PH
8mnh83743RrWj+Q1z9/ovRGWqT/7ezyii0tFPrBMfUjzpv7O8zIa3/4lv3Ph
PDrbQ9TvqJ+RP/T9kcstT5XvF9mvqHFvlfwb75fp3/qi5nEebuZPv9z7FPn9
O8b/fe6F33qflvyMZX4/i/vB/Dbhjd+/5vuPqZ8IzrwPovPjvKLxe3LsbzoU
HjcRB9so+o33TevaDfzl9//43iT5Efk737Nd5IO34v9fzmwX6jffByQ98P3z
/n3ot7W+v/tB0Tdstwk+++/ye3I+F2pX7xeqPr/nKvzvxvtZ9ybet8v8GsLD
fDbrsar3d+z9Lvf9It/5/YJ5u0dvx/upHxR9h+/hUb+gvBN+8/tvgj/fX2CZ
8AvePcH7w+Oin1Pe209nfyHxrXU8ElxP/1L5PiLz6YSXvB/B91TNVzTuTpFX
1OeEr4yn83459ZVFO3O7yAvel2Q+Pe8r/LrL1Le5n+Q3tJ9YNv0svpeY/Jfy
hPuv+qczy23HJdTO9x8yv5b7y/HVnvdf8vuKnL/vzzgb/e2Xy/e7niD+39cn
8j2rfvwv7UftQ75/yPWwP+Hvy1/q06kP+36Wx/sk4ieL+VuZL91/XyHrnV+q
+rqfvA/Wt5+fx3v0F4t+Tfrie1vUR0k/9Hf4vrrp3vqh8LRW+AH1U+tPhkt4
zHx6xrNor1puCc7V4XzUNxifJjx9//SvDp/qM5+U+8nx1S/fN/J5cTzY+J7y
p/TvD+b3NEkfXA/xRX2C/IHnj/rp6Ly+anvCc9r+1OfNz7RfNT7V53/nmp9V
455tZbYfxb/65z3zDbTOC81+eNUy76eM8tf75Yx3Wv65zPPB9qP+LBu/lqOj
+VT+Yma/z2i8fv8scz95Pvv+6OTnLLO94ynWW/v+3ml/26is9eZ7wywTnlFZ
v2faPXGWXxXefn5M2ge/7vkoDylPWG8/guikfr99lD/Wzz/J+yenLduf4fjZ
CP4+/8sy7a9XLY/y9axnLfqj8j6jytP5Cf31pX5K/zLXO/IXL94DHZ+PT5H/
Nupvf+livCbLhMf8zPxo5G9j+yn8TJVpr1F/of6t9kvtu4Yu209D/zD3j/Ka
ZftBrLfS38R4PecbxfdH+Scjehnhh2X6H07rz6V/k/OP8M39ZXm03lF+J+E7
bT4o+4/qLd+1jvresc7davNL8XsY3G/K48W4+1bzc2ie9aI/OC7k+xmqz+9T
2A+2eH8x31Pme5Ms8/4q/cEscz1T8e/F/HDfM9mfeE8s8x/79zXzvr7xpP0Y
j0d/C/0/trdUrvmCfXpIe63/HovtrpvFX0D7yHqk85G4fuvdGn+7nHe3V7ni
y35i0W1970Dz2299dyK/YDq+27f/8/sxhI/jsT/hZ30/3pr0wP3ne532n2q/
95qfVv3vFv+F/bSaZ6/4T5k/xvcnLbdE/6slPkD/p+DKeDDhc73fRRv1H92P
pX/Jfil/X4L+rEW/rr+PFu9s/N5R4S/0X572/L4qP2B/4st6o/pvDufneWJ8
gfKZ+pD9JppnvcRLNI/fdcjvV+nX/sGMD9GfQfkrOn1dcP75OzGuv6t0v6yH
8ob83OdB+7/X1iG4/H3RfD+U9r/tDMG71s6FfncbHxZ8a8X/ZL+l5Fv9fhD9
H/SXsr/LlqveN4273vR89bc/NPLinh6U71fSvqc853jWw4TXzSIv7XfVeVwv
8aXF7woelnzAkb3B/eX7TqYrwblZ7CG279tLWbZfUfDVfFyWPb7pnfSt3/pe
6FSZ/GhUZnym/5565mON8vdPW8/8FjV7oH27+G45Lywzn0S/6f9mfI700Y+X
pT/ccAtfa0W+8D1Z8kd/P810xnj5iH7VLuPvU/cD3V7zhtxdPij64cif5/cH
zY8ZL+rHg/P7tKN669eL91NSPvS/n5n9ef5FB7637ffFM//E8CzeH818wJF8
HtX3vx+Q9grL9P/wvJuuBeftCfynfKK+bXnhdtb3Dd9UfprlC+UJ/dFs73bC
90azsxyPtnz3e5nsT/goDzV+fh+S7wmafyzaK1kmPvr5+HlfnPye8pLnyXHZ
zyK+Yb6v+p3iD+V7vyxTv2bZ7TTenebPEj6ul/Gov6l9fj/dckfvAh+U8Umf
I3jIT6fGE7w+D5nfrl/f07nZ5JPtCvILybO8n+t7qfr/WvH3Up/8BPFqluk/
Y5n8gfaM426ar/KTvj2U30sxv7Q/gvyP87E/7anR+NSP++ub7j9aP/uPxqc9
Yb+D6Hin+HNJr7R/yK/p/xn5N33OtC7ri5mv1rff83vOtM/636PM/GiuZ6Sv
kZ/Rf/sp4un9+4bUh7IseDK/jmXG46n/8T4C8UX+PPLPcP20R0flvv/+QtMr
mL9J/qN5fU/g9oR9Ovpert83r98zJX8gfdCfR3j79mWWR+1pz7G94XP8QevO
fOHReKP8z1G5Pz7zi3he0t7geVG/zI+g/kX//JOIf6tf3qe2nsL2lEc8n2xP
+EdlrcP3ELYm8sGnvx9FfzDH9zo1ztawTP+w8ykW/5/5FeSP/fPC95LzvPA8
EJ+0DxftNec3ZT4I6YPyQuNlvI1l6vv2x5tPjN6r6d+vns4/Gfm3R+1Z33+/
5+XrWRZerzU7dSQ/hafnM8eL+/pG5uNSHvA+xag/2/fzfafbc3yWTQ+0h11P
+hd+Mh4vfGT8WOPkfeK+/zDHE13m94p8/8J8g/Lm5fKdsty/X5nx1anvf7xs
vcu+z833dgjPp8g3oH9ulH8xak99mWX1y/yl/n0I+iv5PdjUv2ifjPgHy+RH
fXtnWv8b5QuN3mt6uXyszAca2V+j+3x9fXJa/xiVeV51/vJ+FemD7y2x3L9/
OC1PWB69f9XXP1I+n3Z/1C/9X6ft35d////m79NryiP6T1jfb5/4pT+1Hx96
+fewqb+N3ncazU/9iPpd/7535m+wP/Vj/eb9HMKvfvk9KdYTHurHp8Xfr7v9
afndq9YznvCrnZfp95Npj4/a83vn/Xh71tN/Qn2G8mnknxn1Z73LU/ow23P/
p8Zzmf5yrpf19Ac7DqZxt4p8IbzM16Y/gPnyxM/IH0H/OuMlpBeW6e/pf/8n
60nfjj8Jrpov632xf6Xv30189O2bxIfoazp/dqQPndY+Y1n9zjb6mHo/afE+
LONNzI+fLp8Wvj68OR7pTftcv3fq/n19KN/D1f/z/TnmL47ol/qY8Ws55vHN
Vzy+zx3fL6L9QPuq7y85D39Qfv9E+7vUvjvJ9bPe9prlpugu4xeUn/SPsD/L
gjO/v6D/5/1/8kP27/PLpFe1m75vxTL9h6f1Z3K+kb9wNP6r1o/WP/KXnrb9
qP608Py68cf7DKwXHS+3PInR+RPd5nsoLHO+Ufv++Zy233j+Ka/ID/rxoen2
9I+yzP59eZn5jSP/Lucf1TNfhvCtw9/K+3VT9+00XtUPKH/or6J+Zv7m+1Dr
iFdRfrG/5k/5QP2F+6l1PJs5jik++mX4L5eLfHF70ZP17C9ni3ZJ5t/Zn6dy
lY/z4oeH8f+HRR7QX0Z9v09PKb/8boT63y3xWX5/k/qK87X8O9JnmL/Isv1l
2r9rxV/ft4ftF7K/Lr+n6TzF+Tx/dDCc/1XL9J8v3sN0frL53nb833Hnu0Uf
Eh4yH2JU9r5r3s2hvsvyyP/JfBHaNyzzfgH9Ddxf2gP994VIL/y+QPJzyhuW
aY9aTugcrJb5+v5dxnem66k/c70sj/ID+vMnPxrho59PbLt4rflRtJ5bw/eW
+va+1+18Mcdpdgs/I30IH/5O753ij9U6zRe2J+4T5/u/HI/fd/W+i+/tFntZ
8Ge+G/1p6m++eafgg/yX8tD8eA7Po7zfsRifTPrQes2Hdgr++ucx+T3z43wP
RnDfKf5p5t+wLDzmfRX1y+9v9+3HqwGH+UvGA0b2K89vPz88802Fz8zHpDxh
/MRy1XmQlLfmm/q9U/xD9F/QH0F67N9/Tf2M51XrtxzcnHhvJvNVfS9WeNks
8PbjtUlvjis6H4HjaR7nQR8WfrgYV9wp5990KDreL+9Fzf//vaPA51vDfHjh
0e++Hk34y/O9pkW/90ap5/1c5qvzPIqe8vvXpD/i1/5X4aHSs+lIv7sNTo27
H++gvaf2f/yR+v/ceHvc8tcd9yC9O99SePJ9lvzeO9//4v6Tv4hOI8/95wcT
+aoX27o0ju9xHLRzona7BZ86T84Dvh374jjxTuN/zk/X/N+I+0Xfau+lCT8H
zQ+jeXy/yu+4PSr0z/ssprt5/TdzPMFX9bEp+bCY18T3sabvM5v+9P+diXjD
duDzsPB3j296H/H3vr6S9+m0nsyv9ni+T0z5zPNru8NyifX28/p+I/kt5Qv3
y+vSOAeNTwru28X/8STywxbpPu836Pw+mzkPYySvyH95v5n2l36t5xwO4zN9
+ZPy1XgTXm8X/r9wDn5xUOQL18d4K+XVSD5Rntk+Nt76+i/xm+eT8V2+j9j3
32T8hvyO9N+/T570zHw2lulP4Xm0v87fW+B7fZRX5A+Ex3xAeF0v/Nv3OjT+
XuH/TxbypnwfIu8vep8F984Efed7AmqX38sRfs+1ffR7oMYH9Vn6y61n+v1K
3oemfOL3R8i/iM+uffO19zX79sBK4zvmI8LbRoPP938In+T4OzHubzU7RHDv
Ff8C9XfrWfJ/HBV6IP6ob/C9VvIn0k8/Xy/vx4k+8nvjLI/ydUb0rXHyfuqo
PeVb//sqtB/5nme+F8sy7yvSH0d5RvlAeurru9P+IPrzeJ+G+jrpqZ9/dz76
1++dkL+O7Dmub46XP3xP8/yNjwr9CG++R7Fb7i/377+n/4L+VPIL7nffnwD7
9c9mIR9/u7zH8LPwm9vvIbjvxnl8o8xnPGm9cV/g5ES/f+93Snu+t6F5fM/9
uNk/czx8+yjwey/shEfFPp/D/Xf+sdp/6+PYx/0Y9/VyP6Kv36b+Qf8M7d2+
PyLvi/fz1R8I3vvvlnil5bJ+jwu+tc58f5X+Hdqbms/rOmh6sf5/J+bJ/CjC
w/xPyk++d227UnBsFPxy/xkvoH9CeLsXcD2K+vDz//TNgOcbcY6/VfBN/11f
3j6dWS/u33fOeAv9a/p/3h/o+xMzf7ifX2Q5FfbeL4603j99q8QfP0N+CPV5
6zPCx0rxH/A8MB7Uz2/L9xm13ufx3tuFsv/a73zPmPiZz/cHj2OfPmxxMOtt
jNeR3vy+rd+Bov6qeZ7NjDfh6enMejv3g/or/fX0L1D/nS/vf/wjreff/LPm
f1f/1Ub32s+DFteZw/Gx9fHML6F/gPbTfH3nvhn36f966c/4Mtfv/fE5UDnj
lX399IuZ4+LCV76PQv2E73MxftnXz47Cn/FWoRedt7z/pH3OeDHpkfld/F6d
fkPv/Pi4n7/787tx//jNYo9RHonPHgneo7cC3jwv/fNGfup37yI/5obfhXqj
4Iv8jPyf+hfpg/aZ+t2O8e8XfYT82/Fg8xnzOY27V/wNzMdkPe0tweXvBtxt
77F6H0XXu5rvJ/fKeef66S8UnM9njiO5v/2g1Af5PgHzC+Y/P7ae/LDoA6RP
jRt+1eV7Md9GtDso+bf6P+9rJD2THoSvfJ+D/l2+v9znp1mv/b0f+/NOka+2
mzW/v5dgfSL8d3/yUPD/1/fLeeN85kt+v6ZvXzAfL/lNX99L/x3n6/s/Mh7f
X2/mE/b5Ua6P+UTMT+2v59nMec6Up6P8RMqvUZn0rXeWHsS+vVvykdif/hZ+
z4T+YsLreIn2eb+8N2a55Pi9+O5bwvv/+c2SLyH74I2A772Cr/79zoyHUt9m
vgDvp1F/oD6n9dnvcFjGdzxIw75V6lmWnHxT4//m+0W/69vX78c+zfT7H74T
830v5NYDnbdb70a/2+H/v9/eKRM+j4v/Wf28z28UfGi8j2K8v1riO+Sf1H9H
9ib1T66H+ofgyfeKmW9A/zf9UTrf+F7Kt4+j/u1if9nul5/tsPEV7dudwq81
7k7Ti9TuXuDh7YBvP97/e73YQ4I7/Arfu6f5fuvbwudv/M3iP+jbY/m9Ytq7
pC/RR+a7U/7Zry946nuX1Ke0/5aj7xd8Ul+Zo++vPQ46+LD4k4Xf+wHv44Ar
7OhfvBvrPQ6+93bxB9JfTf7G88H1f4J4Kemd8on2DutJj/R/UT+if4j8ov/+
WdqvOnf3Yl2PYj3hpz06KOdNdHk34H1zwh5P/tJ/bwTx4K/JF66P9En4WM/x
JC/uBz08LvE06lsLdtgv92H03md/fWvNz0V/nOMk6rdX4Bc+7wS+Xx+W6W+n
/OP+ML5FeU19h/XUr1jfzyebLvP9HcZjWCb90p8j/pXv79LfRH+u1vOB+Oe/
/ssT/iF+3yntbeKX+GN/tqe+1c9/Tvj77Uf1OR7jByP9kfCP8p1G4xFewmd7
yHmiLNMfwf6Ed4R/5i/R/zaCn/djR/hnvfUX66kvhz/eV2U+VsI3Or+vSl/c
/9H+jt67Ypn6hNaT3+vrf2+a3zc+0/IgqM+YLhyXk57yeuDpnZL/S/uV9hX9
h8yvl3zI+1Sj93Xor6X+LTrN97VY5nmh/5L2LPmn6CTzbVV2HML5XelvtP2s
dmulbH+G4PB4+X1Rrs/7vph/kftFfPb9OylfyJ9P+95cP96T9MR6+sOEp7zf
RHuD70X1z9N0mev5HPFWrqf/nlnaU6P7y3yfRufO715YvqR/SvNkfvFp74vR
X8Ey88lH54v08AnyeVhmf+KH94n777mm/5v+tdH9De6nxnFc/GHZX+ZPsZ77
QXr4PuJD1N+69uPX7AO1D/vih48K/uiPEz7y/XvyL7XbD7vl9Vi/9d7jgOOB
+m29W+CnvSk3wP3Y58cT8TvbXb+B72w6/v0v9PujP5iQd5lPo3XYT7hV/Cvi
Y4fx+1C/B9/S/I+/U/Lh5R55L34/Kv4b2sNCs+nG/tKtwGfNl9U4u7H+eyf/
F6yW04c=
     "]]}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.5165625000000003`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{577.5, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{1.5165625000000003`, 7.075000000000001}, {0, 10.65}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.825072753440207*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"93921f04-5be5-4062-9ee3-c39a58837b3d"]
}, Open  ]],

Cell[BoxData["$ImportFormats"], "Input",
 CellChangeTimes->{{3.825100582341099*^9, 3.825100586870303*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"1ce486d6-218d-4c25-9860-cf5bce3dc034"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"item", "[", 
  RowBox[{"ListPlot", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Bottle_Volume_ml\>\"", ",", "\"\<Bottle_Retail_Price\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8250727135469856`*^9, 3.8250727520219755`*^9}, {
  3.825100104933605*^9, 3.8251001177544303`*^9}, {3.825102342625243*^9, 
  3.8251023511254206`*^9}, {3.8253459726080756`*^9, 3.825345978453493*^9}, {
  3.8253460478545847`*^9, 3.8253460561702747`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"08220a6d-c6c3-4e7e-96d0-330a13af7127"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJy1nV2opld1x0+bj5l8TcY4ySQxM5mcfBsTo8YqLcGjlepQaVFoMwEpRmkh
eOHbgLxqL0YCIiOWoxIQG5m2WhihZWjrhSIIob3wxtIKhXghhdyIUC+8sRSh
0Gfe9TzrP//fXvt53pOJ5+Zlnb2f/bH22muvvb72PR/9xIf+9Dd3dnZ+9+jO
zqXfzd/q83s//+B3T37uv+/Yi3+cG3+P7U3lf/W14e+OJxL+u9WT17/8zTsT
vvT1B797S8KXoJOfO47yWwM+9Q/j90fRXh8egOE/r0v4lc8cu/i+VzS+P79U
faVym0/WV/lfXAI/cyThhz+8/y+/fOi2gL/0hb1//eVDw3/G8f/jX471x+93
nt27BB27eEN+f+nrD++P/f3s62P9cb57n9j7tx9e+ru6O963bf5eD/hkwtHf
2N7qq3sbdLw84vulj47t35j1794swPT9dwIfj7wjy+P7uxP+s82f4BjfXQl/
aLOAt6P9U53xfX5vM/1jas/oY8BfrOehhN+/WaCbsj7pK/A7rvdAP8SfrU/i
7+aEjR7OvDj2v5vlm+aePJbrzfYJx/yEn5if6DHwMdY/9cWG/mJ/qD7HX8+v
X79un/Q/wgN9B76F36D3Ef75N5v1t/1bwPH92P9Lz4/rdf24vqeDf3ztOnx/
S9bn+sT87q3rc78WcNCr4MDHuL92Pj3S+/XZH+nB6HfA1/9cmt4vT6L9cf4v
/FPU/8/Hs5z72dZz6I/7Jcal9Q386XvOn7Dv9+n7WxP/Uf9w9j/LHwf+v0Hn
hwXHfG9JONa7Q//cPwP+ovxIXT7wy037P7qnxi/pcwt8beb38ftH+DuxHt9+
Y/Zv+MvxCZ9Br29IOOiL580dgPvzCf5ya/Zv+BzKA98jv3rhy+N6PJDlRk/D
+sV4dwMe+H/Qs84Xa3/v7Ni/+gt6H8c/7L/gt9djPU8A38ez/obeX9D8NvP/
xSP1fHL/6TwgvyK+N/v/e086PPG/5F9cH+13m19BT4TJX+N8HL8f+LeNb6D/
GL/oP+ar8zH29+1Zf1P+k0eznPQc6zu1/2nfv0k/ml+MV/IR6df2w0AvMf57
8P3EH86N/E79BT/Rfgr6En6CH3J8gm3+Q//Rz60JR33hK/bPzVke/Enz5f6O
9RX+2T/Pt8DvPZivzpuYD/EpfsrzK/qTvBX0cAT9af1tfQv5mOeVtT/IR4Gf
a7LcztuUn24AfBPqCx+Uz0z+GfAR8uSIn0F+jfU4lLCdJ7keE//6W+df//Hc
SA+HgF/hK/B/pFse+1vrHfTA83Cipwtj/XsS3sz/PSO899fj95o/+UEtj3fg
AV/k50uwn78XRvxP59VXx/Wb6GE94vemuv9sT+W2n4r9Yfy3WE+uB/c/26N8
ZPJDs38vBH19QOcF5xPj69z/BnwHfx73z7C/jN8k/7kLsMYb+NF62HyG8zT2
J+Xpk93veZ4FPnl/0X2J94co13zJrwPW/gz+TPn2OOo/NK7v/ggfz++Dvk7g
e52XXD+jJ9LLIA/E+ug+THq085T0MMgn1v5wvge9aT5BL+9KmOMn/g0e5hvz
2c3y4IdT//t+vpN/LcljhIfzm+cD65N/cf2Cf3E/9PUblP+D3zxYl3/q/DhO
7ZfA9/0JB37+uF4vnleDfGT6FLY/wCZvEM71pPw97cfnG3ySPnm+BT3eh/EK
PyY/T/T51NuA712v/07Kb6KHDX7/63cSJr8J/D+B9iZ8rxv8Uh6O+ZxE/zjP
X9B8Q55/I/A1rsdA74GPcf+kfKb7duy3CV6P9Cj+FPxL+yf2N+U77U+Tv6bz
4pPCb7Qv+o/vJ3mY8sy64S/GH4fxRH3xO573Id/wvBD+o98TKKf+g/cFjX/T
/TP3duEYz0MJk58FP5zGu27k+9ivb/D1+6z2e9x31f6G/K7Z7bZn8vSAv8DP
3dk++cOGns8/nPCG3u7V+eb00+oLN+v9rd3u9+R31Eex/3J8l/FD4oP0EPjX
eGN/ST7ZrP9jGh/Huxne9091+zc495vwHftV9BXz6d93/D7Zrmfs7zuz/Vh/
jc/v1+vx/JG8GOuv/RT40n5ie+S30d6DWZ/7g/rNkB81v8CP1jf2u/oLeV78
N/iH1j/4jdY3+t/N+Qa/0P6P80j1bX1y/0p/Tv1O1Kf+t6/fs/tVwX+Ir/he
89uQx081/834f/Xm7viNP6/a+w77i/EJDn6v/WHy6UAfsV+lT6V+OurvJkz8
xHhuzPaM32d7tyQc6z21v3Z7Qp5/1Gddn+1Hezdme3Y/G2DKj9E+10fjC/hY
Def5e0PdfjFf6otjPcf2BnnI9Ne5n27arnzAV+yPQyiXPiF+r0V96T+o3zN4
mE/U1/ip3yB90J5g8sJLz7l8OYwv6HGaX8u/rL2kT+mjqO83etyiv+DnN9ff
D/1R/8X+Qt68L/uL/SF5xu2H++P60P6m88XvS+uxf9q/bsvxbOjtBxoP5bNo
/xjKRf+8/8d+0/nD/U042nu8nv+A7xjvRG/rRh8R+BR+Yv7Ct/GnZv2gXxq+
p34h8C96pXxg+B/ur9xvtF/X8z+a31M/ZvxjqXzV6g9NPk795rh+A3+I/SJ8
x3gn+0HLH4y/5/6+qS4f+ov2tL8DX9dleeBL+InxiL8Qn8a/h/FRHxr857oc
X8yX4xn723l6pI+rcv5un5/o7dpsP+Z7Q7ZP/aqVF+dHjE/nS+wf6rfEv0mv
xIfBvB9zvjk+4cf0NUV945/FetE+sHT+W3nK0/dnfeq/jP+kPhry/0nKTyP/
G/ZL7Af1x/3Gctc3XxjHy/vIluVF+1a+c/pg5Wxv6fuhfuBn0se19Gz7MelB
/ILrQXokbO3lekg/YfeJQv4nf6Q+hOddzPcEymWfpLwW9zndZ3g+0//F+1tD
fmrv7+YvtGrv80v6g9gvD3Tb432a93WeB7W8r/Mh9sMIv/TP433qLSinPkT4
i/FN3z/f2A9s/YryOJ869so8zzV/yieh7xL+iV/qd0g/dt8hPXC+A32wf/ZX
23PVH/VnwW8lz0R/HftMsV+4P+w+M8zH+Fme/7SXUX8+wevGX4Dzi/7E/5b2
c+lv8oy+r/XLj6B93jd0/zR5sbgfRrm+D3zchu9lDya9mP6J/RXrHfgU/db3
+Z49cGqvD9NeEPPR+U/9kftLtvdlk78L/ySuD/2naN+M+YkeSO8mv+d81H/w
T/Ez2oOJD+oHCZMfRv93Zn8xP+nbY/0n/5n9Zr6xHygv6XvulxiPyqk/JL55
37D7VsqT0Odddl/heRYw/WMm/QPlBd7/1rjfn+2c/1ovzp9w+Ge9E/i7Nfvz
+8ZZ3FeeHteT8rv0FRyf+XekvlX2+2hf8oCNN/U54g9BL7d32p/ww/OO+0nf
U/9h/iupv5C9ZrN+X4B94RXaD16H9iZ/n2chP64h3074O4r2xS+DXmV/MH6c
9izNz/Wl63G9qC+Y7K9fbvS5gV/tH/PHSflH/J/+PJRPA9b9jPZHozfKW4U8
Qf1YbX+YzquznfND4yX/4/ln8mwBB33f1i13f/H2PAj80R/kcOKb/DDao/8C
+N035Y/o853oRfbdze8O5XXxP/qbUF42f4tpfB+4v4aH/mM+HXtyzvfuhGM9
aE8mPUj/FOt9VfYX6yv9RdDboWzf6Dv1BTr/uL+pn+F5zvOZ62P+XVlf+s+l
8bt/2IQfjZ/xFrFfVd/2D+sP9GLzG8YT+2vqfxqP6Nf07UP78Z3k4dr/Vuef
ja8Yf4y3L7+Z/2bqB+XPF/1p/NbfCvqgyX73OflHUv/i9vDJvqX1CfrR/iV9
Bf7oL9ajl9Yfzfyh8750L8pp76M95e66/dR/Sn8X+L068Rn85XD9/Qr2rmH+
gT+d9zFeyVOU56Of2wDDPniZvD97f0h+ONHLAe8nhfzL/mJ828tj3A88b4Nf
PubwD/v0X59PS/3TP4L6csZ3TPLF2umjkK+Dvu9Ce5pfyDv095V8Q3mL+N70
97G3ducX9C15hvYTtyfsd+7bvD9qPubPlnDf/lD7f9DeI/qkPyT9v2v7KO17
bJ/2FcovGl/MX/hgPAZh+hdS3nJ6B/0M623+mUvfN+XrRt9t9V96fsSPzpul
eDPqq3gfo/xJeXHzu0N/e9pnqK/q0cO03tTfUb9FfY78ybhfuR/tPl3gn/YV
+tMGvujPcqpbTn0b+WHgo6/fZ/wE4w8CH/34Pd+vLX7obxz99fkf18v8Hwt7
IumT/pa1vDneN5v7OOAV9C1D/6avpPyyRTntYTF+0t/rtqtP+mrGv26+d/+N
A7a/xfhNv96VJ/r8wuXDdWN/ifFTXj3ShWt/tr5+0/w3t+B3UX771vX9vr52
+2XSd8f/gPquYb1jP8n+S/5N/uDznfRjtM9r/G5fXbv9Nddb/kDU91H/EPPv
x7cHfY3rPcjHbn9Zj/8/kvg2/WHqm2h/oT1E+kXzz0p+ezTb532F+uSYr86n
4LfyV47xSB8X/sPwh7tMvxnr2YmPKPQ9lGcYf2b+gimPi//Sf8fmm/W1nkGP
J7Kc+2cp/i3Wj/auab3h35D6TsX/Br1pvLS3RTvS71D+i/14qG4v9YFqP2Cu
v/SR1C/4/bjVL8T66f5q+orc79qP1K/Yfsh4w469m/4siU+dTx4f2OZbMH6f
9EB7B+1tff2Ifc94ds6vmG/Ul/+TwcN+NX0I4w8b+8zax7uCPYn0V6wv58v1
jXEcqesnfcr/0PRPzXkx0Yfi65bkJ9OXDudHjGfS5zw9jkf2CNePtfgxe13S
W99+y3ggnr+mP095QuMPermh27+VF/Kh1S/KbfxF+4Rtv+ycdnyucD8t8hXQ
/sn7LOE6Hl3+QiYPFDDvH3Ee09+0P17rP+Vr0Zvpf4r7ZODncJbPjpfyU+rn
5T8823/hb3zQ+rW+qiPfFfKe4TP9FVVOfM6WZ3vkh7Rfbt/ekvxt97WhvaD3
/vhZzvHQf4b0Hfyhr1+gf+Hsem5RPtt+8lvxY9rvZ8uL+xH1HfPl+7h/sX3A
W+A3+uvzl+B/gnneRPkd3e+tfjEeW1/yr6G+6XsKeZ/rY+0x/qjgXzY+2uOK
8dn8ivimeX65bvYD/VPNnyXtGf14UuKb8/P7Yzteky+K88fn3+Kb+GB+Do6H
9k3il/cB3m8sXodwxr+M96mBXrif2B71YfT3iHaoD+7R87rjn6z7lfnLFP53
vO+xf543pC/3d5johfZ33dfdHrnv+uwBf7E+Hf/swh+a8YC0/xO/gQ/th9h/
Oj9tfmnvnPQFa2+/yK9F/0fCbq9bN/yc8YJlvMll/rCkZ7MfLPH39L+5tVvO
85jl1E+bfT3tL4zvET4o/83GQ63gP5PyOfOD6XwlP3B+MunzDnf7o/9fnR9P
+8nuF8nfO+NNe7TWN/iL7h/kb8QfxzvbPuUP4ivvb9fh+079pH/6Q127ZX+t
fYTx6LE+mk/gW/pC0rfVL/DB9bD9U8QrUV6h/YDlNUx9YgfO8ek+WNvnqB+k
Pvdotz/Si8mPXX8O1af/RsDCb4xvsmdM8Y/SBzN/J+cb8kdfv0R9G/HB88Po
OfW/ff9v0ifpl/JU8DutD9d/Nr6x4H+1f7Doc/P7WeajYHw7+XPnfrMFv/X7
xdmOPqj/Pf0bav7a32/EH+97pg8bYNobluZH+Wn2flnAs+Mr5sPzivO39Sv2
D/3FuJ62n9I/R/Qf58uW98Nmf64b+Wr+PJrkw85+L/a3je+g9LkFvg0u6IX2
Z+5/9k9/eOoPZvURi/Q2xZv1z3t+X+drkf2I/NHon/otzq/Q58zq71ZtPKPH
k0z46Le/tP4839x+82wjTwf9yf/U/eXQ3vA9/Qltv2R8nPRBtPeaPZLrk/4P
h7O/+NV+D3x0/FsJF/sp2pN+ZlYflfyF+cZ4fpB/KT7I4sUK/NO+QHvdgeSl
3M/IH3OZP1jUZ75N7Sezx5E+lvDF+e083eyf2J+d/MN5n2e83K3blRfy7zy+
cP/O+Nsx/83Oafhbn278yWf11cV5MpuvOfHb50fMpxH00vf3pb2H67FET3Y+
Ud4s7GncL/SnoL0m6K1jz8j26X9FfYL2O+MLZv31CvtwfH913V7Kj5IXaM9c
Wg/aLwPfWh+zfx70vlDcB7je7q/S8kejr4J+6/u+6JPtb+Zz6C3d/ulfOGvf
432suZ+tgf+JP8g+Q3s39XVWP/Xdwv9sPEsRv0L5kPl+LV6I++VMm9+K+5ny
oeuvz3b8oZgPUO8nOP2f9finHK/sf97+pL9TvJy1l/Lk4Rou4juo/zD6y/rS
H3K8s/XTvi/5w+SVAR/Bj/vxf25f3Xf/JOqDVu19elZ/1JxvE39W+5Z/tZA3
zd9yGJ/RS+GPSfqN/qfzBv4/SU/SZ5v8lvmMJL+avJvj6ejzkj8fyvFSn2X8
ZDifZ+X5wl8pxsd8K1M8yLMN/1zil7P7Jc8j5duw8S7BnE+Rr4Py60Hlgdnz
hPyW+o8luNAvEK7jhTv2ujyf+u+10D/S9+/a6avYX6b/TP2K+C3t11dUflD5
gfLCFvdZnifEF2H6t9JfJcYjfRjpkfFWs98vjb9Y79ivlFc687lS/Hb3c8f/
lPJwEU9h810qfxX6CvdHPuD8DyzPLuA/809JHp+ll4Ie3V/grNsrm/P44OVm
nyvGx/l6/iTia5meZv19WP9V7Hf6Z83WX9Hfm+d5a0/g/eBA5Rl/y3yv/XiM
pXLeH0h/S/ps+se4/LhATyvkN1qqz/tdcd+j/yj98a2/opzxJIF/xQsfdH+b
P+ZBvy/WfwmfgX+tL+/z1JcwnmfpPOL3LGd+B46/jh/rxOckPvrl9j35QVGf
/hKxLh3+m/5B8udesncsweRfgc++/yL13YSX5BHCNt9iPrxv0T5CeiP/J30e
qD3eB7eg99n74Rbjd3ro8W/hy/hDo79p5RHDd/ZPeu2Np0evfO/oKMr754vZ
s7c4j6J9ng8q9/ss7F8FfT2J+CLKh7yP8b5h/Cbv2/RfYjxNPz8W+Rf1KfSP
8PqtPy3xxfHM9rfUftoXaK/r0z/3l9nzuudBZz+yP7bH/ovvSQ+8r9j5s7Re
eZ7f0IW533keGX/P84b8kv6+3M/0L5W+m+cP/YNoHyH98Hys840yvzfzv9Gf
lPZP3e8Z/0P69vOpzb/K9aF8SfzMyhOJ3877nfTfLeJh2J+f5weEV21+sdn+
Bvl5trw47+v8LEe3g4vxmL3uI2256e+Wvl/Rf7q9T0R7/fgAt98u4G/V+jtd
RHwV/bFivLd32yd+KW/X8TJ9/zXSF/dT/d6u+Dnvr/S35PiYD4Xzob+83WcL
/Sv9B9zfhvaJSd7j/V/5ncx/N/Whohez/2X8Yd8fjOeN8cNsX/MjvdA/kfY0
8vPAg/SfvN+Sf9I/mfpKO68L+yXHS32L46cdD+1lNv7U32t+Nv6if+cH+D79
byTv0p5L+88s/Tf8YN/5WcbHyl+B5ynXg/KLrW/mb1O8KfFJeSH6l/4p+I3w
TX2m4b9YD+NXhfxHecL8ozJepHP/KOiB9Ll0v1iCef6SvogPfs/xzfPPtj71
b4wvWrLH1+9ByH5M/4pZfC+1fwbv6xb7JWDmz+P943jdfu4X+PfuqD97j7bY
H6THJfl8CZ/0F43x9PVxzH9v8iC/53iX6Iv4WU36mM57D+nv2I9/4Xw9f2fL
P2p+3smnUsgrZu/JfA7Hu+3V7zcyn1Nnf5/Be8/F/M3/tOif8w/8yv8h1pPx
EsznJH5s52fuB8kT1DfS/kp+xPszYdNfFPk7eF7QHyH0IYy3UP+1/7joh/Ol
fjDmz/cybkR/9Bfrv1fMcq4fy68ITv+FPj/w+m0+bLbP/Uf4oOPl+xIcv9vr
l/OH2P5h/QI2+TnPH9GbnQ+FP6HLQ638zv1i7RftBT7FH/x+h/ylhb6D8j71
i9G/+DXfl2N+JfrfkP5jffgeBM+LfjyyvX+3avNpBX75vfxbjJ8VsL2fxfiK
VevfxvsJYconQW/MvyR/P+KP909+fxHxbuZvv2r1uYEP5pumPMf3T5gfjfLc
uP47pz3/e+YL033D8gOSHib92I+UD5r8fDO/P3lHlru8MY2P8Ta7CQf+juf3
tv/TH2vyD//KmD/rvrp++mczXxn1F8pHGeV35Xxj/R7I75nPKvYn3lP9mOZP
fyDmw2M+Yp53fD891uuODrz28U/n0ceVX8zk82F87r+7bvSFhu9pv/zqt7K+
+cOsEI800JfFR6S9lvoWxe/Tf8TluTafAuPLKa8EfrS/eD+0eMmMN1c+KI9X
eK3hVt7m+pLf1Po85t/tv79KedPWf1ivaI/+lvKPdP/aNdZ3OV+558/fb/zH
qd+M72X/9/fyWvu/5xNDPquiPd4fA+7MZwX7Icd/Bu+7srzwZ7X2Uj5Re+Yv
TXrplnfWk/F2xfyDfvj+rPzh63yAnfcCST+ZL0P6jzg/mK+Y+cFET7V82skv
tYI9a6/3PhzjXfv91fdzyhcqp7/6lY6P/uC2nmy/yW/U2oNn9SlNfGb7nibv
X7Qfuny2dnki86XJf4D7z+TTLfbrFdUf5mvjOej3K8RbJD1LPqS8SP4R+7UP
sz7bo37R1i/v17wvvHYw46Eo38+ON+X7G7sw98dS/SXY7MVL/Q30EPO9euv2
OF7CPP/4fgnjA4yfE2b95B+M92K+qptfHZzvEV9dw8V4ZuGdcyM+qI9ifM6r
HG8B+/3gte+P56GdJyw/076vy3K2b/aJZn3OefzJQeG9/ca+ODt+8r+CH9r9
6zWAeX8nbPqo5n1kxMecebGxnxH/tP95PML+or2O+uIY15b74wzy+27xPe0p
hDkeni/UzxGeld+XYPqfpD+yzgvK33Ff68TzraAfLuiT57XLC+cafyy+1077
PfXRs/b9gr7ojzJLL8P4ZvFTwLS3HFSfa/rNbv99fC/Fq5D+CNM+QPzY+Jbq
b/H9Urn5oxPO+xvfz+z7H9X52xlfyfdOGe8u/40o53vVzL8i/QLzTRL2eNdW
H1zn16B+l/ikP+ioXyr0d/R/NP1SEa8f67F9e9S3xHeKZw644y+Y8UVaf7uv
Dd9TPx7rq+/53gD17/RHsvknfnm/pr2/g6+MT+/nOwh+K32v4bPAL/tne3w/
xsZX5O+075fyMxTfGz0U6x/zV/vRjvS/8b3e+6S/RuCf7ylTf8r8J8wXRv2D
8vlR/2n24NWFZnzR/vVbfr8QH5vyjORRe1+i0Gfxva/Ncj2j/JzkL6a/3Dl9
4P07yw8W2+P3vXzw8nda6p/7yePlLzTyTO1PzPdNaS+Rvt/sUwM/cfsQ3kcp
zuMNv/mF8mXEeEZ7x4+fx3zWiCdcN/w81l/7IebP98Rv8/4v87+M8Uo+iPnq
/Z0Yn+xd1D/F+Sb9R60Plz+O6Uv5fcp31O/xPbEpn9lXRvvIaA/K/THqj5hf
oDjPrb3M56j8pHZeJj/h+xXCb9gPdhN2f8DWP4ww1zfaYz5p2rNu7tZnucPt
+7U8/wjTHlrS94rnax9esq8Y/NJzHXu6zn/659Nf74rKV238W+S/0fuNvl8I
431s2t9WsM/xfkl5KeEp/v30iK/Xoz3Sm/K/1/YWzrdjPytgt7+vnd8M87X6
E3+5RvZcyofcr4SNHxfvgfB8jfncsnU541N4PvD9TH5v+z/tU5If5+NH4Q9Y
+Lcx/nC2nPuluK8Qpv2e+535uYl/O58KeZv2d46P/mluD+N50uYfW3pPy+zR
qzZ/Js8zjs/Ow8zvx3yZzL/fh4kP868b+N9FxIvX54PwRX8Fs29kueRH04eu
2ny/hClfG5z6zJPZf+Djprq9lF+UzzPoefI/+Ubg51unOu239Dk/nva9eJbH
eDv5hlP+Zbwz/fuYf5vx+9x/fM+e7w1QH8H4tSM13PAH3mfo/9/GB/E+w/dS
aO9w+aftz9+vxH1qi/ZNPl58TxPfL82/+X75vU67T+ycG/nNtL/WjT+M+2/v
+/0n82Hyfbct4+3S31n05/5qbT7NWN9OvijqG1Jf03tfpPXf8/kw/8Xa9bdb
vOcZ/VMeoj/zkS5s8k+Rn5PxCPV9drLnn170v+f86f86D7f5MaJc+ON7I8Z/
0n5yom6voM9anqC/ifSns/7zq9Z/mvGJvF8SXqpv97mivtkfEj/bt0eY/p9L
cN0+z3ONz+8b7X6hf0Tgm/6yzF8jfy/687I+zyPaW1if+30JjvYm/9Nzjb2v
fn9R+XSpD2b75t+6BUz9sL8/yffgWv1VvV+YX1z9cT94PoI2noD6EfMHKfIJ
8bygvY2wyft5HnXyGxfvDXL+s/HihXwx+/1SvuXMf/Qqyws48M345E68xKrN
l0L6pT8uz4OgX8p7ve/b+mx/qT7bJ8z7bL0flX+B9nizH5/B+7GrVv/H9uy9
ovTP6sRrbbGe9A/k+Wz21SLe9UDlqzYePPhvz18R9LNF/kvmL1uqz/x0hM1/
adWLh6C8yfuK7lP0r53lH4Tpf8L2tpD/luIbTX5bql/AjFdeun9Zf0vwFvLH
Emz7NeNHFF/F/GHR/3U1nOcL82P2zxPCS/mvCPN8PtD6FPl8Dra+C/mgf+39
995jYTzTsW45Yb5/Rn0q+ePs/Iv8Z7yvzL8vtdR/a/+nfEf9rftvtPkuN787
8iex+Jxi/HxPivczHw/urwfF32td/6D87jUopz3hYPvl7Hz+5LSH3rBlfb53
3p73fA+d+hTKM3Y+baGfmf2+KKc8SZj1uf6z/qCF/dXmm++hqJz64Nivwtds
/DD9tfN87ryXNPRP/CzpI6hfZ/4E6m9IP9T3WHtFOemb+deW7CW1fnfpPnEd
2uv4zy7JQ0v3py1go48ifxLvR7TPmny5BL+K8VG+ZPtGb4nvXr62s438E/Sh
/M/MP0f/xXn6Rbz7QP+Mt+R9KL7X+wuBf74/qvPQ7leFvsT1QVM8lPQZ0b76
4/ytPONfOu9xNednqx+x7wmnfY35tySv1vFah+vyhl6X461o7zP9Ya7/tvpM
9FfsH/Y32/6Vli/Nfwt96YHqL7Z3wPH8GvBn8QxFeeg3KN939t+qzYdicObr
YL6QTv1i/83e34r9z/PK+EFhz5itz/fam/fb2+8Npn8jx1vI/+x/tnwFf5kV
9bn7jb6V8XWEoz2tH+UDP3/2G30V5TXGY9FeZedXoW/z8+Hzjfxi65n+KNck
HPRL/n5tlgc9qX60p3Lzv8v5dc7H1aT/e2SE134eFPmp/X025gPD+cX3/Vbw
9yze3zR5ZSj3+PfW/4PyCvXzhF+5PF4x5Qvmy2A8CPVp8o/Y0Ov5U1v3f0Vw
oT8PfMi/KfbP7Tm+mI/8pet8EPSf6MOx/2TPjnXu6/8IL+k/6c+ypB+3+ILV
utE30B7D+wDxSXzTvuLyaGtvIMz7aOwH5pdj+dFO/8vllMdn45GG/TnrH8D2
i3ydS/hwfE78Qf7OMR/5G3J/L8FBD2ov8K14pFq+FX5iv8g/ivr6GP/t6E/9
M/+vtzfdH+S/HPxW43P/wtZ/m/q0+P5kro/hI/MPyV+E5+FmPI+JHxt9Mj5x
4m8nEd9wGf6ID+f368Y/LuYrfFM/bf439MfJ+4z8GeM86eTzTHyRv2x5v83z
uW/Pqe1z8u+w86Rrj5n86T/aeQ/iZH7v9//W/4f6CNKj+1vvN/IZ+VGMV+vB
eNg63k75IF2f1dqXSW/mj9C0N8k3u+O86c/83MjP5e9V2//1Hrfli0r6ejTr
L/nHB34U71PzF8kP0T7zFymewfxjcj9wPRnvSP7U8y9q/efr917En0I+E742
9b/3pOPzqcfRnu5zpHf6cwbMeAn6JzL/m8o37f9A8lfQl/htzIfvG5xCezwv
hM+YD/Ep/NM/PeKL3gv8TP2tO/Ejj2U56T/WazfhTfl7NH6+DxHzk/zO8yH4
g85vng9Gv8V54P7K7feBz90sJ3/nflji76RfxtMxXoHxxDyfuX8Zn8lyxjfG
+BifQP9srVeMX+sV6yF6ov6D+QgsviHjVXQfmj2veF4U5w3vX7F/NP5Z+0z3
/OF9+UT2V9pXfir88H5Sv39Fe6vmu3Q++XnWe0+iI08059O6Y+/Vfqe+mfYb
8rvAp+jfzuuCnunPZnDhv2b7MemF8a7ifzEezY/nG8dj8Q+pf7sN7TOemflX
70Q5/ePuzPZre5rwEfNlPkHm41B+CvfXeNr15V/6Qic/9hQ//fd+Pn3qYvP+
CPkX8Un6s/ya3fvAuF4/+3rzvjXjf/z8vDCO57ezPOid9DfFK59z+X26r5y/
N/Hn9ND6T1PesHytCXfkyaF/w88w3+AHotfoj/l3BdM/h/ASfVt86hb17Xxb
tfdR1ud5G/S+W8N5fmi/UL/L86zOb9w//5b0QabPWyGehvI66Yn89dQXx+87
7/kM+9H461DfzptTX2/OC5/fhcDvH0p+Nfp54cvjer0h+2P+wIvIR2H6izMv
uj41/f31/g7Xe/Y9ipe+MZ6P78vv+b5K0DfyKZx/uNtfzFf7YfP7kffX9Qd8
BP4031hv5dfd0PMHdP+JfMmPof44vuO/8e5N/fd+Mstj/A8mbPERZ15s5Fve
b6mf4X2X94U6Xhz+6g+M8cSZL1rySvxf8zd8M//qqvWHYH7iWE/eRzR+848q
/I3o3+Hn51T/2sRn8Bf57xO/5N+eD+nZRj8R+Nd6b4q//caEYz/rPkR8m/6O
58WAzzj/r/L2L8sPSHsL9WsWP5D5jmRvrt/TGeEfPz/iF/GZP5F+wOyPw3jM
P2SFfMMrvM+3avUHth9oD0p5TflLLT9j6juuzXJb/yafcRtfEd+/E/jU+tCe
aPQ2rFfUlz+Eya9D/zG/a7J+zE/r6+uxbuRX19evG39kysOb+fzNc4m/+B76
959o/0V+deX/Mf+SFfUD6+b+FNez389y/37t9mXOP/W3ut/RXkl/4sC31jPW
u5NPcYX8XIX9kv7Ioc94NPtzekH8U9LblF/uaafHVesvxvfqAv84X34o+Tzi
j8VfqC/hebQZ770av+8Xnj9t/HrgT/JNjPfhGl8NP2v5f51PTPTF+0i0z3z8
Y/0fk39P/Fr4jvWQPF/7izAfEv0TxP9C/uH+uMr7e0HvE/h+f7ajT1f+4pi/
+BXtv5RPX0Z+gviO+H0kYdonSJ+xf+9LOM4X8Qfzvz3zYmN/Jj2THi5afg7o
dz8y+e8KX8ZPm/zM0/oon1F9vko+jfXQem6a+/cnErb9VvTH/DW+HuR3bT5A
ynumvyv6o/7D7PE9+W3yJ2z8bdp8Vu5PBP/mgn9HudbHztMBdv+8Fh+0N8/D
64a+N/P9/iifpv9Vvz3qW+w9k/THZz4ljTf4n/TpzEdH+/1mvf737SgXf47x
va2Lr9ofCPlAzov/ur/AutHv1P5Eov/gp7vd9oMfPNotL8fzdu0nynfkX7G/
34X+nkp4s9/uUH6j0P8/kHDgU+cl9c/BzzHey/AR7f1ewrTvkH9S/p29b1L+
5HyG/WnyR5OvGP61hf7b9FFDOf13o/zNCfP+FfZw4Svoj/Z73j+1njE/tb9Z
7mfE33gfCnvQdD6eDny+6Y+y3P2xWv2QvVe86vkbKL+g+bs3/lgjf3nqniyn
fp7yVIznCYcvw6fLK5M8r/tE9EN7quyHoe94q7f3qzfn+Nwe2L4vY/wt5X2N
r7QfXmYvJb3TvkT9dG1/0npQ/2XyUZbrvkp+wfOP+uFYD92/Q9495e1fxj9i
vCM9Fv6a5C91PmXm40M+2svmR/rk+FjO9oIeRB9mT9s728hbbs9jvNESPM2P
+bKo/1Q5xx/4fnBr2PTtfF+sWB+3j7XnNeUdKy/e9/ByxP8swWnf6cQvFfFM
1L+YPmfF/LunXd9UxBduqn/93QEzXx/fA8p8lFdl+4ZfyovN962/nMlbXK/C
f9bqL5WzvbRnMr9OR/4r3rdait+Zbw/rUYzP/IMJrxbiSRt8t+85zfqXpz2v
N/6dHeKb8bGz+C/wE/yis35btOf6MeB3af829RfWqxif54dcWN9Vq3+fhbvx
C1O+3Pa9afozBH/RfGbfax3KQ/4Y78OZr0L3WeZj5f3K9IepX7428RH/Z37O
Tv6b9Bfg+1C6X75s+bUIt/44rr9s77PGPxPfsifG/pjsW62+MeiL7w/Tf4z6
euUX5f3C/S/Wvl4pD4pf1Pcj0ZPz55a+ZvPNFfRs9NSNbyf/pf5S75mZfx35
e+arZjxwP/6Y9tb6vQGOp98ey19GvpooV3yG6aeK+MQDxYutluOvzJ+c5+3i
eX3a/XkIZzyxzucaP7RvK7887SV8b5j+s4TreIpH0B7js0/U5fT3bvz9nnZ9
d8o/fD9Y8qvdD/J+91jim/yN+ri4/y74w56X/Bvf634W7lGyv1JfX7/v+ng9
v4zne1PCsX7B3/duOf7uqZ1yfqlPl34z1k/6LOpXYhxaz03/j/9BwvSH38D/
R3+E3YR5H47+EG9wvu8vG/O/b+//Aa5+uC0=
     "]]}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{947.25, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1750.}, {0, 10.65}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.825100120287484*^9, 3.8251023528005924`*^9, 
  3.825345979595066*^9, 3.8253460601715384`*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"30d04c3d-4782-4510-8d91-db6b935ce121"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"item", "[", 
  RowBox[{"Max", ",", "\"\<Bottle_Volume_ml\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.825346066021199*^9, 3.8253460829546623`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"63f17194-8842-4921-9233-ed2e80edf885"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"item", "[", 
  RowBox[{"ListPlot", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Bottle_Volume_ml\>\"", ",", "\"\<Bottle_Cost\>\""}], "}"}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.8253458987060485`*^9, 3.825345947972685*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"15d9b476-ef52-4617-a231-8cca12c549d2"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJy1nU2oXdd1x6+upFi25OjDsvwlW7L8nVInrQMNLUYvpTRVMYFmUolmkBga
KlrIqaHcpB0oGIyQSXlxMIQ2xqVxQYEW06SDmEJBtANPWmig1BkVPAmBZNCJ
S7Alu0d3nbPW+//22mefaylvctlv77M/1l5r7fW1137w2S9/7g+Xi8Xitw8t
Ftd/13/dxa3fefvPj77+mcNb9o9LW3/XPX3bW6/dtjXW//VfXf972Mv/9s7j
n9/+18Ne/r/rxXf2efl66fHPH0T9ASuf/IetJ9YNPuL1rfIbD7zw0997I8pv
vXZ9gvu9bPO/BeXDaB/1n1t3uMfL13t/4IXbrfyNF7de/8z1Dob5/+Nfav+L
81t/cfR6i6V/f9t6gGG8n7wywG9Y79aXh/7eO12br8H3Vi+fWE/oqJfXzd8e
+uu+NdQP7a88u/XU+m+3t19P7+j4/Q+2vnT978dPev3T6wnf6eWfXV/+T2M8
268jXrb+D3nZ1h/f6/zG/WJ/+xx+Vv/+6bFs8I/5E78EH3v8yfc7yrbfu1E/
9Hf228N+3Y353Zbvd9K/zT/gY/u3H/0N+Hry6wX+GX208Jflenv2b3AN+Nl+
D+Uevw3epI+h/LPXiv0X+k3Kht/D+FeeH8q7hnmcGeC9C9/v8/bcH6u/J29P
ek3Khj9RtnkM+7v46rBfu3w84oPgbw8vw7/A5zU9fWlY/8vf2/rTNYAfxXz2
5vvVj0d6Ib81+o0y18+y0vs4/wMOf6PXhY8/yR97/m/8Jcq23n1eNv58h38v
+E/66eFn4+/J63t+aft1Vw5f4ucMeK3Ja/v4UP7B1n/8+/W/B318gV8/P8LT
xg/8t/3ifgQ/bK3HzpsDPr7A0/sf4PPySwP+PAD43ur7Z+MP+Or8P84X6X/r
wjB+jGf0Ocy/pz+bb9CnwSv21+D9UW9P/r/Gl1dP5etx+ov25FeE93q+P3wK
8N2P/Qp8IP3L+hJ8Ypn8Vfhlz79lfj3+W33Ax/4f4xk/OOTt7fx9COuP+Ru9
jf1/VenX10N+FvJQzg8GfO3xxfYr8FHkk35+1j7GM3iGPGL4xfMn5iP4zfX3
49s4B7xs/CPgZfPf4/VGvx/N1+PwCHwx+MX8eL6ZfHPM12vwjfkZPAKeBq/g
pzy/jD6WXrb5Br7bfGL/ZX8T+ZjnlfTfy0c2v6tO33Le9vUGz2hPeYr4lstn
gS+230P7Xn617z84PZblPPH+Rv71t8q//vO5ofyBz1/OA8fHKLPe4HME4+1D
+xGfLg/855iXDS4D/m/9zbCfwY/IDyiPT5Z7eJGft8p6/l4e6Gc8r74Fel8N
+LI7H9/xO+qFnhL6FP6b7Cf3g/TP/igfifxQ0O/lob9T1fXYfCr6Xw9vw4eB
fnr6En7j4wd/prxl9Br7Ievpz1ODN+X1o9XveZ4Z/Qa92fqPeZn6g9WT/9yF
+qBProf8xPDt5LC/2wN8Dvr3Ro88v3gexXoEn4gvvTxg3y+9PfFRzlOup5dP
pP/+fDf8OKjt/+uTXub8CX8p+/kX8r3t9zj+tp7v5F8teYzl/vzm+cD25F/c
P56/XB/ld8r/Vj6R13/l1WGeQS823nEvr+d39rP5fvG86uUjsaew/74s8gbL
CX80+I30+HwBT+Jnfr7d62XDJ553gQ9reL75hJftPA390/An5Dfbr8CHdfXL
v+pl0qfJsx/D/o3wXhXwpTxs51XMn+s1+r4P+/Ogl2U/enwX+b6nD8NP6r/j
+ldDf0HPNt6t3p/tx+3en8Er6FPkL6eHGM/gFfKewX+UhynPrAr+YvPZ7/Mx
eAW/43lv/RH/g94Mn+vnB+09ch75/txTLa/7++JJjB/jGX6O+70q5HvDnyO+
PpvvCf3+z6J/tW+U/Yk83cPP6OVO75/8wfA18MvqA76KPzV74d3V78nvaI/K
x+f8QO8FPOrzXf9+7ZSX7bwn/kTZ4B/4nfPjow5Pwpv4ZesPfKS+o/pkuZ82
38Pev/ErzNf169UAj7BXGT4HPVF+YH/kt1Z/wtuTPmi/JL2t6f+7sV+2noCv
weN+Lxu+xv4bf6M8GvzM+GvQ//p3h32C8F6Xn/w44EN9Ovh3y74n+lXCfwgv
m99xtI/zx+D3SHX+wp+7Ut/heCzb/pOeR31qe+DHYU/l/tp+kN8fQHnp/Qm/
d/18n5et/Sgvr9Sf4PMPfd3gvcv7N3pZen9Gn9E/5UfD54q+5fi9Py+7/LvM
+0/WS3ux4E8vD4n92s+j3fPqe3gZ/N7P/VH9eWvla6fH9rZ/oR/Svidlhy/1
tcA/4gf9CSIvXHlO5ct+frYf4/pK/iX99fOx9Ye9h/Z+wccZ44m9g987v6yP
Z/R4n49H+Ur9h9sDvIJf8XxRfWk19B/wEHuazyfomfKZ7Tf9v5SPaD+N/czp
m/LTI/n6Hf8C3rRHiL2S8KG9s9g/2Jf672lfsO9CHqV8IPDv9VfSG/3X+fr3
+ve0j+n526jvSvsh+RP5h50PAW/r/z2nd/IH4e+O37u30nr3T9B+E/4n43+B
n4ZPwV8IT2tPfAh7qM134fOzdS19PNmPxblh/951/7P651cDvcT6xb5Kfs36
5PwwfIvzxcaL9Yt9r98f4mvOz3d5e9GPuV6n55nwIf9M9ovySuv8l3o/D497
e9q/hP+4PRry4Q7/gcFj4H9OL4QX6a3CD7rLQ33wQ7XvN+qT/qV+cWazevbX
+r5vb/Ac9jfBZ6FH1w+CX3A/iI8sS39daf8kv2qdF7SH8LwzfLoD44V/kvKa
0Rv1mTgvGP+i460gP5X6u8QLdaU+37IfGL3dX+2P5w/1R8KX8j7PBxt/KF/5
vs1372OoD/jJ+dGPZ/ya/uDYf9m/pN7gU/EPuP0h1k/5hPAnfGnfIf6IfkN8
4HodP45Vx8v9uTEe40FM/6J/vOKfSegljw9Z+nqEnzk/jv2kf1/paVXEC3B9
Nl7oyy16zuNN4nuuZz38p05hvICX8f/QP0VeTPRDqw/4SzyDfx/xR6n96J0j
+XjJftv66vr0+ndR8weO+3OoWqa/wL4P/k37kcZL1vTl+L7Fjxk/Rfs9/enE
d8YbiDzq+knwM/qDCY88Xq1u/zD4xX5bOdobfo3xM9vFeo0+6K+L70kvYq/t
Svsh4U1+L/pWP76tP75f/+7QV3ie2XxuR//D/At5gfrfCvr9heL8p77I9efw
+AT264CPp/rGBegr5wZ8Cvndyu+7/M75CT72+2n7G/zd2oc8IPPty+K/ZPui
/xGecd7ZeUb8I/7y/Ar7rfBnp4+wt1IeIj8We5/re6FPqXy7Gs7D4Jf2XfBL
qw//g/Bjh3+sT+2lo70m+JP09/JLhT3X4Et/WOijYt9L4nly+TT0ffIvwTfK
W4k8QfsY641/jOfVheL8EP3E10f5MPifyLNJ2fYj+EFufw57IM8Da894kNAX
cv5Pfs/4yYhH1PWO+ED7V8iDwh99fwO+lJcl3sLndzwv9+MbPCr+ZKe/o162
/YvxGS+m8WbnB/p61/mT8fOwXxi9jPFV24rfTl+x/5P6tesDcZ7m8Ug8r4bx
nd+F/dPwI+Zv6435a3zYaP8New/vW7C90A/b9/gi6/N4t6s+H4NX2MfE3u72
jpCHCQ9pn8CD87f2dflN4jc9vmXp81f4rXS8DvYgx4e9Pv/c/hL0bPC8CvvV
Av1RXma8WA1fyng0iYf2eIKQX4iv5Ed6HwX99/Cz+rDfWf17OP8X+fc8//r1
G7lyvohn3iHPW3+MLyb9kP/U79NY/YgvG+onifzL8QjfljyWy++8/xP3v3h+
c348j1rjG78KfBH66WCv6HgfaaX4kcjXNh71gXp8jeB7Im8R3jbe49X12Xhh
36H/RP0J2xV5OfCL+CfxbF6u+x8YL2Dwju8Vv0Z6oj2C8iz917zfth/l+J7y
jsgLjo+HUU9/e+U+SCJvKb4Df/r9lvjM1vdF/aqwd0v7K88P8sAS8Kzbe2iv
oj5G+ZPy4vp3R7xfbk/ifcMaPlxUf7mXeX+T8YIRf0F6JT2KPp3An/4VxtMa
f6C97Vi1Pr+PwvXV7fu0Z/D+gZX3o32sX+m1hA/jjY1e6vyP+yXxj4k/kfjJ
eMtc3hz0zUIfR7mDvYXyEOWXGfX0hxl+0T91y7z2xK9i/quKP/JD9j9j/mJf
T+izxS9UPlxV4lF4/u+plnN9N+ZH+6bEb87gd1Z/aHZ78m/xX/bwnYw/oL2r
32/qN+Tf5A+63lF/DHri/NW/uhrGjfrXd97ncf9K6Lu5vHkI5Zif3NdwfSPk
Y/v/Hoe3lUPepDxr+BL2MsbXSXyW789HvH/qK7Qn058r96dc/w77m9FP2Ido
3zR7EuWTiF8kf6c8w/tn1j7mI/FESXy0rNftUxEfLf4X19cPVscnvGy/GL83
7jfiG/x+A+MvYr70t4n91O2dxK/Qj6U/3x/eP+P9h7BHbmpfkHgP2isc/tSn
43vehzZ4V/zdrm8HfRp+xvr0fmCZb0H4veNz3T5j9F63j8j3vM/O9SXrFXj1
9VLu6VXsIbx/WPhnVjrfDv4k4l+yv1wv99fmQfvnB5jPXh9P7E+JPGfrG+lr
rvwU8ofBY4TPueH78EfQvkP4iL/O6WGJ/Qp7Ffknz1+xn/t5R//E0sscX+oT
+VDaJ/Uy/6R/loVeFmeK+Yl+muQroP+zlR+B9i35nvJAUqb+QX7fmq+M7/F3
zA9RkRf9vF54/eR8KT8xHrk1fjVecH773B50MJ9fIu8xP4jJQ1FPeE7Wuz4Z
/FDjCbGfM/pryd+ir/X9Gf+pz5/1nA/jZ4jfRv+Rf4XwZHzh5H7OqGf/tJ+r
fWK78N9P1if6Ee0d0/Xb0L/YP8oz4Ev9O89HU7cfvLEz30DyPfVvzof+BuFf
fXux9yTyPu3h0l/iXyP9qr2rvK/E+cn6kvbT/HJV0APjU209Ec8n90UT+Of3
5w7n/Sfz5f0Cnj+6/pp/JOAh8nwCb/o3CV/qA9Rv5L4Oy/34Yk/t8YX01NKX
GO9h/dD+FfyI+Mj9pL7H+42Mv6O+x/F53hC/NN7hYsHvtLyCP3Jb7dk9/Ay+
lfjsJB5a7CmuL8X4hC/jWST/HNfXz0/tBSvtP8mvxfjHyXhIl9+ZnyPokfdN
GA9LfBb7QYu/u72X9h3GOzIeMeppnxZ9zvX12A/Cg/If5YNc/qC9LOR54d+J
/KT8ZMTf+n0s6tu5/TboifYK1Y8wX/en8z4R/ZvB3wg/zneyf8ofhJffdwr9
N78PFvuv+Y/OD+NfOz1vvNI/wvvoxi8jfsW+D32T+C3tE3hwP0TeS+4rUV7Z
tMx4mMmy34cJfZDwkfn6eMH/yX853iR9JecT2zN+g/ZWm9/ozyjjdYyeIr8a
1yvlxN5Cexv5H88PwWfndwEvnv/ET+Iv5SnJ95Tsf87faG9kvtFKfyO//W7c
1yd/yuOPK/rNDH5LfYH2oNb3lOdz/kp7cQt+1Pcifw79Da35UX6a1C+r/LZ+
fuXrYTw575fEfcJWvBv3k/TD+4L0v07KBwV9rgr5avo8Gu0tdfsk6Vvmtyl+
zoC3lBN8OQr/M+mf4zEenvaDSXtEE9/G+5n1857f23kd+sbRnf7xfj7kj4L/
yX17WV9iz5m033XlfUabP+MbDlT7b+03zzf135wv5Glbz51e1ng59Nd/z3hC
3helPYj+XjkfuT8ej7fw8UjvvJ8r/heWE3qyfmfaS/vxeB9X8mNTvi3gP34/
5mss4U//Av11G8lLvt/MH3MA7QOfSU/ijyN+tODF9S3OFfRD/Yj2WM23CP27
VZ/Iv9Pwgv7dXR7oc8h/sziDeOszRTz5pL06OU8m8zW7P7vOj5hPw/bnGuTJ
Sj7MhJ+18EnOO8qbiT+N9MJ4CvprbB0Vf4bb00P/k3iO5Hzn/QKRH4t4nJK/
2P+v5v25PhDyAv2Zrf2g/1L8o/R/bqovJPoA91vwLeGPgl8t/O0uFvYf9r9G
p396tDo+4wtJX1KmPlboZyvAf8Sv8M/Q3017nbRP8ldM3mdJ7q/k9294v43y
dqyP5wHpmfLhWzvvYzq+34LvGX8Z7yfY74j/F/T+k9PT0sfX/kd/9/s5Pfn3
pM+AH+935P7eOJ+MP0c8Guc72d7jT0L+EPp2+3XQM+2l6l/d1vgk2oO6Up+e
tB8V59u4v0Fvkj8tkTcl3tL9AyH/5PlEK/fdGP/TMZ/uSuU3zz8Z/Yu86/aR
2A/Nbw550+XJSj60/nyelOeTeCXmmxF6pTzTXWzyy0l6cfk34hNkvq0y15Pk
66D8uqk8MHmekN/S/tEqJ/YFlgkvlhmPSXmF/I7xkUq/JXxIXwbnyEdBfYb+
6xuq31R+oLwwW5+t50uczLeQxKuo/lLGr4s+2Pq+Nf9kv5l/ZxIfbhS+Vfys
3A+hPJzcp5D1tuo/hL1C5rvp+jeWZxvw9/nf6u0n8SXBR/IfvpfFeKdN69/Y
mX8vmR/Xq/mTCK82Pk3SH9t/aHqf2b5jvDfP89KfwPvvG9U7/MJfSH5B/UP9
qWV9rp/X7Y+5P3WRf9/Cpw75jVrtqd8l+h7jRxmPz3xKrOd9kml8bdO3xGNu
+n2y/y14En+oz5M+eZ+ndR616lv4y/NM5OGknvg7+X2Cf3n7wF/mp6D+I/In
9dWEHlrlnD9Xxud5nZRb8kh+3zvke64n96/X/Znk/8RP9kf7waQ+OAPfJ/XD
1ngFPpT8m/qX8IfCflPKI8Qv+ts5X+Jnjq9L1NMeUj9fxJ894zzi+cD2HF/8
Xwl+8X4R5cOWPib8xvUNxmNW5pvEJ5B/0Z5CetP2ZTwt4cX5TI7X6t/LAS/i
92T8gdszgr4m9WHSo+/fnrw/jp98T/yhviLzae1Xh3yvSZn0zvNI+Ht3sbDH
r38XjI8L+DLeiPHTPH+sv4gPmrTfJucj94v8iPAiP2A8lu7HquJfr51fZf5V
7k++nrq+wO8JX57PuXxTsd9wvzctF+dnYzz3T9XfW9vovG6Vk/nI/b8v1Orr
+a95f1Djp2v+jpa+UR8vv5/A9wz5/hzv7x+q9p/nc6i8T8z1JPCYvi+xKvwX
5OfUX9e/C8Z70j8Y8diT9qcO/qzE/sr4AfWX0T9xsTh/pOz5/OifuxXjjd+v
1B/K86V13ng+qPp7bJwP/WnMj278J+QP6rfkn+KP7Mr7+oQP/ZecL+0tCp9y
Prl8Euc34+dk/sn4yg/w/dlvazxE4s+l/2cS/wt+sK38zP2NEa8waQ9N5Be+
f2H8PN5zzO0XjH8N+5PoO13t/kd9P4RfJfIfzzvVr0p+Mbl/CX629ItWmecv
8Yvw4PecX+u+Gdvn8Za8T1T3x+fvQYT/eP27IP+v63uT/Z/F+7oJvfB+stB7
4n+gf87mF/5A6zfGm5SHE3ycXM8MeFLfIj3Q3ibtHZ+Y76Ay3xZ+ET4d/FWU
Nz0+oB6PxPXKffSEf5Cf6/lX4ivlFfJr098Z/xf95fI/8zlV6Pss3ntO1k97
T74e5qtdev9WDnpjfknaX+T8TOQJ6pP0v+b8aFkti/0iyd+R309t+YcD/2hP
Y/4KrpfyyVu4Ly3w7S4W+2XnHeVXvsdQx1/W31DZ4xfq/EDbl/mw2T/pj+VN
58v94PzVX9/OHzKZb8TvV/38dK2e8jDf55HzIokvVPlovM9beX+E/Sf9ib3J
8+eEfCLyXmL/oPyf2ycpD/I9OObjX+L72D+VH8t46nn5KqJ/nscGP75/Xsmf
m5TFnsT7Fl0Z7ybxxkmZ8grvhxg9RfzfZH655Hvef5P4+6607zIfP98DZP5J
5U9lfnLJb7s4o/nTen5t+BT6h62X/oC4Xy/50Iv7+uN6Pu71Kn+M9ER7Xrwv
J/mceL/7yvP6vuuVbw7wvy9v7/bwoGfKQxLfxvvHnm/oAf9eznvHN7y/+WSs
n/FBzI+n8saqOP/4njrzMWh5hfvT4/5FvjGbV9yf13jecX3Mtx7rM/p70tvz
vNX4unO4PzHmG6M9KeYj55fHx8b39K/zvjnlF8OvgFf+/nLkM+N9cb2/cLPL
pfzN/SW/of7KMvGH/Jfyp+w/80F1iIdn/K7Hu83PXy7nifsHaf8O+V/zVSGf
V+Lv0vxiyIeZ9Ed90vC9sp6O+aa2C/lZ8wFsF/AV+bgr35cTf4rLC5SP9lbr
Jd6U+8n7d1V9OuQdkQ+Yz8vpZen1lE/1PsVK7R9+H+max4PSviP8wPMb1PLX
Id9UB//WVvleHOWR1njU1+lfkPkk8es3Oj/Ghyv+lP1b8ee+/9uS/6ikH4E/
8aO4v9nAF66vkJ9XKl/08on9RnwB6VH6n0G/N9S+X6/MZ9PvE3ygfSKXHxnP
R3xYVtuzv/x+QsxH/aUjv755Zd6Xmoxvr5bJD2P9pBe2b33PMuE7OZ6/z/ve
6bn9cb4s8zwU+mR8RT++8HeW2Z73y5L7TrxvuFGZ+VBZTuYzWV5cKu47SPlG
55uUae+82ePxfJTzhfVny/d3Wc/+xd5Y7M8ljW/YtEz7Rmv+xflc8kPRx25C
ucVPxB9dvJ+M+zM83xP4k5/Tv2bjhL2q5d+jfZn2shb9SLzcjO/FvpqUOR/y
N/bPMvUXwmeyzHgV1z+YDzj6t/aV+3/dxWJ9xFee3yo/XCritxjfRPs47deT
9vQE3yhfTuJLP79J+CRl+mc2tf+K/TMZvwVv6utSTvCPZfoTCB+ZX6v9jO9b
9Tzvpez8ku/f1OOVaB83+gp9Xt+nKfM38n6H1TM/Ju870v5woFrW+7GlvZhl
rqcV32XfD/kGE/se4yXF/pTc77f9mN8f7THMv0B9TPC71x+4/6LPeTwD9ze+
5/sEtM/T/sP8QJrPosxfOQkvv89ez49g48d7gQLPBL4cn/2ZfSD8gbyvS3+d
fN/K55B8L/iQ7D/ze9I+bPaLY/494ztsvWFfpH2V/k++f6b+B/gPEvuo/X85
tL9czE/qm9837tM6flB/GPwTib3L9ofvqUU+T/IXwe/FmY3pdxK/m/3x+zLe
QN/raI9PetL79ZcLeYbyEeOr6E8x/Ax6F/zp+Yn6j/CeSnIeGz96DPMZ/CE/
eh7rWel54/FndXqw+fM9UubPpP8u4ndsvHivx9YT9vtcnmM8Fv0tEb/D+/vy
fVK2+fG9uDH/2TcH+h755Tl977LIf1We53r/b5x/vM8i56XvX+wH/U9WDv8b
z5dN71MxH5Sti/6+vdX20/pB+d5tyx+Sv1dYzx/ZKrfGk/KV5wr9h/HgjOdv
xftvVO/j0T4d7z3a/jAfdtCPxJ/QP9fBf0f9MjnPNN/H6I/me0q8HxP5Ecgf
+d4a/ekt/FX/PPiVnweRP8DoMfyhlA8n7y91yFeYvB/C85Xv2bbq83g20jvf
26zIl85f4jxhfMpkfGUSDyfnY6ue9JLoKyzTv096t/VEPu8c/lFPfsjzgvrs
ZDxbcZ6U+croXzN+F/xd/NWJfNiaXytfOPMPkn+wnJ+fAzx7/mf0xfsmAU+e
l4xnyO9zHMZ4jEdi/j/yn0rZ7xuEPsB4AenP4/Mi/6e8t37lOwN8j1X6L/Fz
ej7tevbHeHhjt4EPPJ/IL+w8o/2J8SG8/xfnj/izkzLtZxrfRf5AfYb3Bcr7
RDafWB/fV6H/Q+m9HE/fu9y8f5GPm+9v4vvW+ovv2+97ij6xuDTgd7w3QfwX
/HL8j3y15Ne0/7Tu4zF+TuPZyvybht/k7yE/Mx7f1ll7j6SM79P1MF/GCvyu
/f7nJP/x+VAfozwX+bcp/9HfTnjJfHv5oxWvz/VTHp8ul/k0bFzGw/H+c7zP
YPvL8y72i/iZ4zvP57Cf2nyWPp6VAz94fjIf/6S/YEZ7xpezvczP7Ufz+2OZ
8aGtct5/7C/z/6l8UNIL4yXy9/OYb7KeL4XteR618muQ3ltl42djfOqlwv9H
+Vv1wdIezP4l/nVGmfZhxuPq+3G1+8qkl/0ox3ikB81fUN4/oL5mcKvhR3le
0N/Gst7H2i7s8dP5bcrzZPJ+eSJfTH7fym/r+sCHrE/Ktt+0p5AfRH8Gz4jf
Iv6Sf/I84H2L6e/L9jl/rrfP9Vu+V1f3nwn+J/548RefLd/npb2P/Rl/ju/l
fgb5+Yz9ZPxgfh8z6G/yvZBN3xNJ8hlzfhJvMCNfZp7PtN5e7cll2faX+FS/
D0t9m/oU428n+QfLjEdhfzPkv9Z9yFZ+p1ZZ9MGurX/pffxGeYb80SoLvXo8
W/AnxjPy/SzN17Qq5tc6T1hu5cvK5Q/mP525P0n+n832t5E/+hc+fi1fGPNT
837pgUb7iAemPZX8cXL9Sb406ivT71G1xi/9/5TvaC/V+I0yPybj69e/4/2d
ZP7Gv+O8o36m8yF9bAi/m91+U353E+opn25GLxeK84f4ovH9rfZ8H7087/l+
+uT9A+8/7s+17DOT3yf1LOf5i5ivamZ/if+V/iPW0x5s5x3v21XuGyfxijZO
5X2lfnzCp2WPoH2d+RYm87Ml/j7pL6knfvP9spa/JLfvVuCX4MtkPG1LHmrp
TzPKtt8j/Br5lrrSPyv02ip/iPlRvmT/vB9m50PlfdS+PeUf5ou2/Qh9hfGL
0/iL/FY9/gt8W/27vhzzUf1hW/Wrqr2E979DPrT9jfG4fqlP9DVbVyXfUlfa
R+R7lt2/Fvv39s74+cRewe+lvsDX9v0r+vvEfuj7M9eeifES+uF4k/3faH1r
/TPspRu1b/a34Xx+AfCT+w1JvZ0Pgc+T9NeV+VOk7PIr7ytV2if0N6m/VeNn
KQ+N8e+lP2Oy/RW8785y8r2UGd/I+SbyP8efrE/kO7Xnbhf2Vt63m7x/5/7j
+F7Pn/E+X9RTXiN/o79Kzq/E3mbjx/wovzAfjJ3P8X6anX/XYM++drrW3uYT
9RJ/15X2POaPWRc/dWoor/Q8SPJZE560D8n5xfcAO8R7Xinf6+T7hswXlMfP
1O2ZLIu9zPUl6nPUh/n+ZMRHGP0fmz3+DZUT+7nBI+KbDF8P+fxsPyJemvIQ
4yFaZaM/6msz41G6tv2T7Vv2cblf4Pe/o0x/DPWBPP9Q3b/C/Oly3iRl6qM2
n335eB3zZ5T5k1r1lMe5Xin39NmK55T+k/yeLXgwPpnxzjb+oXz8GWWDb/Rn
/I75hmr2qBEeER9F+Nl+xfyIf9b+cKW/cf18H/gIvmf8M+3JfH/0qO+PwMPv
J8d7gjwPyY9f2Hm/g/cT3f/L+w31+0/a/6qIjzP6DnjTPi3xN4zH8Xhw3oep
5P90+JO/zNRv/X5MXd9lvCnjMeU8Sfwxtp9jPP2zxXlr+3rUvxf7UBL/Q/mK
+Mj805TPyI9s/bEfeb473v8Z25fxobm/NvBN4hGK/sb5DvH9RTzzc8N4Ee9F
+jd6iPe7t3fmkxrvc/7+Q97+7UZ8vNFb3PchfUg+J5c/ef+wfr+D8g/pUeOZ
S/wj/6f9lfhs8zuCcsBrje8/fEq/f/MRL0v8eoLvjLeU9+G7Mj+Y7H/Cv4y+
jqE+8J3+WKPX4MeSTy6Bp9FTwNP2m/dNyf9+w8uaT22Mr6T99mGvJ/7zPovV
x/zZH+2Nm54Pgr/N86D83vDpbq8nf2f/Lf5O/OV9Ot5X0Ptr5flM+rX9rrz3
7OcL75NQfovvuV82/8BPm/8d+D7OB4kPO4v89p5/72rVfyznFc8Lt4fGeUP9
y+AR85/0z1TPH+rLd/h45P82Hum37o+kv5XyZet80vOsjB+jfMl8G0qfq8K/
S3qnvZn+G/I74n9+nzzwmfFsUk7i14QeXZ8N+Zn5/Gx/+Z4y5aGYj9x/8Hxo
Qd+Gb8T/29E/70Mw/+lh75/+MuYTsPW18hFHvjaN1zin9vJvvFjk05b7NWf/
Xs+nr7xevFdC/pXHH0K/GfNvVvWBYb9+8krxHjbv/+j5edng+8+/gvGPoDze
V76k8rv7n+71/VV8KOOnc3pmPkvmexzvX19S+PTr5f04w4+D1XIrXqeF3y/s
vJ86oz3PI8qjuf4Y563B7+683OG+Ylfad3meUZ8hPuXybt0exPvbIt9RXic+
ER9Ofr3wR8h8/H7xnd5ezpuTrxT4peu7bPB7MeRXwZ+XX9L71/14en+5zEch
9ovR3jbaU52f8L2euvwo87/yHeOP/3Pavxd9/Wwt3+OD1fHk/unI37e28vY9
PDTfxoj/kX+X+o/B92Evi35+165Pr/frD/7E640+T6C/kZ+W7yFRv6V9hvou
9QXeF8/j1Yf7xJ7vN+QV+3+sX+DN/Kwd7Dtdmb9Y7tP5eRjzt36Dn+bxRvRX
RXuebwbfiN8nfMm/NR/S+cI+YfCP/bb6BzEf6kMBb7Hf8bxI4JnnC2T+tji/
7HvmS4p4b8YPi73zR2N8Eej1x2EfEP+j51+jv5DxPPS/Bf0IPdAftIX3H5mv
sUN+/75e9r/Id1y+D7ge7+InvGznS+wP/YmCb/1+Sf5byq/Md9y3N3p4F/J3
xDtQflV7/aqIR6Y8vF7ef/+Rw5P2d5tf0J/BO/LBS/xHR/vAqtCf1uvb/Zte
r9+v1L/M9Sf7Y+XoX+XT8wO9RL4/g1clv2KH/FyJ/5L6pO3HQz6e4gvuP7l9
YenrE3x0/kb5jvE5wR/te+RDfDP4C+0lpKc1///jmL/NN+Cl5095f93gh/iY
gzF+nt+rHg9H+Yv4JfqZ86v7fX4ij/T8ydYV8ZXiD3Z4BD/M8xnTX8N8D8H/
DF+DPoye3oV8FO8XKL2fL9Yv9kLPxxH8S/OjN943TOSD9e/XTnmZ/gnip83v
3i0dL+xtzG9I/zPxmfhg8IrzVuy7XxjjewNewk+LfM3j/j7q/fF8NXwJ+dTm
E/u5Hv5ffsnLQm/JeIy/1v0gvyvzAeby3qHqeLn9I/Y7X+9o32K8TZnPSuOJ
EN+c8G9rfzXn131Z4/NKeNDfPF0u/RdreLw7yKduL6z3R3uLvHfi8fjhf+B8
xV/i8A1+Qv/9ej+e+WXUwx7z4hO+34QX43noDxV5u2O8wOg/Yb7VpbenPGfr
u6faP/1BrGd5Df///ZiXeR7l+vUndb++91ld30OR38j2534v23l2XL/fYX9e
n6f3cL5L9Pe0fr/Dv7P+3cE/Kf9O6puUP7menj5F/ijyFyO+NrF/iz3K5ZNY
n+Fj+Keof9n+B7wM/46iPvi1zSfOB9vf0H9sfid0/B36kOHneD6esfF+/Rnt
z+OxSvuQvG/clfqu2kvOaLx7EY810stdXp/HGwb+2v7HeUF4qrwy0Pvvhj5h
4wT+G3zj/LL5PoH1PuLzU39g+f6M8DePV4755fEPwR/Xvzvwnf4l2qdZr/EN
Fwv7l8hHft4yn2vAO89/Bv/Tq4F/th68b7SDf6zx44sDPibxmuQvlA9tH6J/
ni9cH/GT82M9+7Pz4lG0H/MPXSjkLfXn8b5RqzyuL8anfG/j0T/J/X5gdlns
7Xx/LNkf9Y+V5zXlHalP3vvQetz/aZXdv7PX6/W9nvI+E+0vvM9s/OuYfy/2
puR+oa3n16zMfH18L6hfv+rbiH+jvFh8X8bLibzF/UriZ6V9q579nS3fF52U
H5P3r1r3d6b7w34k8xN9KNGPxB7B7wt4l+89TcaXu/+7Nv/FgvDm/dhJ+Cfw
of1kEn5Jf2ofA3xb9Fu0b+xXMj/Z/9b+dqV+PVlO5Anxb1ffpw77k8TPU57p
4M8d5//MY1b2fBehz9IfOZkfpm8v9hS3l8/Mt+PxTlGv8vcK+bVYLuNl1H5Z
6rPCP7syv7CV47yx35CnRX9OyrTXW3+3eH/ULzT+YqX75ect3+ugfSfOF+XP
JX5N5ptL8FnwKanne3ESL9GV9zElXxT5u/e/yOu78v4p/a30F1IeJD9q3V9m
vhrjD3E/Q+xTyf3Eje6Lde37VxJPzvO2eV6f0Xgelh3e436V93F5n5j5/+kv
Efta177Pwf00fnmqur8SP8V6xvMV8X7n1D/Ut+d9gVR/HPUD58cPO7zJ32iP
M3jU42GNH4Z+bOsP/czgRf9r2Oupb5q551GHB+VTg8cpLxs+GH/fOnLXp0e4
petz/TLsm7Z/sAfssK/YPE5p+eRveZnx8GYeeQr1fD849GHbL8ZH1eNl7by4
b+v/AYFW5jE=
     "]]}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{974.25, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1750.}, {0, 7.075000000000001}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8253459265592537`*^9, 3.8253459491608024`*^9}},
 CellLabel->
  "Out[115]=",ExpressionUUID->"8c230399-04ae-4da4-a9d7-9a6405263494"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"item", "[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Bottle_Volume_ml\>\"", ",", "\"\<Bottle_Cost\>\""}], 
      "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8253458987060485`*^9, 3.825345947972685*^9}, {
  3.825409480144927*^9, 3.825409510034847*^9}, {3.8254095522259607`*^9, 
  3.825409566733938*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"d7b19406-d114-4eb5-a6e1-c9d69b166fc6"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJy1nU2oXdd1x6+upFi25OjDsvwlW7L8nVInrQMNLUYvpTRVMYFmUolmkBga
KlrIqaHcpB0oGIyQSXlxMIQ2xqVxQYEW06SDmEJBtANPWmig1BkVPAmBZNCJ
S7Alu0d3nbPW+//22mefaylvctlv77M/1l5r7fW1137w2S9/7g+Xi8Xitw8t
Ftd/13/dxa3fefvPj77+mcNb9o9LW3/XPX3bW6/dtjXW//VfXf972Mv/9s7j
n9/+18Ne/r/rxXf2efl66fHPH0T9ASuf/IetJ9YNPuL1rfIbD7zw0997I8pv
vXZ9gvu9bPO/BeXDaB/1n1t3uMfL13t/4IXbrfyNF7de/8z1Dob5/+Nfav+L
81t/cfR6i6V/f9t6gGG8n7wywG9Y79aXh/7eO12br8H3Vi+fWE/oqJfXzd8e
+uu+NdQP7a88u/XU+m+3t19P7+j4/Q+2vnT978dPev3T6wnf6eWfXV/+T2M8
268jXrb+D3nZ1h/f6/zG/WJ/+xx+Vv/+6bFs8I/5E78EH3v8yfc7yrbfu1E/
9Hf228N+3Y353Zbvd9K/zT/gY/u3H/0N+Hry6wX+GX208Jflenv2b3AN+Nl+
D+Uevw3epI+h/LPXiv0X+k3Kht/D+FeeH8q7hnmcGeC9C9/v8/bcH6u/J29P
ek3Khj9RtnkM+7v46rBfu3w84oPgbw8vw7/A5zU9fWlY/8vf2/rTNYAfxXz2
5vvVj0d6Ib81+o0y18+y0vs4/wMOf6PXhY8/yR97/m/8Jcq23n1eNv58h38v
+E/66eFn4+/J63t+aft1Vw5f4ucMeK3Ja/v4UP7B1n/8+/W/B318gV8/P8LT
xg/8t/3ifgQ/bK3HzpsDPr7A0/sf4PPySwP+PAD43ur7Z+MP+Or8P84X6X/r
wjB+jGf0Ocy/pz+bb9CnwSv21+D9UW9P/r/Gl1dP5etx+ov25FeE93q+P3wK
8N2P/Qp8IP3L+hJ8Ypn8Vfhlz79lfj3+W33Ax/4f4xk/OOTt7fx9COuP+Ru9
jf1/VenX10N+FvJQzg8GfO3xxfYr8FHkk35+1j7GM3iGPGL4xfMn5iP4zfX3
49s4B7xs/CPgZfPf4/VGvx/N1+PwCHwx+MX8eL6ZfHPM12vwjfkZPAKeBq/g
pzy/jD6WXrb5Br7bfGL/ZX8T+ZjnlfTfy0c2v6tO33Le9vUGz2hPeYr4lstn
gS+230P7Xn617z84PZblPPH+Rv71t8q//vO5ofyBz1/OA8fHKLPe4HME4+1D
+xGfLg/855iXDS4D/m/9zbCfwY/IDyiPT5Z7eJGft8p6/l4e6Gc8r74Fel8N
+LI7H9/xO+qFnhL6FP6b7Cf3g/TP/igfifxQ0O/lob9T1fXYfCr6Xw9vw4eB
fnr6En7j4wd/prxl9Br7Ievpz1ODN+X1o9XveZ4Z/Qa92fqPeZn6g9WT/9yF
+qBProf8xPDt5LC/2wN8Dvr3Ro88v3gexXoEn4gvvTxg3y+9PfFRzlOup5dP
pP/+fDf8OKjt/+uTXub8CX8p+/kX8r3t9zj+tp7v5F8teYzl/vzm+cD25F/c
P56/XB/ld8r/Vj6R13/l1WGeQS823nEvr+d39rP5fvG86uUjsaew/74s8gbL
CX80+I30+HwBT+Jnfr7d62XDJ553gQ9reL75hJftPA390/An5Dfbr8CHdfXL
v+pl0qfJsx/D/o3wXhXwpTxs51XMn+s1+r4P+/Ogl2U/enwX+b6nD8NP6r/j
+ldDf0HPNt6t3p/tx+3en8Er6FPkL6eHGM/gFfKewX+UhynPrAr+YvPZ7/Mx
eAW/43lv/RH/g94Mn+vnB+09ch75/txTLa/7++JJjB/jGX6O+70q5HvDnyO+
PpvvCf3+z6J/tW+U/Yk83cPP6OVO75/8wfA18MvqA76KPzV74d3V78nvaI/K
x+f8QO8FPOrzXf9+7ZSX7bwn/kTZ4B/4nfPjow5Pwpv4ZesPfKS+o/pkuZ82
38Pev/ErzNf169UAj7BXGT4HPVF+YH/kt1Z/wtuTPmi/JL2t6f+7sV+2noCv
weN+Lxu+xv4bf6M8GvzM+GvQ//p3h32C8F6Xn/w44EN9Ovh3y74n+lXCfwgv
m99xtI/zx+D3SHX+wp+7Ut/heCzb/pOeR31qe+DHYU/l/tp+kN8fQHnp/Qm/
d/18n5et/Sgvr9Sf4PMPfd3gvcv7N3pZen9Gn9E/5UfD54q+5fi9Py+7/LvM
+0/WS3ux4E8vD4n92s+j3fPqe3gZ/N7P/VH9eWvla6fH9rZ/oR/Svidlhy/1
tcA/4gf9CSIvXHlO5ct+frYf4/pK/iX99fOx9Ye9h/Z+wccZ44m9g987v6yP
Z/R4n49H+Ur9h9sDvIJf8XxRfWk19B/wEHuazyfomfKZ7Tf9v5SPaD+N/czp
m/LTI/n6Hf8C3rRHiL2S8KG9s9g/2Jf672lfsO9CHqV8IPDv9VfSG/3X+fr3
+ve0j+n526jvSvsh+RP5h50PAW/r/z2nd/IH4e+O37u30nr3T9B+E/4n43+B
n4ZPwV8IT2tPfAh7qM134fOzdS19PNmPxblh/951/7P651cDvcT6xb5Kfs36
5PwwfIvzxcaL9Yt9r98f4mvOz3d5e9GPuV6n55nwIf9M9ovySuv8l3o/D497
e9q/hP+4PRry4Q7/gcFj4H9OL4QX6a3CD7rLQ33wQ7XvN+qT/qV+cWazevbX
+r5vb/Ac9jfBZ6FH1w+CX3A/iI8sS39daf8kv2qdF7SH8LwzfLoD44V/kvKa
0Rv1mTgvGP+i460gP5X6u8QLdaU+37IfGL3dX+2P5w/1R8KX8j7PBxt/KF/5
vs1372OoD/jJ+dGPZ/ya/uDYf9m/pN7gU/EPuP0h1k/5hPAnfGnfIf6IfkN8
4HodP45Vx8v9uTEe40FM/6J/vOKfSegljw9Z+nqEnzk/jv2kf1/paVXEC3B9
Nl7oyy16zuNN4nuuZz38p05hvICX8f/QP0VeTPRDqw/4SzyDfx/xR6n96J0j
+XjJftv66vr0+ndR8weO+3OoWqa/wL4P/k37kcZL1vTl+L7Fjxk/Rfs9/enE
d8YbiDzq+knwM/qDCY88Xq1u/zD4xX5bOdobfo3xM9vFeo0+6K+L70kvYq/t
Svsh4U1+L/pWP76tP75f/+7QV3ie2XxuR//D/At5gfrfCvr9heL8p77I9efw
+AT264CPp/rGBegr5wZ8Cvndyu+7/M75CT72+2n7G/zd2oc8IPPty+K/ZPui
/xGecd7ZeUb8I/7y/Ar7rfBnp4+wt1IeIj8We5/re6FPqXy7Gs7D4Jf2XfBL
qw//g/Bjh3+sT+2lo70m+JP09/JLhT3X4Et/WOijYt9L4nly+TT0ffIvwTfK
W4k8QfsY641/jOfVheL8EP3E10f5MPifyLNJ2fYj+EFufw57IM8Da894kNAX
cv5Pfs/4yYhH1PWO+ED7V8iDwh99fwO+lJcl3sLndzwv9+MbPCr+ZKe/o162
/YvxGS+m8WbnB/p61/mT8fOwXxi9jPFV24rfTl+x/5P6tesDcZ7m8Ug8r4bx
nd+F/dPwI+Zv6435a3zYaP8New/vW7C90A/b9/gi6/N4t6s+H4NX2MfE3u72
jpCHCQ9pn8CD87f2dflN4jc9vmXp81f4rXS8DvYgx4e9Pv/c/hL0bPC8CvvV
Av1RXma8WA1fyng0iYf2eIKQX4iv5Ed6HwX99/Cz+rDfWf17OP8X+fc8//r1
G7lyvohn3iHPW3+MLyb9kP/U79NY/YgvG+onifzL8QjfljyWy++8/xP3v3h+
c348j1rjG78KfBH66WCv6HgfaaX4kcjXNh71gXp8jeB7Im8R3jbe49X12Xhh
36H/RP0J2xV5OfCL+CfxbF6u+x8YL2Dwju8Vv0Z6oj2C8iz917zfth/l+J7y
jsgLjo+HUU9/e+U+SCJvKb4Df/r9lvjM1vdF/aqwd0v7K88P8sAS8Kzbe2iv
oj5G+ZPy4vp3R7xfbk/ifcMaPlxUf7mXeX+T8YIRf0F6JT2KPp3An/4VxtMa
f6C97Vi1Pr+PwvXV7fu0Z/D+gZX3o32sX+m1hA/jjY1e6vyP+yXxj4k/kfjJ
eMtc3hz0zUIfR7mDvYXyEOWXGfX0hxl+0T91y7z2xK9i/quKP/JD9j9j/mJf
T+izxS9UPlxV4lF4/u+plnN9N+ZH+6bEb87gd1Z/aHZ78m/xX/bwnYw/oL2r
32/qN+Tf5A+63lF/DHri/NW/uhrGjfrXd97ncf9K6Lu5vHkI5Zif3NdwfSPk
Y/v/Hoe3lUPepDxr+BL2MsbXSXyW789HvH/qK7Qn058r96dc/w77m9FP2Ido
3zR7EuWTiF8kf6c8w/tn1j7mI/FESXy0rNftUxEfLf4X19cPVscnvGy/GL83
7jfiG/x+A+MvYr70t4n91O2dxK/Qj6U/3x/eP+P9h7BHbmpfkHgP2isc/tSn
43vehzZ4V/zdrm8HfRp+xvr0fmCZb0H4veNz3T5j9F63j8j3vM/O9SXrFXj1
9VLu6VXsIbx/WPhnVjrfDv4k4l+yv1wv99fmQfvnB5jPXh9P7E+JPGfrG+lr
rvwU8ofBY4TPueH78EfQvkP4iL/O6WGJ/Qp7Ffknz1+xn/t5R//E0sscX+oT
+VDaJ/Uy/6R/loVeFmeK+Yl+muQroP+zlR+B9i35nvJAUqb+QX7fmq+M7/F3
zA9RkRf9vF54/eR8KT8xHrk1fjVecH773B50MJ9fIu8xP4jJQ1FPeE7Wuz4Z
/FDjCbGfM/pryd+ir/X9Gf+pz5/1nA/jZ4jfRv+Rf4XwZHzh5H7OqGf/tJ+r
fWK78N9P1if6Ee0d0/Xb0L/YP8oz4Ev9O89HU7cfvLEz30DyPfVvzof+BuFf
fXux9yTyPu3h0l/iXyP9qr2rvK/E+cn6kvbT/HJV0APjU209Ec8n90UT+Of3
5w7n/Sfz5f0Cnj+6/pp/JOAh8nwCb/o3CV/qA9Rv5L4Oy/34Yk/t8YX01NKX
GO9h/dD+FfyI+Mj9pL7H+42Mv6O+x/F53hC/NN7hYsHvtLyCP3Jb7dk9/Ay+
lfjsJB5a7CmuL8X4hC/jWST/HNfXz0/tBSvtP8mvxfjHyXhIl9+ZnyPokfdN
GA9LfBb7QYu/u72X9h3GOzIeMeppnxZ9zvX12A/Cg/If5YNc/qC9LOR54d+J
/KT8ZMTf+n0s6tu5/TboifYK1Y8wX/en8z4R/ZvB3wg/zneyf8ofhJffdwr9
N78PFvuv+Y/OD+NfOz1vvNI/wvvoxi8jfsW+D32T+C3tE3hwP0TeS+4rUV7Z
tMx4mMmy34cJfZDwkfn6eMH/yX853iR9JecT2zN+g/ZWm9/ozyjjdYyeIr8a
1yvlxN5Cexv5H88PwWfndwEvnv/ET+Iv5SnJ95Tsf87faG9kvtFKfyO//W7c
1yd/yuOPK/rNDH5LfYH2oNb3lOdz/kp7cQt+1Pcifw79Da35UX6a1C+r/LZ+
fuXrYTw575fEfcJWvBv3k/TD+4L0v07KBwV9rgr5avo8Gu0tdfsk6Vvmtyl+
zoC3lBN8OQr/M+mf4zEenvaDSXtEE9/G+5n1857f23kd+sbRnf7xfj7kj4L/
yX17WV9iz5m033XlfUabP+MbDlT7b+03zzf135wv5Glbz51e1ng59Nd/z3hC
3helPYj+XjkfuT8ej7fw8UjvvJ8r/heWE3qyfmfaS/vxeB9X8mNTvi3gP34/
5mss4U//Av11G8lLvt/MH3MA7QOfSU/ijyN+tODF9S3OFfRD/Yj2WM23CP27
VZ/Iv9Pwgv7dXR7oc8h/sziDeOszRTz5pL06OU8m8zW7P7vOj5hPw/bnGuTJ
Sj7MhJ+18EnOO8qbiT+N9MJ4CvprbB0Vf4bb00P/k3iO5Hzn/QKRH4t4nJK/
2P+v5v25PhDyAv2Zrf2g/1L8o/R/bqovJPoA91vwLeGPgl8t/O0uFvYf9r9G
p396tDo+4wtJX1KmPlboZyvAf8Sv8M/Q3017nbRP8ldM3mdJ7q/k9294v43y
dqyP5wHpmfLhWzvvYzq+34LvGX8Z7yfY74j/F/T+k9PT0sfX/kd/9/s5Pfn3
pM+AH+935P7eOJ+MP0c8Guc72d7jT0L+EPp2+3XQM+2l6l/d1vgk2oO6Up+e
tB8V59u4v0Fvkj8tkTcl3tL9AyH/5PlEK/fdGP/TMZ/uSuU3zz8Z/Yu86/aR
2A/Nbw550+XJSj60/nyelOeTeCXmmxF6pTzTXWzyy0l6cfk34hNkvq0y15Pk
66D8uqk8MHmekN/S/tEqJ/YFlgkvlhmPSXmF/I7xkUq/JXxIXwbnyEdBfYb+
6xuq31R+oLwwW5+t50uczLeQxKuo/lLGr4s+2Pq+Nf9kv5l/ZxIfbhS+Vfys
3A+hPJzcp5D1tuo/hL1C5rvp+jeWZxvw9/nf6u0n8SXBR/IfvpfFeKdN69/Y
mX8vmR/Xq/mTCK82Pk3SH9t/aHqf2b5jvDfP89KfwPvvG9U7/MJfSH5B/UP9
qWV9rp/X7Y+5P3WRf9/Cpw75jVrtqd8l+h7jRxmPz3xKrOd9kml8bdO3xGNu
+n2y/y14En+oz5M+eZ+ndR616lv4y/NM5OGknvg7+X2Cf3n7wF/mp6D+I/In
9dWEHlrlnD9Xxud5nZRb8kh+3zvke64n96/X/Znk/8RP9kf7waQ+OAPfJ/XD
1ngFPpT8m/qX8IfCflPKI8Qv+ts5X+Jnjq9L1NMeUj9fxJ894zzi+cD2HF/8
Xwl+8X4R5cOWPib8xvUNxmNW5pvEJ5B/0Z5CetP2ZTwt4cX5TI7X6t/LAS/i
92T8gdszgr4m9WHSo+/fnrw/jp98T/yhviLzae1Xh3yvSZn0zvNI+Ht3sbDH
r38XjI8L+DLeiPHTPH+sv4gPmrTfJucj94v8iPAiP2A8lu7HquJfr51fZf5V
7k++nrq+wO8JX57PuXxTsd9wvzctF+dnYzz3T9XfW9vovG6Vk/nI/b8v1Orr
+a95f1Djp2v+jpa+UR8vv5/A9wz5/hzv7x+q9p/nc6i8T8z1JPCYvi+xKvwX
5OfUX9e/C8Z70j8Y8diT9qcO/qzE/sr4AfWX0T9xsTh/pOz5/OifuxXjjd+v
1B/K86V13ng+qPp7bJwP/WnMj278J+QP6rfkn+KP7Mr7+oQP/ZecL+0tCp9y
Prl8Euc34+dk/sn4yg/w/dlvazxE4s+l/2cS/wt+sK38zP2NEa8waQ9N5Be+
f2H8PN5zzO0XjH8N+5PoO13t/kd9P4RfJfIfzzvVr0p+Mbl/CX629ItWmecv
8Yvw4PecX+u+Gdvn8Za8T1T3x+fvQYT/eP27IP+v63uT/Z/F+7oJvfB+stB7
4n+gf87mF/5A6zfGm5SHE3ycXM8MeFLfIj3Q3ibtHZ+Y76Ay3xZ+ET4d/FWU
Nz0+oB6PxPXKffSEf5Cf6/lX4ivlFfJr098Z/xf95fI/8zlV6Pss3ntO1k97
T74e5qtdev9WDnpjfknaX+T8TOQJ6pP0v+b8aFkti/0iyd+R309t+YcD/2hP
Y/4KrpfyyVu4Ly3w7S4W+2XnHeVXvsdQx1/W31DZ4xfq/EDbl/mw2T/pj+VN
58v94PzVX9/OHzKZb8TvV/38dK2e8jDf55HzIokvVPlovM9beX+E/Sf9ib3J
8+eEfCLyXmL/oPyf2ycpD/I9OObjX+L72D+VH8t46nn5KqJ/nscGP75/Xsmf
m5TFnsT7Fl0Z7ybxxkmZ8grvhxg9RfzfZH655Hvef5P4+6607zIfP98DZP5J
5U9lfnLJb7s4o/nTen5t+BT6h62X/oC4Xy/50Iv7+uN6Pu71Kn+M9ER7Xrwv
J/mceL/7yvP6vuuVbw7wvy9v7/bwoGfKQxLfxvvHnm/oAf9eznvHN7y/+WSs
n/FBzI+n8saqOP/4njrzMWh5hfvT4/5FvjGbV9yf13jecX3Mtx7rM/p70tvz
vNX4unO4PzHmG6M9KeYj55fHx8b39K/zvjnlF8OvgFf+/nLkM+N9cb2/cLPL
pfzN/SW/of7KMvGH/Jfyp+w/80F1iIdn/K7Hu83PXy7nifsHaf8O+V/zVSGf
V+Lv0vxiyIeZ9Ed90vC9sp6O+aa2C/lZ8wFsF/AV+bgr35cTf4rLC5SP9lbr
Jd6U+8n7d1V9OuQdkQ+Yz8vpZen1lE/1PsVK7R9+H+max4PSviP8wPMb1PLX
Id9UB//WVvleHOWR1njU1+lfkPkk8es3Oj/Ghyv+lP1b8ee+/9uS/6ikH4E/
8aO4v9nAF66vkJ9XKl/08on9RnwB6VH6n0G/N9S+X6/MZ9PvE3ygfSKXHxnP
R3xYVtuzv/x+QsxH/aUjv755Zd6Xmoxvr5bJD2P9pBe2b33PMuE7OZ6/z/ve
6bn9cb4s8zwU+mR8RT++8HeW2Z73y5L7TrxvuFGZ+VBZTuYzWV5cKu47SPlG
55uUae+82ePxfJTzhfVny/d3Wc/+xd5Y7M8ljW/YtEz7Rmv+xflc8kPRx25C
ucVPxB9dvJ+M+zM83xP4k5/Tv2bjhL2q5d+jfZn2shb9SLzcjO/FvpqUOR/y
N/bPMvUXwmeyzHgV1z+YDzj6t/aV+3/dxWJ9xFee3yo/XCritxjfRPs47deT
9vQE3yhfTuJLP79J+CRl+mc2tf+K/TMZvwVv6utSTvCPZfoTCB+ZX6v9jO9b
9Tzvpez8ku/f1OOVaB83+gp9Xt+nKfM38n6H1TM/Ju870v5woFrW+7GlvZhl
rqcV32XfD/kGE/se4yXF/pTc77f9mN8f7THMv0B9TPC71x+4/6LPeTwD9ze+
5/sEtM/T/sP8QJrPosxfOQkvv89ez49g48d7gQLPBL4cn/2ZfSD8gbyvS3+d
fN/K55B8L/iQ7D/ze9I+bPaLY/494ztsvWFfpH2V/k++f6b+B/gPEvuo/X85
tL9czE/qm9837tM6flB/GPwTib3L9ofvqUU+T/IXwe/FmY3pdxK/m/3x+zLe
QN/raI9PetL79ZcLeYbyEeOr6E8x/Ax6F/zp+Yn6j/CeSnIeGz96DPMZ/CE/
eh7rWel54/FndXqw+fM9UubPpP8u4ndsvHivx9YT9vtcnmM8Fv0tEb/D+/vy
fVK2+fG9uDH/2TcH+h755Tl977LIf1We53r/b5x/vM8i56XvX+wH/U9WDv8b
z5dN71MxH5Sti/6+vdX20/pB+d5tyx+Sv1dYzx/ZKrfGk/KV5wr9h/HgjOdv
xftvVO/j0T4d7z3a/jAfdtCPxJ/QP9fBf0f9MjnPNN/H6I/me0q8HxP5Ecgf
+d4a/ekt/FX/PPiVnweRP8DoMfyhlA8n7y91yFeYvB/C85Xv2bbq83g20jvf
26zIl85f4jxhfMpkfGUSDyfnY6ue9JLoKyzTv096t/VEPu8c/lFPfsjzgvrs
ZDxbcZ6U+croXzN+F/xd/NWJfNiaXytfOPMPkn+wnJ+fAzx7/mf0xfsmAU+e
l4xnyO9zHMZ4jEdi/j/yn0rZ7xuEPsB4AenP4/Mi/6e8t37lOwN8j1X6L/Fz
ej7tevbHeHhjt4EPPJ/IL+w8o/2J8SG8/xfnj/izkzLtZxrfRf5AfYb3Bcr7
RDafWB/fV6H/Q+m9HE/fu9y8f5GPm+9v4vvW+ovv2+97ij6xuDTgd7w3QfwX
/HL8j3y15Ne0/7Tu4zF+TuPZyvybht/k7yE/Mx7f1ll7j6SM79P1MF/GCvyu
/f7nJP/x+VAfozwX+bcp/9HfTnjJfHv5oxWvz/VTHp8ul/k0bFzGw/H+c7zP
YPvL8y72i/iZ4zvP57Cf2nyWPp6VAz94fjIf/6S/YEZ7xpezvczP7Ufz+2OZ
8aGtct5/7C/z/6l8UNIL4yXy9/OYb7KeL4XteR618muQ3ltl42djfOqlwv9H
+Vv1wdIezP4l/nVGmfZhxuPq+3G1+8qkl/0ox3ikB81fUN4/oL5mcKvhR3le
0N/Gst7H2i7s8dP5bcrzZPJ+eSJfTH7fym/r+sCHrE/Ktt+0p5AfRH8Gz4jf
Iv6Sf/I84H2L6e/L9jl/rrfP9Vu+V1f3nwn+J/548RefLd/npb2P/Rl/ju/l
fgb5+Yz9ZPxgfh8z6G/yvZBN3xNJ8hlzfhJvMCNfZp7PtN5e7cll2faX+FS/
D0t9m/oU428n+QfLjEdhfzPkv9Z9yFZ+p1ZZ9MGurX/pffxGeYb80SoLvXo8
W/AnxjPy/SzN17Qq5tc6T1hu5cvK5Q/mP525P0n+n832t5E/+hc+fi1fGPNT
837pgUb7iAemPZX8cXL9Sb406ivT71G1xi/9/5TvaC/V+I0yPybj69e/4/2d
ZP7Gv+O8o36m8yF9bAi/m91+U353E+opn25GLxeK84f4ovH9rfZ8H7087/l+
+uT9A+8/7s+17DOT3yf1LOf5i5ivamZ/if+V/iPW0x5s5x3v21XuGyfxijZO
5X2lfnzCp2WPoH2d+RYm87Ml/j7pL6knfvP9spa/JLfvVuCX4MtkPG1LHmrp
TzPKtt8j/Br5lrrSPyv02ip/iPlRvmT/vB9m50PlfdS+PeUf5ou2/Qh9hfGL
0/iL/FY9/gt8W/27vhzzUf1hW/Wrqr2E979DPrT9jfG4fqlP9DVbVyXfUlfa
R+R7lt2/Fvv39s74+cRewe+lvsDX9v0r+vvEfuj7M9eeifES+uF4k/3faH1r
/TPspRu1b/a34Xx+AfCT+w1JvZ0Pgc+T9NeV+VOk7PIr7ytV2if0N6m/VeNn
KQ+N8e+lP2Oy/RW8785y8r2UGd/I+SbyP8efrE/kO7Xnbhf2Vt63m7x/5/7j
+F7Pn/E+X9RTXiN/o79Kzq/E3mbjx/wovzAfjJ3P8X6anX/XYM++drrW3uYT
9RJ/15X2POaPWRc/dWoor/Q8SPJZE560D8n5xfcAO8R7Xinf6+T7hswXlMfP
1O2ZLIu9zPUl6nPUh/n+ZMRHGP0fmz3+DZUT+7nBI+KbDF8P+fxsPyJemvIQ
4yFaZaM/6msz41G6tv2T7Vv2cblf4Pe/o0x/DPWBPP9Q3b/C/Oly3iRl6qM2
n335eB3zZ5T5k1r1lMe5Xin39NmK55T+k/yeLXgwPpnxzjb+oXz8GWWDb/Rn
/I75hmr2qBEeER9F+Nl+xfyIf9b+cKW/cf18H/gIvmf8M+3JfH/0qO+PwMPv
J8d7gjwPyY9f2Hm/g/cT3f/L+w31+0/a/6qIjzP6DnjTPi3xN4zH8Xhw3oep
5P90+JO/zNRv/X5MXd9lvCnjMeU8Sfwxtp9jPP2zxXlr+3rUvxf7UBL/Q/mK
+Mj805TPyI9s/bEfeb473v8Z25fxobm/NvBN4hGK/sb5DvH9RTzzc8N4Ee9F
+jd6iPe7t3fmkxrvc/7+Q97+7UZ8vNFb3PchfUg+J5c/ef+wfr+D8g/pUeOZ
S/wj/6f9lfhs8zuCcsBrje8/fEq/f/MRL0v8eoLvjLeU9+G7Mj+Y7H/Cv4y+
jqE+8J3+WKPX4MeSTy6Bp9FTwNP2m/dNyf9+w8uaT22Mr6T99mGvJ/7zPovV
x/zZH+2Nm54Pgr/N86D83vDpbq8nf2f/Lf5O/OV9Ot5X0Ptr5flM+rX9rrz3
7OcL75NQfovvuV82/8BPm/8d+D7OB4kPO4v89p5/72rVfyznFc8Lt4fGeUP9
y+AR85/0z1TPH+rLd/h45P82Hum37o+kv5XyZet80vOsjB+jfMl8G0qfq8K/
S3qnvZn+G/I74n9+nzzwmfFsUk7i14QeXZ8N+Zn5/Gx/+Z4y5aGYj9x/8Hxo
Qd+Gb8T/29E/70Mw/+lh75/+MuYTsPW18hFHvjaN1zin9vJvvFjk05b7NWf/
Xs+nr7xevFdC/pXHH0K/GfNvVvWBYb9+8krxHjbv/+j5edng+8+/gvGPoDze
V76k8rv7n+71/VV8KOOnc3pmPkvmexzvX19S+PTr5f04w4+D1XIrXqeF3y/s
vJ86oz3PI8qjuf4Y563B7+683OG+Ylfad3meUZ8hPuXybt0exPvbIt9RXic+
ER9Ofr3wR8h8/H7xnd5ezpuTrxT4peu7bPB7MeRXwZ+XX9L71/14en+5zEch
9ovR3jbaU52f8L2euvwo87/yHeOP/3Pavxd9/Wwt3+OD1fHk/unI37e28vY9
PDTfxoj/kX+X+o/B92Evi35+165Pr/frD/7E640+T6C/kZ+W7yFRv6V9hvou
9QXeF8/j1Yf7xJ7vN+QV+3+sX+DN/Kwd7Dtdmb9Y7tP5eRjzt36Dn+bxRvRX
RXuebwbfiN8nfMm/NR/S+cI+YfCP/bb6BzEf6kMBb7Hf8bxI4JnnC2T+tji/
7HvmS4p4b8YPi73zR2N8Eej1x2EfEP+j51+jv5DxPPS/Bf0IPdAftIX3H5mv
sUN+/75e9r/Id1y+D7ge7+InvGznS+wP/YmCb/1+Sf5byq/Md9y3N3p4F/J3
xDtQflV7/aqIR6Y8vF7ef/+Rw5P2d5tf0J/BO/LBS/xHR/vAqtCf1uvb/Zte
r9+v1L/M9Sf7Y+XoX+XT8wO9RL4/g1clv2KH/FyJ/5L6pO3HQz6e4gvuP7l9
YenrE3x0/kb5jvE5wR/te+RDfDP4C+0lpKc1///jmL/NN+Cl5095f93gh/iY
gzF+nt+rHg9H+Yv4JfqZ86v7fX4ij/T8ydYV8ZXiD3Z4BD/M8xnTX8N8D8H/
DF+DPoye3oV8FO8XKL2fL9Yv9kLPxxH8S/OjN943TOSD9e/XTnmZ/gnip83v
3i0dL+xtzG9I/zPxmfhg8IrzVuy7XxjjewNewk+LfM3j/j7q/fF8NXwJ+dTm
E/u5Hv5ffsnLQm/JeIy/1v0gvyvzAeby3qHqeLn9I/Y7X+9o32K8TZnPSuOJ
EN+c8G9rfzXn131Z4/NKeNDfPF0u/RdreLw7yKduL6z3R3uLvHfi8fjhf+B8
xV/i8A1+Qv/9ej+e+WXUwx7z4hO+34QX43noDxV5u2O8wOg/Yb7VpbenPGfr
u6faP/1BrGd5Df///ZiXeR7l+vUndb++91ld30OR38j2534v23l2XL/fYX9e
n6f3cL5L9Pe0fr/Dv7P+3cE/Kf9O6puUP7menj5F/ijyFyO+NrF/iz3K5ZNY
n+Fj+Keof9n+B7wM/46iPvi1zSfOB9vf0H9sfid0/B36kOHneD6esfF+/Rnt
z+OxSvuQvG/clfqu2kvOaLx7EY810stdXp/HGwb+2v7HeUF4qrwy0Pvvhj5h
4wT+G3zj/LL5PoH1PuLzU39g+f6M8DePV4755fEPwR/Xvzvwnf4l2qdZr/EN
Fwv7l8hHft4yn2vAO89/Bv/Tq4F/th68b7SDf6zx44sDPibxmuQvlA9tH6J/
ni9cH/GT82M9+7Pz4lG0H/MPXSjkLfXn8b5RqzyuL8anfG/j0T/J/X5gdlns
7Xx/LNkf9Y+V5zXlHalP3vvQetz/aZXdv7PX6/W9nvI+E+0vvM9s/OuYfy/2
puR+oa3n16zMfH18L6hfv+rbiH+jvFh8X8bLibzF/UriZ6V9q579nS3fF52U
H5P3r1r3d6b7w34k8xN9KNGPxB7B7wt4l+89TcaXu/+7Nv/FgvDm/dhJ+Cfw
of1kEn5Jf2ofA3xb9Fu0b+xXMj/Z/9b+dqV+PVlO5Anxb1ffpw77k8TPU57p
4M8d5//MY1b2fBehz9IfOZkfpm8v9hS3l8/Mt+PxTlGv8vcK+bVYLuNl1H5Z
6rPCP7syv7CV47yx35CnRX9OyrTXW3+3eH/ULzT+YqX75ect3+ugfSfOF+XP
JX5N5ptL8FnwKanne3ESL9GV9zElXxT5u/e/yOu78v4p/a30F1IeJD9q3V9m
vhrjD3E/Q+xTyf3Eje6Lde37VxJPzvO2eV6f0Xgelh3e436V93F5n5j5/+kv
Efta177Pwf00fnmqur8SP8V6xvMV8X7n1D/Ut+d9gVR/HPUD58cPO7zJ32iP
M3jU42GNH4Z+bOsP/czgRf9r2Oupb5q551GHB+VTg8cpLxs+GH/fOnLXp0e4
petz/TLsm7Z/sAfssK/YPE5p+eRveZnx8GYeeQr1fD849GHbL8ZH1eNl7by4
b+v/AYFW5jE=
     "]]}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{466.5, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 378000.}, {0, 500.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.825409495243123*^9, 3.8254095112614403`*^9}, {
  3.8254095541570387`*^9, 3.8254095719445076`*^9}},
 CellLabel->
  "Out[205]=",ExpressionUUID->"1557ff89-4940-4a2d-8b28-7964537041cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"item", "[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Bottle_Cost\>\"", ",", "\"\<Bottle_Retail_Price\>\""}], 
        "}"}]}], "]"}], "//", "Normal"}], "//", "Values"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.825073097762765*^9, 3.8250731106972427`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"7d05fd8e-bd43-443c-89a8-ecd9dbe21092"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearModelFit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"item", "[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Bottle_Cost\>\"", ",", "\"\<Bottle_Retail_Price\>\""}], 
        "}"}]}], "]"}], "//", "Normal"}], "//", "Values"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.825072797032631*^9, 3.8250728155303*^9}, {
  3.8250728496837325`*^9, 3.8250729686609554`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"f9e01a80-3c29-492b-8c9a-56acbea5ae04"],

Cell[BoxData[
 TemplateBox[{
  "LinearModelFit", "notdata", 
   "\"The first argument is not a vector, matrix, or a list containing a \
design matrix and response vector.\"", 2, 67, 3, 33513246660542459136, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.825072957349247*^9, 3.8250729691932154`*^9}},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"522065cc-51ff-40c5-afc8-e2d653f15217"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"LinearModelFit", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"4.32`", ",", "6.48`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3.33`", ",", "5.`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"10.3`", ",", "20.1`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4.44`", ",", "6.66`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3.12`", ",", "4.68`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3.92`", ",", "5.88`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3.62`", ",", "5.43`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2.77`", ",", "4.16`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2.77`", ",", "4.16`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2.77`", ",", "4.16`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2.84`", ",", "4.26`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3.48`", ",", "5.22`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2.91`", ",", "4.36`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4.32`", ",", "6.48`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2.98`", ",", "4.47`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2.54`", ",", "3.81`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3.69`", ",", "5.54`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3.96`", ",", "5.94`"}], "}"}], ",", 
             TemplateBox[{"4130"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{"2.16`", ",", "3.24`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9.48`", ",", "14.22`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3.94`", ",", "5.91`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"500.`", ",", "750.`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2.35`", ",", "3.53`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3.58`", ",", "5.37`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3.86`", ",", "5.79`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"8.55`", ",", "12.82`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9.`", ",", "13.5`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"40.25`", ",", "60.38`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3.54`", ",", "5.31`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"19.99`", ",", "29.99`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"6.08`", ",", "9.12`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"12.6`", ",", "18.9`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4.27`", ",", "6.41`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5.87`", ",", "8.81`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3.72`", ",", "5.58`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"6.81`", ",", "10.22`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{48.75, {3., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 67, 33513246660542459136, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.5, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.5, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 67, 33513246660542459136, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{33., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{33., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 67, 33513246660542459136, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{58.5, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{58.5, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[33513246660542459136 === $SessionID, 
   Out[67], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{{3.825072865347108*^9, 3.8250729236095057`*^9}, {
  3.8250729574180665`*^9, 3.8250729692560897`*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"b82846f5-042b-4eb6-ad26-21d547d072d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Counts", "[", 
  RowBox[{"Map", "[", 
   RowBox[{"Head", ",", "data", ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.825099049330638*^9, 3.8250990899571714`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"c7a8951d-7326-4205-8d11-80671a7cab9f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Real", ",", "Real"}], "}"}], "\[Rule]", "4163"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Real", ",", "String"}], "}"}], "\[Rule]", "3"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8250990905982094`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"fb7114b0-733a-4064-9c06-912ae807cd46"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DeleteCases", "[", 
  RowBox[{"data", ",", 
   RowBox[{"{", 
    RowBox[{"_Real", ",", "_String"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8250802535044775`*^9, 3.825080260589456*^9}, {
  3.8250991696557198`*^9, 
  3.825099174379842*^9}},ExpressionUUID->"c3a46c60-72f9-4c75-bc0a-\
216fe81bfc03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Counts", "[", 
  RowBox[{"Map", "[", 
   RowBox[{"Head", ",", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{"data", ",", 
      RowBox[{"{", 
       RowBox[{"_Real", ",", "_String"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8250814011182957`*^9, 3.82508146836312*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"b47dc00d-9385-4ad4-862a-952e3aa3a0cf"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Real", ",", "Real"}], "}"}], "\[Rule]", "4163"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.825081425043626*^9, 3.825081469256999*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"0b35ac86-0bff-4dfb-b4c2-7df3630c273c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{
    RowBox[{"DeleteCases", "[", 
     RowBox[{"data", ",", 
      RowBox[{"{", 
       RowBox[{"_Real", ",", "_String"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.825081489633106*^9, 3.825081499804193*^9}, {
  3.825099363646065*^9, 3.8250993653455467`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"22906889-a8da-4262-a2a3-01efd09de720"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"0.010416487801534017`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.4999842828627508`", " ", "x"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {0.010416487801534017`, 
     1.4999842828627508`}, {{$CellContext`x}, {1, $CellContext`x}}, {0, 
     0}}, CompressedData["
1:eJztxTENACEQAMEDBVhACQUOkEBCjXUkQPHNe5hNNlPnHitHRHr3El+nkSRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
8u8FvAVCag==
    "], CompressedData["
1:eJy9nUuI51mW1yMfke+sjIx3RkRmREZkZGVVTmVlPcYqpin+Yds4gzYtPaAt
2Iij2Agt2Aq1GRf2phiYTW16o8gg6MJVgfSmGZiNLnqjiCDmZhioTW90MZsR
ycrKsvP/Pd976v859+fN6GyMzZ8b93Xuueee972/u3//n/zuPzy7tLT0V1aW
ll78/s7nv7/+2W/fPPlf3/3ZnU/+562Tf/ejj648+bdXTpbmf+sn/+pfvvi7
p99b75/8p7948P1P/+PNaLdz8r9fFP/i0smL3t/92erJi9KD7984eVG688lW
1F+L+o2TN+YNLkT/lWFZ/S6c/LLwy//cPJn/PLl6Mgf78/UTwX/x5J++aP6j
mydcj9pfjPY3T353PuD5k3/+ovj7rwWc12PezZMX/13/7Easc6uNr/Y34/ds
tLva4Jov+1Pj71q024h2X8z+y39+8Xe+wCv8Xj55b/63drI/B2g9yncC7msx
zkbUX451rUa7cyca/9rJfNr19Wh35+QHL/5+8Uj4ePjByXzajzai/37gaV3t
frAf+7Ua8O3F+CuBt+22Lo1/UODTfq0HHPuFPvT7fCa8XQz8nwu8XC/0ZXoU
fqf2O/dH6zoXcN8o9KB5t+P3MOC7EniZHt9lr0Pr24v9u9rWrfEuBD5uFvrT
+bga614v8Pfnvxr1tT3H17m9GePfinXdjPpb8X+PuxP9bwbed8r+8/yyrHVe
bPum8pnYryuB5zONzkkP3B/V34r1HZX2PK8sC47rQa+bgY8r0W4t4DgT9H6l
0APpV/TnfY3z9INrMf5G4Om+2v/3xzHPcjvP3E+eF/JbzWt6XyvrZ5nnXf+/
Fv03Ao9L8f9LQ/6ocS4Gnd6M9V6K9a4GntcCz5X+uV7Nfz7qXyv15rPz8f/b
3YJf0ucIX/rd0/p+eBx88a7246dvDvGp+VdjXbuBlyuxbtPBSsB/a7gereNa
47vEp8Y/D7lpvn+/yAfNvx3wHsb/v5hp3PNlfP1eivlXg+5Wgt5vBbxnGl6F
r7UY/3b8/7XA91bj//Ofn9wVvfzRodb/5w/LetRvI9a1X+iN+Bbe3tM8f/xR
4X9av/nX7oT8zvWRnljm+OaXgvNWgU/1awH/XqxvJda7HXSwEnBsh/w9Uv2f
vlXoWefNcny3nF+Ncz3mNT+7EPCuTPCDPA9qtxXw3y36idpbb/A+XQ641gKu
q4GH9SanNe9GoW+uX/Bea3SgfVqJ9tsxzvnodyPgfi3402ZZj8Zdjf3dCziv
tvkp3zyO1nE38LQS41pfu9DOtelA7e4U+aXzcTbm8z6dD3p4LeBZifm2y/5S
P6a84viC79lM+Fku8lb4PNvomPoU6a2vn6X+IzhvBhyWD1/NhMeLRZ7o93zg
qfIvlb+aGW7KA63vfMDxWqkX3JY7e21e4X21nQP9fzvm3Yz2dxvfmo/zzbsB
50b03y/8gPx2VCa/HZUpf/X/vcD/cTvvarcZ9HIu4L5e5tc45+L3ejlPPJ/k
v9xP7gfPP8ejfkT9gedX4x2Kvr79sKxH8FwI+Kr9J3q4EevYKvzGfEvlvaJv
CY5L0W+1rEdwX2x8ROX1RtfsT3zq3NhO2In1b0a/g2I/6PdC1K8Ufm38qbze
1qN1bhZ+on06iPYPGh2ovNX0YNHX7WIvcP9IT6QX9T8b+3O10CPlaV+/zfFt
t2kdW6FXvx/0MivwE/99+t6O9RzGfl8JOlor8r3Pv6b1MZbJv1lP/sX9s/y1
ns31kH9Q/zdf1zpfL/XWV/S7HfPtBR6OBd/f/k7g52+V/aK8oj+F41PfYNn8
UetabX4M4W2j4JP02ZdvO0GP9wLv5lt3iv48n/fnb2ic770XeL8V+D5sdui8
/Ydvxbx3Yr6w+37yruD6s28UfiN99s2A+/1YZ8ixD48LfkmPWsd6/N4p69W5
2Q047sX/ree9WfRT6/fCx+2Yx3parPNnt+K8HcV455repvkuB9z2V1nPsL25
Fvt1u+hfnm++Dx8fNr1J42/F72r03y36DPmL4Lna+KP1ELXfKvJe460EHrbb
edN+GS9rgY/bZT9p71Iemc/N+/3eUSnr9yDgeVD4mehzPdZV/Wc+J6KTsJe+
uy94f/x64PUg7N0Hzb8xn2f5sIxHfVr75HO3X/iD9t123xtRH+f66KDQT99f
uK19/veHpT/5Hf1R/fkJX/K7Pj6SHgyv8HoUeDyMfX24aIc9Oijwmg/OwfuT
gwl+nGXjW/SV+onOq/Wzy7Geau/QnuR+Cl77uXfi3IddtHxQ7GuNuxzrst/7
auz/OuyyrTIe+a3qTTevl/NBf4nPm9axF3RxEPh5I+bdjPN+EPi4Hfr8/aDX
6PfguMGt/+8H3m3HHAZeV8D3zLf2y/5o39+Oc/tB8e/QHzXy79G+Iv8hvgyH
fo+bPiI6uB/4Oxb8T98u8JM/097hfC4Lvq3m5xIdHxX9VPtypvnJ6J82n1X7
w4Iflc82PZz8Xvi7FOPZX3Yh9tt6dsYT6M8Svs9EuytBZ2djPPs90j7r++sv
B32nvaV219t5UXm9lCXHzja/P8fnenk++vG49F+rfC7aXx/Wa97nM+Hl4kS8
4cuZ/Uzav6XA4+Xi32PZ8Q/TOfVF0gfjCdQXqF9qnjNNbyL/4nha/0qTO/T3
d/W1/8d89nfoXN0o/WmPcj712w19817TrwTn9aIfC1/Wu7aLPKG9pP/bT1T9
afaLSu89LPjWfl9pcUjaL7SXvZ+Ce3XifFN/Oo7xHpf1a7wzAdfl4o+wv9Jy
3PjR+rcLf+L+0b9E/4Lo3n6ozaIfEP88b4xf99fv+NBK8Y+Rf4zqeb6oH5t/
CH/WJ841v7l+v5gZz+QP5O+iQ8dXr5d6n3+NZ/68hLj1cpPDgnupyUHiU+2T
f9MfqnmXGp+2P8J+Te6H9u/pzHxR+Mj4vM7L85nXYf+q/WDk16zv+x8uBXzW
t5fj/KwU/x7ptc/Ps0z7mOsl/6a/hu3JP7lf3if72Ubyn/WC03rVcfF/kf8s
+lX2mh1qvU74uBF4tf/kTPPz9M9b1pMfqH4z4D0o/v2Xq8/xX7V+VGZ/4fNs
i4uQnnkeSX/cD9JjXx7mePZ/aj92ij0xiofTH0J+K3py/O12jOu4y1bR1zTu
1YBjvchn5r/0+Tv0p6/Z75aztgtoz4/8B9qX20GH98t4tKdpD1IeUN+nfLCc
1XmI/InlsNO++U6R99Q/NY7jMpvFH8z9Y73wY7lS45XUZ6ifGP/ydz0o+KV/
h/s5ih9wvd35vzZfP56b+VuCZ7nxLa3rPOLqGR/t+3vzvBBftGf6+RaXmx+F
8X2eJ+YLcH2O+2qeg+F57uebbCzu49fWI7+o/fQPS3zAfkKd87tFX6R9qPrl
qL/R8K5xNwt8Xf/R1/xPnI/7rfXZLtiasOcdN6nxQO2P48e1zHiB+p9rcpv+
I5UzX7JvL6f+PeLH1D8Y33Q8Xeu7Weid+jv1UeslWtd6oWfio5+vlmXyQ8cN
NM9O08u0vt2gm0stbs/1ap0XAm8rzS8h+HbLebG/1n56+g+Jb9obtLe0fq/D
frK0VyjP7KdQebPYO9QXqH/Rvqf8Z3uuv4+Px5Gf9eGE/Z/6IulD63g607jn
ovw89PcLBT7md2h//f+1aG+9cLvAy/il24tetsv4mnep+ZUW7aSN0p/rFxzM
X0n+bLqd//7hUaknP7a/T//fGOqPtqsE/0qjL9Vvtri39mW38GOuj/5SwW89
cbWMR3+u/QrCk+NhZ6CnnGl8j/vR108vRDnzG31OSW/UtygfaF/19cetiD9U
eUX7hPyP8o/6LMvCm/NqNps+43rNk/nilAdqv9TiCiz3+f+FxpdVZv7kpbaP
/fWeC3q59pL+9Mw3ob4s/Ge+heDZC/35uJTt59D/azyZ/NT7ov24U/LFqC8K
jqcz+2V07p7NrJfovHw1s15M+tZ+ng8+VPNnyS8pzymfuT9PkN+lec43PV/r
Svi13oSf/bUvSy1OTH+q21vP5flhe65P+Hg2s59T+PpqZrzQ3y46Ot/4GPHR
988nfIRH7c3Xq/4mfGX+pvVz82HjT/Mtl/loj9O/3fe/pL9P+Hw28zkTvpYa
3KQvy3et40bR/0kvhI/50Gp3K/BzNBnPsD/Seo3Wv1/GV73vU9gf8cXMckvw
LbU4Efsb7453Wa4Jf45LbQS8B0Wf13jXg342mzxwfI36/sh+UL3xcOvU9gn1
X85H/jnSx/r6e8pbzXMv+OWjIr8JH+XRaH79Og/yqJwf+issN3wfifRB/Vrz
Gc69ptdrnMyvER7vFHqnvkV8a74Hmu8fvDvhD3Ce2nHR5zleX1++0eIapD/m
s9E+ofzs38e60vDQtzcvQi/N/G/62zTvxbYO+ru4n9R3qC84jqD175T7GCzT
XqW+1ef/ST/Gi8ap9j77s57yiu0F19lml4/um9F/QHuM8pP6ougk8/H6/qSk
P+Kzz28sR4yn9BfTvuL5Jr55HmlPE7/0j3G/NM5y48u2e7WOg1LP8bhfGvd8
06tpP9mfod9qv6l8temtxpfjIzyvxM+nyDcW3m1nVv7H/dJv5j9+gngi18t4
Ul/fTHuzb49nmf4W+iv7+evT9bQ/hLflgH+l+ZfNN0bt++c74e/HI5NeTjv+
qD396zyfI35B/ZDxF/szBL/vN51veQIs9+3djLeQPzF/c8TvzDdUvz1sb3q1
vT6Kt/f9menvsn3jc07+zf3menW+vppZThJ+wsf4q8+h7/NQP6D/QeOarur9
TcGT9zX6+fppD9F/SH1WcFxpfIT5dczP0rzpDyA9Uj7zPpjvT+n/js+ZXnfi
/ISf9+Pj4t90nM5+APrLST/UZ0z3tuPVPvMFnU+k+u1ib3O9wlP6/xx/0b7e
LvTE+Ykvxot4vtU+8xtoH5mvOS4o+DLeZv+pxr9S9D/Tu/B8sYzneW032S+n
8lrR76f8C7SP7V8QHSy1uBb9FZRv9K/wPAiOC4HvGu+mPNG+nmt5WrSn52j8
2nsL5PeUZ6RHwf3VzHo09buRPOT6WDa+1P61iXL6Q5hvQ32d8Pb9T0vgE7m/
7M/9Jb9ie/pH6H8ifu1H0zibL6k/pb9U6zjbzqH6P5153fSPEV7G67QvZ5se
2c9HyftAlL/0nwt/1iNuNXhFL1fL/Kzn+WF71hN+tmeZ54X4HL0PQX4+us9P
e4n9qQ+wTP3N+6x13BjCy/mFt8z/ov+H8wkvS/F7aQgv9Q/Kh9H89B+dtn3f
H+R7fVW/Y5n4FB2fbXYU8TmqJ//TPJlP6P10Pu9ovJH+TXtN/Ods84NwPNYT
HsJP/FgOW+8mPukPHe3nqJ7jW154fK9v0W+V/GxUT3lGfI3qaU9x/H55Gr/e
T81X+Yv1A53D1SJv1C7fG+i/N5Lt+/L6UtvfPv+bvp/b96fneLaPfP+I55fw
0Z7ieH3+m+OP+CXPA+0n6yUad73JZfvxCe9ovin70fBSvyD++/vD+Mj0+xyE
h/FNjs/+hIf3dVimP5XnacpeWvQPZb4H7RGfB/sHSY/EN9/LYL4M46m09zg/
5Q3x67iR9vm1xu98j4Blxv/ozxacZ5rfk/hkPjT9KYyHE7+2R3zPle/P9eVt
xgc4Pt/XYv7jVD6k43X99zlSv6D9KnrIfFjSs+0Cxw9G/J3240g+s57+adtz
tgvsH7ZdTnxQ/+P4ff0j82fU33Hu+v5BX99NfqJ1LwW+L5X5bG8Lf2uF/nie
aF/QPiK8tsPUbxNxgN3Cn4i/vryeHp/6B/Gl/TsT41+esAezPe9Xaf4vZ/bD
j+b7PPyCjo/07fl8R2vxHZWtQt9sT3xwP6jv0X9HfYX66FS9y4Iz82FGZdqD
xE9fP7V/8Gbhtxx/6nxZf6R86tsHyb8Np98pEHz2Q95u+Tr2O+g85f0grtdl
7Wv1L9E/Rv5H+UF61jjM15x+P4X0S32K7z1x/2l/UN8j/yM8HE/3ueMdph+/
WfyBfX6a8V/Sz4jfkj7oD2I9+1t/cX5Dn7+m/vFy+KO9l/4wxhtG66P+xP0d
9R/B119P8iOun/vH88N8N+5n35+U+Zqir/PxO7YPOR71n5E8EtzPZv6//XeL
fIP3XRK+09LnCN8sk17WP1uMP/P8c37mw3M/SE+klxG9Ld4jrPhlf9ON4LY/
LvMJyB9J/9Q/uT76c0b+u/55zPsk+vU7RHX80f5TvhH+/nps1+yXfDmO53iJ
44J9+475cRnvNZ07Hsn90fxLLU+Q593xAuGj5reyPIpPjvxRGifv4/J9bOq3
ff0l74sR/9Qn+/Hfl9eX1N90c1DivYzf8jwJfxmPI32M8DWit0U7tr4/zPcW
aX+P6kmPI3z184HjHaXP3yr2jPYr88lH/uope33qPpvwfqbFxcmP2F/782Wc
x5rvO7KnT6t/U98U/BlP43mx/rwYD894jfCU7wP29aHMrzTffhL5HISP9wn6
/rCMf5i/2M6yfLbey/HMz5xHy3jmaD8Yv2R8lPHP09oL3B/uN+mt/343vx8w
7W+i/sPx5//+6X31u/hOqWf82edrMZ6XZdPT1PunxL/wlvEtzkd/HdsLv1/M
hB+fo+n7LP33FHgfhe/9Tt8XojzgeaZ+6LiJ1jP1Xrrzjtaan0fwrBb6F9x5
/0nzMH6Z44uen89sV3I89c/7ayzTnjK/sP+j72+63Oxswjtq3/dHp74ivHw5
+yji+PaXmq/07eHMT6I/iPb0yH9E+Wa61jwrrZ/vgVGeMt+S9NJ/TzTpl/dt
1S/zf/ye7pPIG6P+Rnqhvsv3Hmk/mX86P8dw2Z9FfjLS59U/7WO/N2O9nueV
/HPEL0fnRXDm9ysI76jM9VhfcL4w6fG0+sBInpDf8ryOyqPv8RBfLLM99RWe
9358L88v6Yvni/5Pyv/++f/V60+rP1BfeDl7tr6XyO/DuMzzRf3J9ovfySE9
0h4c9R/Bz/1ePK9Vf+V6XhW/ffrkezJZpj5M/YPrHdWf1l9BeE+7/tO2H+Gf
/P7l6CX7Uz/qxyvzPJ223nqezwnh6+fjZj3xNaKnUb4P2/9q553vrU63977q
3N8s8pz97U+1XD5tveNwmu9g4nsEqY84njpVT3uhTz/T/sUp+e7+I3rqf29g
uj3tO5atd6p/3R/Ox3qWTa+LfsaXP9/CS+ZjnrY/93+EH9OP7ZY+f01/CeOl
I/7C/qxnvIDwU57x+xKsN/06z//l+pM/sD2/d5L6OumX+uco3jEq9+/PXGj3
gPr+hOWm/7M80kdY5nq5nn58PeMjfXpL/k/67H9PaHo82oMjeh/Zh6P5SA/k
37S/yB9G/hni+9OIt/t+Qz9fcDo/kvnZpH/ba6qv8qMfz56WN5YPXif5C+1Z
8zn9Vv8y7xdR35qyx2xvkN/Y76Tfmu/H9dEeY3vaXz5vzo9ge+4P8cX2o/lG
4/M8kL5H+QfCd8bzyM9H59Hvn3g+jsf52Z/7MbLPR/vF915Z5npI3+Tvtj+0
7zcLffldXsd7KD/77/3x/kDax4yPkH54vokf8iPii/zA9qPjZ9yPzyK+7vsx
/fXwfuu0Pkr9sn+fZlqfWMRv/X5nX7+Z/r4Z9/u0Zb5nNZpvVD+yZzjfqMz5
Fv2OFZ7R+9fsT39pP96R3/vt2xt8P2caP5SvvF9lv7nGdXzSekONdxG//ffO
M9+zv57Ex+i+hODK+MVo/80ffK769/fyPZSp+Kjz5Ufv/VLfeRLxMut9qs/4
hOWPx2WZ72Np/b6nVd930jz5Xjjly5S8MT9c9DPUeB37s97vMJufCw7HwUxH
ad+SfrWe1H/pr6S8dnu1q/TdzxdK/BAenl/C/0nkdfieAeHn/H1+kP0X5exG
2U/Gf0b0T3jIzywXha9pf6r79+2D3F+tM7/f2vdfZH+vV/OvN3tH864U+UP8
s0x+Rf2P+sTifGk/TvmbuX+kz5e7fzVd7sv/pA/io88fE74R/2T7fnyK+RLT
8fj+/aJLuKeR+RUvh+/p8Wnv8Lzw/rXPu/NDvG/+/k8/vyXfkzad6Xe7fI+2
b78nPY7WM6qn/4f0T32V7fv64PT5GdEX8WO/m8at33sg/Y7Wq3nyPjrxyzL3
v3+eUl8xf3O8x3mf6r9VxuN5oL4wOt+fRhzfeVxcv/mR4eivJ9erfcv3VWhP
9d9zTH2E8tP6hPPBST9PEH/t86Mcj2X6L/TL+D3vp6a9y/f/tZ+Z70h/IN+v
6PvP0j+occ+0e2nGr+DJfAT7qzVOvp9L/zfruX+sf9Uy3zMmP2B7+odYz/PH
8mnh83743RrWj+Q1z9/ovRGWqT/7ezyii0tFPrBMfUjzpv7O8zIa3/4lv3Ph
PDrbQ9TvqJ+RP/T9kcstT5XvF9mvqHFvlfwb75fp3/qi5nEebuZPv9z7FPn9
O8b/fe6F33qflvyMZX4/i/vB/Dbhjd+/5vuPqZ8IzrwPovPjvKLxe3LsbzoU
HjcRB9so+o33TevaDfzl9//43iT5Efk737Nd5IO34v9fzmwX6jffByQ98P3z
/n3ot7W+v/tB0Tdstwk+++/ye3I+F2pX7xeqPr/nKvzvxvtZ9ybet8v8GsLD
fDbrsar3d+z9Lvf9It/5/YJ5u0dvx/upHxR9h+/hUb+gvBN+8/tvgj/fX2CZ
8AvePcH7w+Oin1Pe209nfyHxrXU8ElxP/1L5PiLz6YSXvB/B91TNVzTuTpFX
1OeEr4yn83459ZVFO3O7yAvel2Q+Pe8r/LrL1Le5n+Q3tJ9YNv0svpeY/Jfy
hPuv+qczy23HJdTO9x8yv5b7y/HVnvdf8vuKnL/vzzgb/e2Xy/e7niD+39cn
8j2rfvwv7UftQ75/yPWwP+Hvy1/q06kP+36Wx/sk4ieL+VuZL91/XyHrnV+q
+rqfvA/Wt5+fx3v0F4t+Tfrie1vUR0k/9Hf4vrrp3vqh8LRW+AH1U+tPhkt4
zHx6xrNor1puCc7V4XzUNxifJjx9//SvDp/qM5+U+8nx1S/fN/J5cTzY+J7y
p/TvD+b3NEkfXA/xRX2C/IHnj/rp6Ly+anvCc9r+1OfNz7RfNT7V53/nmp9V
455tZbYfxb/65z3zDbTOC81+eNUy76eM8tf75Yx3Wv65zPPB9qP+LBu/lqOj
+VT+Yma/z2i8fv8scz95Pvv+6OTnLLO94ynWW/v+3ml/26is9eZ7wywTnlFZ
v2faPXGWXxXefn5M2ge/7vkoDylPWG8/guikfr99lD/Wzz/J+yenLduf4fjZ
CP4+/8sy7a9XLY/y9axnLfqj8j6jytP5Cf31pX5K/zLXO/IXL94DHZ+PT5H/
Nupvf+livCbLhMf8zPxo5G9j+yn8TJVpr1F/of6t9kvtu4Yu209D/zD3j/Ka
ZftBrLfS38R4PecbxfdH+Scjehnhh2X6H07rz6V/k/OP8M39ZXm03lF+J+E7
bT4o+4/qLd+1jvresc7davNL8XsY3G/K48W4+1bzc2ie9aI/OC7k+xmqz+9T
2A+2eH8x31Pme5Ms8/4q/cEscz1T8e/F/HDfM9mfeE8s8x/79zXzvr7xpP0Y
j0d/C/0/trdUrvmCfXpIe63/HovtrpvFX0D7yHqk85G4fuvdGn+7nHe3V7ni
y35i0W1970Dz2299dyK/YDq+27f/8/sxhI/jsT/hZ30/3pr0wP3ne532n2q/
95qfVv3vFv+F/bSaZ6/4T5k/xvcnLbdE/6slPkD/p+DKeDDhc73fRRv1H92P
pX/Jfil/X4L+rEW/rr+PFu9s/N5R4S/0X572/L4qP2B/4st6o/pvDufneWJ8
gfKZ+pD9JppnvcRLNI/fdcjvV+nX/sGMD9GfQfkrOn1dcP75OzGuv6t0v6yH
8ob83OdB+7/X1iG4/H3RfD+U9r/tDMG71s6FfncbHxZ8a8X/ZL+l5Fv9fhD9
H/SXsr/LlqveN4273vR89bc/NPLinh6U71fSvqc853jWw4TXzSIv7XfVeVwv
8aXF7woelnzAkb3B/eX7TqYrwblZ7CG279tLWbZfUfDVfFyWPb7pnfSt3/pe
6FSZ/GhUZnym/5565mON8vdPW8/8FjV7oH27+G45Lywzn0S/6f9mfI700Y+X
pT/ccAtfa0W+8D1Z8kd/P810xnj5iH7VLuPvU/cD3V7zhtxdPij64cif5/cH
zY8ZL+rHg/P7tKN669eL91NSPvS/n5n9ef5FB7637ffFM//E8CzeH818wJF8
HtX3vx+Q9grL9P/wvJuuBeftCfynfKK+bXnhdtb3Dd9UfprlC+UJ/dFs73bC
90azsxyPtnz3e5nsT/goDzV+fh+S7wmafyzaK1kmPvr5+HlfnPye8pLnyXHZ
zyK+Yb6v+p3iD+V7vyxTv2bZ7TTenebPEj6ul/Gov6l9fj/dckfvAh+U8Umf
I3jIT6fGE7w+D5nfrl/f07nZ5JPtCvILybO8n+t7qfr/WvH3Up/8BPFqluk/
Y5n8gfaM426ar/KTvj2U30sxv7Q/gvyP87E/7anR+NSP++ub7j9aP/uPxqc9
Yb+D6Hin+HNJr7R/yK/p/xn5N33OtC7ri5mv1rff83vOtM/636PM/GiuZ6Sv
kZ/Rf/sp4un9+4bUh7IseDK/jmXG46n/8T4C8UX+PPLPcP20R0flvv/+QtMr
mL9J/qN5fU/g9oR9Ovpert83r98zJX8gfdCfR3j79mWWR+1pz7G94XP8QevO
fOHReKP8z1G5Pz7zi3he0t7geVG/zI+g/kX//JOIf6tf3qe2nsL2lEc8n2xP
+EdlrcP3ELYm8sGnvx9FfzDH9zo1ztawTP+w8ykW/5/5FeSP/fPC95LzvPA8
EJ+0DxftNec3ZT4I6YPyQuNlvI1l6vv2x5tPjN6r6d+vns4/Gfm3R+1Z33+/
5+XrWRZerzU7dSQ/hafnM8eL+/pG5uNSHvA+xag/2/fzfafbc3yWTQ+0h11P
+hd+Mh4vfGT8WOPkfeK+/zDHE13m94p8/8J8g/Lm5fKdsty/X5nx1anvf7xs
vcu+z833dgjPp8g3oH9ulH8xak99mWX1y/yl/n0I+iv5PdjUv2ifjPgHy+RH
fXtnWv8b5QuN3mt6uXyszAca2V+j+3x9fXJa/xiVeV51/vJ+FemD7y2x3L9/
OC1PWB69f9XXP1I+n3Z/1C/9X6ft35d////m79NryiP6T1jfb5/4pT+1Hx96
+fewqb+N3ncazU/9iPpd/7535m+wP/Vj/eb9HMKvfvk9KdYTHurHp8Xfr7v9
afndq9YznvCrnZfp95Npj4/a83vn/Xh71tN/Qn2G8mnknxn1Z73LU/ow23P/
p8Zzmf5yrpf19Ac7DqZxt4p8IbzM16Y/gPnyxM/IH0H/OuMlpBeW6e/pf/8n
60nfjj8Jrpov632xf6Xv30189O2bxIfoazp/dqQPndY+Y1n9zjb6mHo/afE+
LONNzI+fLp8Wvj68OR7pTftcv3fq/n19KN/D1f/z/TnmL47ol/qY8Ws55vHN
Vzy+zx3fL6L9QPuq7y85D39Qfv9E+7vUvjvJ9bPe9prlpugu4xeUn/SPsD/L
gjO/v6D/5/1/8kP27/PLpFe1m75vxTL9h6f1Z3K+kb9wNP6r1o/WP/KXnrb9
qP608Py68cf7DKwXHS+3PInR+RPd5nsoLHO+Ufv++Zy233j+Ka/ID/rxoen2
9I+yzP59eZn5jSP/Lucf1TNfhvCtw9/K+3VT9+00XtUPKH/or6J+Zv7m+1Dr
iFdRfrG/5k/5QP2F+6l1PJs5jik++mX4L5eLfHF70ZP17C9ni3ZJ5t/Zn6dy
lY/z4oeH8f+HRR7QX0Z9v09PKb/8boT63y3xWX5/k/qK87X8O9JnmL/Isv1l
2r9rxV/ft4ftF7K/Lr+n6TzF+Tx/dDCc/1XL9J8v3sN0frL53nb833Hnu0Uf
Eh4yH2JU9r5r3s2hvsvyyP/JfBHaNyzzfgH9Ddxf2gP994VIL/y+QPJzyhuW
aY9aTugcrJb5+v5dxnem66k/c70sj/ID+vMnPxrho59PbLt4rflRtJ5bw/eW
+va+1+18Mcdpdgs/I30IH/5O753ij9U6zRe2J+4T5/u/HI/fd/W+i+/tFntZ
8Ge+G/1p6m++eafgg/yX8tD8eA7Po7zfsRifTPrQes2Hdgr++ucx+T3z43wP
RnDfKf5p5t+wLDzmfRX1y+9v9+3HqwGH+UvGA0b2K89vPz88802Fz8zHpDxh
/MRy1XmQlLfmm/q9U/xD9F/QH0F67N9/Tf2M51XrtxzcnHhvJvNVfS9WeNks
8PbjtUlvjis6H4HjaR7nQR8WfrgYV9wp5990KDreL+9Fzf//vaPA51vDfHjh
0e++Hk34y/O9pkW/90ap5/1c5qvzPIqe8vvXpD/i1/5X4aHSs+lIv7sNTo27
H++gvaf2f/yR+v/ceHvc8tcd9yC9O99SePJ9lvzeO9//4v6Tv4hOI8/95wcT
+aoX27o0ju9xHLRzona7BZ86T84Dvh374jjxTuN/zk/X/N+I+0Xfau+lCT8H
zQ+jeXy/yu+4PSr0z/ssprt5/TdzPMFX9bEp+bCY18T3sabvM5v+9P+diXjD
duDzsPB3j296H/H3vr6S9+m0nsyv9ni+T0z5zPNru8NyifX28/p+I/kt5Qv3
y+vSOAeNTwru28X/8STywxbpPu836Pw+mzkPYySvyH95v5n2l36t5xwO4zN9
+ZPy1XgTXm8X/r9wDn5xUOQL18d4K+XVSD5Rntk+Nt76+i/xm+eT8V2+j9j3
32T8hvyO9N+/T570zHw2lulP4Xm0v87fW+B7fZRX5A+Ex3xAeF0v/Nv3OjT+
XuH/TxbypnwfIu8vep8F984Efed7AmqX38sRfs+1ffR7oMYH9Vn6y61n+v1K
3oemfOL3R8i/iM+uffO19zX79sBK4zvmI8LbRoPP938In+T4OzHubzU7RHDv
Ff8C9XfrWfJ/HBV6IP6ob/C9VvIn0k8/Xy/vx4k+8nvjLI/ydUb0rXHyfuqo
PeVb//sqtB/5nme+F8sy7yvSH0d5RvlAeurru9P+IPrzeJ+G+jrpqZ9/dz76
1++dkL+O7Dmub46XP3xP8/yNjwr9CG++R7Fb7i/377+n/4L+VPIL7nffnwD7
9c9mIR9/u7zH8LPwm9vvIbjvxnl8o8xnPGm9cV/g5ES/f+93Snu+t6F5fM/9
uNk/czx8+yjwey/shEfFPp/D/Xf+sdp/6+PYx/0Y9/VyP6Kv36b+Qf8M7d2+
PyLvi/fz1R8I3vvvlnil5bJ+jwu+tc58f5X+Hdqbms/rOmh6sf5/J+bJ/CjC
w/xPyk++d227UnBsFPxy/xkvoH9CeLsXcD2K+vDz//TNgOcbcY6/VfBN/11f
3j6dWS/u33fOeAv9a/p/3h/o+xMzf7ifX2Q5FfbeL4603j99q8QfP0N+CPV5
6zPCx0rxH/A8MB7Uz2/L9xm13ufx3tuFsv/a73zPmPiZz/cHj2OfPmxxMOtt
jNeR3vy+rd+Bov6qeZ7NjDfh6enMejv3g/or/fX0L1D/nS/vf/wjreff/LPm
f1f/1Ub32s+DFteZw/Gx9fHML6F/gPbTfH3nvhn36f966c/4Mtfv/fE5UDnj
lX399IuZ4+LCV76PQv2E73MxftnXz47Cn/FWoRedt7z/pH3OeDHpkfld/F6d
fkPv/Pi4n7/787tx//jNYo9RHonPHgneo7cC3jwv/fNGfup37yI/5obfhXqj
4Iv8jPyf+hfpg/aZ+t2O8e8XfYT82/Fg8xnzOY27V/wNzMdkPe0tweXvBtxt
77F6H0XXu5rvJ/fKeef66S8UnM9njiO5v/2g1Af5PgHzC+Y/P7ae/LDoA6RP
jRt+1eV7Md9GtDso+bf6P+9rJD2THoSvfJ+D/l2+v9znp1mv/b0f+/NOka+2
mzW/v5dgfSL8d3/yUPD/1/fLeeN85kt+v6ZvXzAfL/lNX99L/x3n6/s/Mh7f
X2/mE/b5Ua6P+UTMT+2v59nMec6Up6P8RMqvUZn0rXeWHsS+vVvykdif/hZ+
z4T+YsLreIn2eb+8N2a55Pi9+O5bwvv/+c2SLyH74I2A772Cr/79zoyHUt9m
vgDvp1F/oD6n9dnvcFjGdzxIw75V6lmWnHxT4//m+0W/69vX78c+zfT7H74T
830v5NYDnbdb70a/2+H/v9/eKRM+j4v/Wf28z28UfGi8j2K8v1riO+Sf1H9H
9ib1T66H+ofgyfeKmW9A/zf9UTrf+F7Kt4+j/u1if9nul5/tsPEV7dudwq81
7k7Ti9TuXuDh7YBvP97/e73YQ4I7/Arfu6f5fuvbwudv/M3iP+jbY/m9Ytq7
pC/RR+a7U/7Zry946nuX1Ke0/5aj7xd8Ul+Zo++vPQ46+LD4k4Xf+wHv44Ar
7OhfvBvrPQ6+93bxB9JfTf7G88H1f4J4Kemd8on2DutJj/R/UT+if4j8ov/+
WdqvOnf3Yl2PYj3hpz06KOdNdHk34H1zwh5P/tJ/bwTx4K/JF66P9En4WM/x
JC/uBz08LvE06lsLdtgv92H03md/fWvNz0V/nOMk6rdX4Bc+7wS+Xx+W6W+n
/OP+ML5FeU19h/XUr1jfzyebLvP9HcZjWCb90p8j/pXv79LfRH+u1vOB+Oe/
/ssT/iF+3yntbeKX+GN/tqe+1c9/Tvj77Uf1OR7jByP9kfCP8p1G4xFewmd7
yHmiLNMfwf6Ed4R/5i/R/zaCn/djR/hnvfUX66kvhz/eV2U+VsI3Or+vSl/c
/9H+jt67Ypn6hNaT3+vrf2+a3zc+0/IgqM+YLhyXk57yeuDpnZL/S/uV9hX9
h8yvl3zI+1Sj93Xor6X+LTrN97VY5nmh/5L2LPmn6CTzbVV2HML5XelvtP2s
dmulbH+G4PB4+X1Rrs/7vph/kftFfPb9OylfyJ9P+95cP96T9MR6+sOEp7zf
RHuD70X1z9N0mev5HPFWrqf/nlnaU6P7y3yfRufO715YvqR/SvNkfvFp74vR
X8Ey88lH54v08AnyeVhmf+KH94n777mm/5v+tdH9De6nxnFc/GHZX+ZPsZ77
QXr4PuJD1N+69uPX7AO1D/vih48K/uiPEz7y/XvyL7XbD7vl9Vi/9d7jgOOB
+m29W+CnvSk3wP3Y58cT8TvbXb+B72w6/v0v9PujP5iQd5lPo3XYT7hV/Cvi
Y4fx+1C/B9/S/I+/U/Lh5R55L34/Kv4b2sNCs+nG/tKtwGfNl9U4u7H+eyf/
F6yW04c=
    "], CompressedData["
1:eJy93T/s72dVB/DbbwuU9tLelktpoVB6C+WPEVFIJBrSRk0whpDAooksmEhM
NFEHFx1kaUxYurjowIKDE4lxaUxcdGDRgcTIZtKFBQcWHMpta+73Hb/nd1+c
k/P99jZ+l29OnufzfJ7nPOc5/5/zefb3/virv3+4du3ar9+4du3Of34/fuE3
X/3zm9/94mMv/h/8d3/yhYd+8J2HTvDf/s2d30dP8L/+5BNfe/lfqv//3AF/
8uAJvgN94muP0n79BH/y2OGdZ8OvfPilH33llYJ/8J07E3z4BGf+7wJ+jP7V
/tXjgA+c4Dujf/il95zg737xzgCPjuP/xc07PQ4n+KHjC8Tfdcb76QvTeMHv
u0/wM8cJ3TzBx+6vXqe9+n/2+Lv/BB+nd7Oe/8ad3w8/fYK/cJzw+07wf99Z
/o+qf/brcca/wfrreeeX/XK8B2l/44SP4L/mL31Jj/1+F5z9vp/2Gi/79STz
O3/8zL/wk/17mPGk13o+52OjX+G5v+Pnv9ab/S44+PZ8eJ4fB74+wqHvdwHf
B77v4/miB/cn7U+N/T2vwqGfgvMvP3N+RQ/Sb+iP8/SNWv+fHhH8PPN5B+sr
/HhepO+c34Jdv7DnPfOv8XNer434ln7CXwrOeut94c/vBZ8zfeb9D4zt2a/3
j/iVPjd8HY/Xy0+f4H//tzu/Z8/GZ95f9J/9cj+KH27riby5zvgPMr7y6MPg
t/h93l/0Gv5c8sXx8/6Ccz5r/plvnYfgq/Y3+H7kBMv/j/Ty7VvjevJf/aU3
8X2c7/c/C37lr/Iz5fcNxhf/18fx5ZfOL+2Fn/zX+8IPeP8Pn2P9NX7OW43v
+c165GclX3p+UPSa/Sp6VD9J/4KDT/ULz3fNR/p2/flX/6v2zL/oJee36M31
BB+Fr+Cv5qd8i37zBPit9wcfhc/gq/ip8ivn48B8a/6Zzw3gmq/6sfLK8TO/
26fzrbwNPqu/+pT01utnhd/st/LhzdP7lScZb+ZfgX2++md9Bdse/Hg+HqR/
4Tv8p/Y7/0X/2c/iR/ID+e0Gy283WPmb81PyyvMeeqn99P2h72r3PHk+5b/u
p/vh+Xc89SP1B89vxrs1rifzme2/0EOdH/lN3l/8WX0r51X5WO3Bt/r6zfF5
8ZnzW/ub9ct/Hqdd/vN+2gt/rkd+Enr7CPip9pxH5ZfyqNYjPUkv+T+cYOlR
edrrt9Lbo3f3/4/PjfMX/z19l76U/a73K997/jXrY8Lyb9vlX+6f8tf1yD/U
/wM/M7bnv85L3lf85zi/3/kyzxe+lFf6UxxffUNY/hj8XQcufEqfvXz7wAkO
PSnvih6O+PzeJ09w5GnZn6Gf0t+yX0UPx+a//qUT7PmMPvupu9/3xafvfv7m
TI+RVzV/15vz/cETnP0peyf/tR/q96FP7d+nGK/Oc96nv6roIfiq8dW/fF/w
Vfpe8O95vJ/xnE/Jp+DrUeD3MZ70X+sJPc/yQ3tXeZT9eWqEj+N9vfiz/Cz0
OfvPQj/YS1955u7+f1bj9/4u7UH9feJLen2W9uov/fT+wifH5+V3+qP69zs/
8Pcz+Jjne/z75q0THHkvPgoO/ou+e35csPiWvrL+d4/9tSfdz8y3+EP4FfO9
Yl8HH+WvCj0Xfas/OJ78Nu3PMN7sT/e8Hc//39d+ZT2F3+DjQyc49Kq/R320
9jf8Vfu01iO+j/Cnf4H1aE/P+pnt2lfyH/GV/6fpX/In+PvYOH/5s/aO7+v1
a89zrT/8uOxj9zf7Ib+/DnxgfcXfgz/9ZdoHFU/QnxV863+u9+V8zvp86Hm2
tzwvwtF/D+P4rlf89fG4+4C1D+f24O+NMR4V+PVTe/bvGs8/MMLGP9QXfZ/x
BPUF9cvsh/77d4zjZf036D/T4/Y+/R0+rz3q+3Ie1dekd/2TNZ7yRHsp4xc+
9KdlPnWexXf2W3pTP3J+c3yj15+KX7n+jFf41h+hv1L8yJ/cP/1L+hfy/wjt
hS/x73kzft2vv/ZH/5j8Y2v3fMmf5B+RD/czfsUP5A/y99C3+rj8Vf5c/CP8
r9Yfeqp28Zn+0sNt5jv7I9yP7N9r+FNr/Tkvtf7Nv2p7739Q367169+TXnt+
PvujXa/8e8OP/NP9Ul/Z5L/tkYfq685XfQn98Er8IPjQfyK+nP/MD9Je/FD/
/nnt971t7Rvs88HngfaiZ8+j9Od+SI+9PKzx9H/KrzZ5oT9Efht6KnrI+4pf
q6/lvGnP3GC82V5r9acr9rv5Qtrzm/8g5+1D43jKH/V78au+r3zI+8mfeMfH
aS/8KT/Cr40H1/738cdqD362+ECtX/1E/Itf/Tvu5xY/cL3t+3/GXtd/Xu8z
HyT2l/7SOT7jeen95wfwbb6F/mn9cwWbL9DnB72P8efz3Oeb1POu5/j6z9/i
fbWe8P/3M37xI+3DtBf+zWfY/On6n3yf+531zfZ0/ud4YPZHf23BxgvyvPFe
4wfFH3p7Wftw5sfqH/rvjadL7+rv6qOxT2q+0rP46PPVZv9H8Kd/rPqHvmo9
rjfnw3hdPe950V+r/1B8y++1t7L+ej7/Rc/Ks8yn1q+9o76g/qV9r/y3v+vv
8fGZE9zb/zW+9BF6Kv09cNGz85Mes7813/QvenK+xi/t7/jBZ8m7yDPpT/pV
fpm/Uvw55+MDY7v8WH/fpj9GHha/zP8jtHtetLfNLzP/4t3jePpzg1/jYbN/
z/3o9VP5k/bZ/cDGH24ynvqP+uMsr7RP5H/KP/VZ4exH7Vfvf671KQ/S33yQ
2T4P/sSn8Q35qeud/RW9P914CvkCV/ItMp+nRzj4mOPJ8tPsX8Hmi6kv5nwV
vwo/vw2/Kv+O9J39nPNn5ZfK8z4fSXlV7w+/0z9W8896a/4+H3otetGfan/P
j/1dX/BxG3w5/8Opf/5rPPHR++ffZL8eoP+sv5m/2evnM/60x/Vv9/6X6h98
3sZ/dY3x1JfNF5vpxfmZD53zXfrLFs/wPorjp11/hPnOsz9D+Zfj6nzJZ76i
z2c884s9P/Kf2X5Iu/rQ+faJ+q/vE7+bPtbr78rjuv+l/HZ+yqPt/eFXRS+e
H/0V3keSPvp8Au2BOb+mz78pfUt8532fGNeX95V/R33e8Xp9uehL+jOfTftE
+dnfx6rne3tTf4T6rPFr77c9DFzPq++oL4QeH6Nd/WC+D6K+1fN/9cXZ3u/z
eatdeWX/6AMHnp/9PfoP5NfKT/XF/M/3VaQ/8dnzG+8bzPaV51t8ex61p8Wv
/jH3K/xBf9sTY3t/H8X1zf55/Rnab4Efpn+t3/Mqfsw3znmZ+Z/7Zf6j8cQ+
//IA/tU3y97s7fHX0Gf0Hx4YT31ibtf+CH2pH8l/5v79+a759/HItz7+1l//
uudz4xd9PtF2v0n9WH+d9u4jjF/8yfzNjd+l/cbZ/aXXLd7e+zNrfO0b+bf7
7Xpzvuo8OX/nl/9q/y73edQPen1Tf1U9732NPl9f+VD7qT4belEeqG9qL6iP
FT0qn43nen8q+1H0mvNT9rv+zfiT1E+8H6H8rv7my6S/9oL+LfMpvD/n/a73
8nzNb7v/ln/z95Qv8mPzL2q+xtv6eK/09eYL03jGS41HqN9f6l8w30N/hfJN
/4rnIfie493Kk9Cn9jny40q9Bfm98qz3P87+kU0euj5h8dXDhxNsvo36uvPt
/U/Ox/uM8/7mX/+n/jLz/+r5Xt9/BHjTn/RPHnh+pl/na7wu9F/j9fkoxm9n
f3zwZ3yixvf9tnt+7G+787e/sOfF92/1IeTn233+Pn6lv+Ywwupv0vc2X99v
/pf+H9+Xf+ML83zVP5QP2/v7fMHz+/f+IOXbPF/xGX2o2nt/5dwu/zOf0P3c
xtv0b+218J95PNudj/MXPzn/vr/G0x+67efW7vjKix7/c7647coz+2/t2lOO
38Mzft3Pvh7NbJ+8Qr2Bvt6I99mV11t9rXk9vT9d/jjn6zg/+ztez39n/2P/
vsMJ1n7KeoqfeV/U+W7v2+xH9Qvx3+/PLB96/6T1bW6O4/u88/G+jrD+VM/T
Zi+Z75F//V9zfQHxrb1nvozxVO0936+8Eb/mO8jvhI3/6c8Ofmf/zuZvNR4u
frVHrD/Xy1vrk6kfSx9z/Rrle1+fo/Ch/Wo+rPSs/2Dj79qPm3y2Xf+09pz+
YfHR58tt8k1/mfWcnL/6br0v+J3vY2lv9/7bOk/aF9pHzjf/3icyvln4FX+9
vJ7HV/8QX9m/7T6Y9Wb0n7yOvTM/b3ykt+fNz6319Pkzxkvm/VDfE1/qK5fC
5sNssPag+On10+L/8lvH385Xr59oH8jva/zMr/iT+To5T5Vv4HqFe3tj1r+U
H9Jzn68510+RftWnrPfk/m/5wLY7H8fLfe66ry9/6t832zcbPQjrD9r6q7/0
/FV/8YY/6VV/3izvevllvt3h7Oe3+fXrMZ/c+yXKpznfzf3s/Un6O863/xxP
/WeTR/mf/Xf9fZfz6fFSfAtLLzeJP3v+fZ/58O7H5o/Y6C3ydcavz0de648r
+pY/Sv/b/Sf9OZv/rj+P5jd4X3zGh7DybasfkPVUPpP5cn3+qvSvfed+zvLR
/cn7jZ/UeTdeYPxli8fk/3x/qfdxrY/dx+PkP+r31hOyPorx3/P1pTxv/Zjr
9K/3e56Mx0kfG742etM+8nxYbzH/1hue26XHDV99PvBzwGXPmE+++as3e139
x/wf+ZHPZ39eR5+c62G6H5fq3+qbxtM8L308vNrzP8czzK80n8P5eZ+g94d5
P6X4S/5vj+PJz/RPb/uhfDA+avzzUnvB/XG/pbe+fvecf9S3qw/Ab/7x+bHd
+LPnS1h6Ehb/+fd+jvJF/Ux6/in643yfpa+n4H0U77fN94WUB55n9cMfcB+z
r5duvk29L/9F/95/Mh7o+KHnN8bzlOc9n8ZHpMe5flH4s/J3qxdR/Xt/tPbA
6+gXjq89XPupP0h7evMf5X+ul2H9NOWp+ZbSS19PdL7vlufNRzC/dI4nq+9a
71H7Sf6pP0t+sunz2sfWm/G8yj83frmdl+hP1rs5H3Y96gvS46X6wCZP+vjX
fH6Ft+/xiC9h+6uvuB99fM/8S9c730+VP/Tn/623X6o/qC+cZ8/O9RLPq7cw
+8OlR+3B7flt/u6353Wjh3vFb0+f8/0Q9WH1D9e7tV/qr3C+l67/0v4b/uX3
59HLnP/QxyvNzzi//ZX2ewNzPo/t4mujp+382f+tnffz+5vvrTz3ef2pl7a/
RL0r9199xHhq/72ljX4OJ7iPp87yfaOn/nsDc3/tO2HzR/v7IXM9d+GNXrfz
bT7mpc+7/xt+en+9/HXOf974y9a+0a/yTH24r+czy8P+efnDXF9Ofd3n1T+3
eMcG9+drfr/yWnjjh/1973cynvUit/lLb/KDwzie/oPNHtzofbMPt/dJD/Jv
7S/5w+afEd/G2/t8wRk2P1v67+21LZ4991c+2N/3G//q67F6f7XWs9lj8pv8
z/l+zld9qM8P1D811wd1f8SX/bf3beN7HqTvLf/AeN5mD3serX/ieL7f592P
zT7f9st6r8KuR/qWv2t/5N/8OOMf83719wfM15r9t54v8SM/6v29+otnfaGP
r8/ya9NH+/XM9oLPi9+t/mKf/2P8ct7/DZafb+/b2i+V1xvc51vM94W2+tc+
r7+0j3ds9sb8vv5+gv5Kvz/n/f053tXXc5i/T9yvZ6bnfr2z/ul88m++p/5E
6zHM+shW71d9x3iZ8Qnlj7DyIes3f7L6Gw/1+U3eWG/F9fu87dZHD/9RP5z5
p/FI/ZXix/69v9D44Hx/tNdP5voLzt/39/xgvs/ufhr/2ejf+fT68vn+1N4+
ML/V72Ppv9A/ar1W6dH7AfN+yK/U/5R3vm877+6f9Hbe/asZ7uX/LI97/jjb
X1s8uI9PmS8xx+P7+0XGc+X/G77n8bV3PC/eT/a89/U89BeYr3+D/gf6z/S4
rWdrV5+U/tVX7d/rg/N8N/oSP8ar1Del32293kfv7w97Ht2POX9I/hb73fy/
Gq/X/63nNJ9v7wu5fvlRvx7jgQdg7xPP/hflp/qE9GP8tedHhxHWf3Gzjd/P
9b36+HDNV3+a/s3ef6b/SXuy+rtfkXfqr36PYaZf2+8Vtp6x/MD++ods9/wJ
Xzo/98P2TV57/rZ6I8Lqq36PR/kgLL/IfObvjWzj61+Kf1P9bfbvyx96f6T6
n987sP7+gee97+D9U79vtt2PrvGVv8HffD9cfias/8j9ML/N/GJh5Yf3QXJ+
zq8n5/PedzPfXv3GeoF+/896k/Ij+bv1bDMfv7db9kbWqzzTHq763/196Pq+
pPpGzpP+u/qenPWb+vxqv9fxwbG/+orzMZ8t9F74D77q+5TKd79fcHz+yvc1
1Xesh6d+obzz+2/WXxB2/plv1RfLv/VrPf/WV6/15fxVPSjlq/l03o+wnmpg
v1dyAB/m41W798vVV0Jf1l9TntZ9SfPpva/wdsPq2+6n/Eb7SVj6kf8qT9z/
tJsf4P2H+T6M4+d/vo/j+3t/xgF4rqfW6xPe56nxtB9D7/N6fN759/JXfWyu
z9jnb83fG7Dd/FL30/f19nPpO+oH0lePj7kepv4O76urH8oP1E/Vn/KvPKrn
+/im9Ujm96lv6G/r9Tn90299fuaTup+O/zL1jTwv4lt66O8PzvThesSX+kT+
vU/45jj+dl7vtb/zufR597/3r278b85/sv8W/+rPu/Vb3z7Y+ylbflsPy/9q
/X2+5gz7vLD43d4XuOI723hb/oL76fns/dHm61nfec7/7v29W/2+GX6FeqfC
W/5Vn0+tvj/nV9wrrH3wdr9Peag8sd3v69q+5Y/1+Sfm75wP68/Y5t/zv7n+
x73CGz8x3hz9s87vlp/Qr8/7dfN9u81f3Ne/nc+H+W/b8/pLhfvvER7G8fvv
81T/8/BjPpX116wXeKD/fJ/P9bl/ymth4+P6m/Qv9/g8jPCWf7LRy4YfYf0P
l/pz9W/6/g3f7u8W3xTe8jud36X5oD6/tSvfhcMf/Z7NvN/K45wv/V8VD+nz
w2y3/qT5HfoXzL/1+5XGO4w3bPdl5vh3nrd+oPmLs38p9GY+0/nj6W/R/9Pf
3zP+egCe/ePBp/lp1i+b/Tuu3/oUnvcNX9nvud5B3l/5iX1+wRzf7e3/+fvl
jufzzt/2Pt7q97Dmep36T+OfsL6g9z2tt2b9O+ufyA/9/of+vLIH8n8Y52f7
9vx2P1b/Us6v8RHrRehfforxZvq+9PzeKz/wefHl9ze293uejC8on9WHzJcy
XhL6nL9fZXwo/3O+VfjRx5lPxTtcj/Kmv//s95T8vqj1MI3PGc+q9+d/rnca
eP5+kP4P/aU+L5z5+f03/aF1Hv1+5XYfw/Eyf7/X6PdZaz7GlwJXfE35cun9
KOs75d94nvWG5/rTPf3P+WLC/fcH5/qNG7y9T1j7p6+nPtuD99pu/C34rO83
5l/7ynqm2mO1HuNz0kcfL7M+h99HMn/T75eIzwPPz/Gz3l8285s+/7fineqH
mz/P+oPGR/p48Pz9r/77tcKed7+fOeuXoS/rlW/1wIo/bfJ5a++/H/DQCOv/
8bxnPcZzxb/62hw/Vd/f8tOUJ/qj7R9+Z/3Kmp/yfZvfVv/beoLyD+FefhY+
c76k18Kn8tLz1N/PKH6jP9R6v8I9P/L7zMpP89Pkj4/Sv54Pfp8Yx5c+t/ls
7Y6n/zfstuhB+SS/iDzT/2T+xxwfM14trP9MuP9+pPfh5O9z/qbfS5Ff9vlM
T4zPXzq++vH2fUyf39bv89v42hOh7zpf0r/0pf0jv9b/s/k3zY8zX6233+f7
if33KOfvi2z6mvysvy9ccH/fcD7v5tcJG49X/zO+3n8vb27v9S/p917998oD
44/Ff7K/yrv5ewQ9vSufi1/n/wA8x9ec7xYv2Pprz9nf+ZkvvI235X9ucD++
+UU1P/UDz4v5Ef338IwXzPk19lcebfUytvi/cPhZ0U+fDz7bi1s+gfmtG6x/
ePsepvyxPy/WS673eR7Ep/Zhn+8304fywnibsPq+/vitXs1WT3a773ZePdq5
va/fc357Xw9Kf8osP4PPytfq9Y05v9/7FNvz9u/589y/t2/9/twcP+vvf4mP
+fuxvf/Q72Ffo/+sL15aX6i/XznrB5e2C1tvx/mYb6B/blvP1l99WTj7Kz3N
91u1t9W/tE82/iEs/fX2zqz/bflCW72m8/KxZntry2fY4E3/2GDPa85f8ae+
fuZcf6m/fzjLE+Gt/lWvf1jP9Pz90f916fO9/Pv/e39Pr9aDML/D+u9zfeo+
v9P4y/n1ltTftvpO2/vVj9Tv+vveD4/Pqx/nv+xz5x/+PdtrzsfzcSn+3u7+
l/K7e21XP31r52WmF+3xrb/fO+/j7dV+3v0C6w/O/pnt+S1/c6vP4/5v4+kv
d7226w+OvPM+3Xx/2POR//l7SeJn80foXzdestVb09/Tf/9nux9sftIcL+n9
u1t9qvPre2360KX2mXD2W3zO9ZP6eNNcf6g/z+fPr5+v+b/ml83fO+31obo/
lf0oe8X8xY1+1cfE7za+9Yu0H7Sven+J97vfwN+r/fX62K69lv+5flL//d95
PO8LvEq+vPzQ53t+ab2L+b5Vf39/vj+/Pe/7Nn/hNv69tm/r3/yll/bf2i+d
z9uNP+8z2B75MN8X8PyF38h/lPfe95j79+dztt/6/Fn1oTleuPXf/KXb/ZKb
5Ddu/l3fv7X3+f/z/Vfv12337dQPlD/5r3b1M/mb8Srll8/n/XM8q6+ffRt/
wOv4s70v7H3Vajf/Tn9em9//+VsnWHmgv0x89vT0BvOr+K7xWb+/qb5ivtam
z2z5jPrL9Nf39rD+Ouur1fq2998rrP88+DAf0HoZNT/1IfMhNjjnT3vt/HyU
zf9p/80/7v0C/Q3ubx/vl1/P/lH5ufJGWHs08/F7enN+Xh/fmdvVn12v8JYf
0L//dfSBGR99PnHpB3l/0etWb6m397UXvc8w+6OCj8o3En/Zr5qf9Jf+1nOp
8bJ+v/drPd75e7f60/J8jS8+5L/KQ/nxS9zvkD6yXu83zPefHN/8uJxv87v0
f5gfaD6492Hmep7Bv/zlfPvW89vnhxuPq/wO5Ynxk+yn50H7rfClfyj/1puX
33kfYa7P5nnN+gv/fb0Z7/+4f7P9Lb2Zj+B4me+TjFf8MO97jOetP1zn8WXq
RR3p+7efO8GvLvnwOW9P3f38z/jLzRcyn36+36H+43k0n1n6E7/b947z7/0T
vnf9/c/e/fz3PnaCzV+X3s23zHqtr1z1v9x/+UvOl/qN+aqe11qP9eLEZ85T
4TP77X1T+d+vnmDrpeVf/+1HT7D0732WtM/jqT9dKh+2+8zSXx9veJLn5/oC
G3/v9RXP341xPOWz5zf7PX+/2fuN+Vd/055x/d6Pei/Pz/VRvN+Q86u9OMsr
+a/3m7W/go+a/xafER/9905qvfL/vG+2T1yf8Vbl1SaflGfax73+K379XrT8
vM5n7795hOffz/hz/WXp2Xw2Yf0pnkf9ddbry7/fR1Yfqvl4/0H+HXqT/t/D
+N6H0D63nqf0bT7jVl+47Bn5eZ8PWfvj/Rrlk98fkX/1+YfYN1fqa/b2gPLK
eqvz/I74/adf5P2PA8/6e8b/wAmWHsRff56tV2k9xzkf3/txoY9HR3jL19no
+yXup279lUf991W0H/WXPDnC3lfUH6c8Uz5IT72+O/uD9Oep36mvS099/t38
vRP562bPub4j/r5V+qv08xD3r72/3N9/x992xZ8qv3C/e38C9ut/vXCCtddf
of5G6OfZ8X3ePz3+vfji2N96G3l/2UvaP8Fv6bPa58f9+t0/OsE5n88wXvGr
/M/6h/4Z7d3eH2E948MJDj3XfWLjlfmv9Yvv7Odr6GfFX7Q3vU8XeVjzz7/y
VX+f+uNc7zr4ne+zu//GC/RPBP8fpb3wkfloDxW+9d/18naur2e8Rf9anvd+
hf5E84H1r3Nef1j+AeOP5oeoz6vPeH48D8aD+vy2n6K/vAG/qufzf5v+rP+v
PnOCI1+8D+v3M9RHna/xv3p/zsNr6N9zPLD/vnXhV/33uLz//IMTrP8986vz
F3yrjxf/1z+g/XRc3/2/Nj5vfNn15/82cI3f66e1/8HXdt/r/Pq92Y+id+nF
+0/Gi6VH87u8Dx38PM3z+Ku+V/xFe8zzdOT/f1jzz3wLX/15k5+SH/Oo8lX7
cM6HU/+SPrTPgv8PMR/rGxX/Nh4cfBQ/7OsXG6+x3kOd79BrnY+cp9fgN/V9
As+769dfeJP7Oz6vPtjXm8I/8c1b4KfOu/SZ+ZU9k/eVvin/Nf4sPUsPwVft
l/5d6y/3/PQ2+/v86Xnla+jFel/47/7551iP+Rn1vj4/W/vCfAPtd/U967vd
HuWH8fh+vX7vqdpdn/lE5qf265E/34a/zfmJyq8Nlr6P+Hit9FPzkXxef4vf
M9Ff7HyNl+R9c32s43586edpxx/zrU+eYPHV3++s/VTfdv7eT1N/UJ/L+p4a
xzceZLvwEf8//tQJVh719vXnTvBxv/7hy3ev77na7+xPyYPIs6fvfv4rxMee
cr4HxvvC3c9fie8c/67wT/Xfzd5U/3Q96h+ZT8ln8w30f+uPyvmu9YUeKz6l
/ZX9L3yF/m7S7vftSj5kf8v+yfyKv2kPhT5LPh7f9ytfunu8K/6D3h6b7V3p
y3x35V/mU/yg91cX/Wb/S16IT/WVI/p+q+yJ/Nf8gt+SX5lv8Yest/ZPf6D+
avmb56PPf8DfcIXelU/aO7ZLj/q/1I/0D4nvvv4Z8advF/1lPfjHrpy3I318
veixt8dr//p6I8SDr8gX1yd9Oj/bHS/y4nn6W7/G/IqSR1u9z3599X71+7zP
+KT7bT3JGdbfrvzb6pMrr9V3bFe/sn27Dyxs/R3jMcL99+DVJ42Xet9Cf/Mv
j+Npn2hvb9+z8Hn7q2/1+c/Xlv5be42nPrjpj85/y3faxnO+fb2t+T5Rnx8z
43vDv/lL+t+2+Xs/dsO/7eov5+GvxuvzsWp+2/m9V/py/7f93epdCffflzV+
WuM7H/Pn1WeM50bfq/q+5v9qv271YfSn5P/8ejv9ff2CX6a+lnCfz2w+tPE5
86PeDWx+l/V6jYfqv3I884Vq/n3+xVxfr/fvWO+hxr+03lwf75m/76E/zHwJ
7Q3rRfXnaYZdj/FW19PXMzv//rL1acIflC/if74P9upyX0x/hbD55Jd+z8p8
HmGf7+ujz/WO9H/rX9vub7if4Ze3GN98QuuLz/l80oPxIfW31n68Yh+kv/G9
A+3m18/5sOGHZR9n/WWfBV/GX3+K/lb94+4p+6CP3926u/9L1Mt78S/H9ZlP
k/3DH3DFv5L/W3fDH/mNE2w+fNwjn6Xd7wOXPZz9Mj4/58tGXnzwxf8FQIE+
pQ==
    "], 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{3.825081517410204*^9, 3.8250993681639595`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"85831f6f-d696-4e92-b387-a4541a169fc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"model", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "7"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"item", "[", 
    RowBox[{"ListPlot", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Bottle_Cost\>\"", ",", "\"\<Bottle_Retail_Price\>\""}], 
      "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.825099380296196*^9, 3.8250994130122204`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"ae62999c-12b4-439f-b84e-17da63c8ba6d"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwV0Gs0lAkAh/HJNEYTxjDN4HWZGe+o6DStqBTef2qnm6LaXMt1aOs4pVpd
SJRlV4ztfpK2oaIYdsm96MbKJXWqsWoqYcuKgynJSMa2H57zfP8Jw3dvitSj
0Wjrv/X/l+V2Cmg0DSVLHlhwwUFLqWe0lKUxNVQgPy2lz0VLHdxbITVjayhv
pb160XItVb4iI9reRkO5PgtLfuanpeb3ulZ7uWkott3zdsMULSVwPOuddVBD
Vd9viEt8o6WmV6w74vRBQ83Uu9QgOzNOPWyqfinr+UCVJPn4S3RfqLsYEmwb
HKEMevfm5RrrqCch/mHF7aPUoch0ZkYsDdHBAQd2lI9Rwh0JwvOvpmFncQW/
5tY49Viw4ZFpOB2pV6RloTkT1OrzIWm/tU0Ho9/pRXbxJNVY790R56cPY5NK
lWfpFHWAFsparGYie6jynaCZhpGvJetGPWcgNAH2/W3T8FNxl62ohYXyEJks
5J4e7lhv1Nu42BBtpZvlrBI63BXdzT6/G4FfFBM/dWM67ql8yDtCNjTjs7fn
XGVAPzKpkS81wcSwoXl6oT5Ka1at/IXFQeuWujKlkolPPIVzSCsHc9kG6w9m
G8BKxZu3JNEUNTFJykzFDKwamIxe7WmGDvFp5sZTLPiGMyoCtGaYnfxszras
mdix8LD0ch0Xbj5vnBXZhuAZJa/dnDgLXTEpHvIMI1yTFm5hOPNQ4Rpg9NdJ
YyxTo3BojAcL3wcvrqewUd42xnjxBx/CPUmrw5aaoLHZQ+UYbo4NM8v1zWpN
8NJ2dKCCtIDn4/J6SxcOVO2trOVqC3hv94pYVc3Bk3ecfXSFJTyq1miNXU0R
pft3/fxQAqMLuBnzSk3Rvb9TEsi1QsORWL3dC80QvGZlUF2HFYI+XznALDbD
vfgWuTDTGirxkp6lJBe1lV1OQ7BB1NwIyek8Lm6tixJ+1LPFHd+g+OU2s3AJ
hvyxKlt8599fwM2dhfsPTJQWHgLsTJZ2uBM8zFE4bqjOEiA1yuDLtNM8qOMy
HdJHBLhlHTbVz+Ujk16gHP9BiCpdKt0hkw+X2s0lfX8K8bBsRb+cY47XwsqA
faYi1AuiGjNOmeNJeqib0z4RjlVtye1mWaBanH15T5sIgaJXwUFyC+RGy4u9
JHYYr5QQjkxLHP6H7Xb9uB3i6O8fnj1iiavBavqSt3bgkq5hYhqBttStMRHf
k4jd5fuJdYhAX+euUHYOCctFsib7eAL6kgiPq7kkbk/uueiZQIBM9LNyvULC
QC5fGXeUQJgtnofnk7iobDjzPo2AOoTjU1lEoqHPyaXpAoFHXWXUthoSZhHs
/Sm1BMp6tDbKpySqHazX5t4m8NRp8CulIrH1o4NN3V0Cw8e61ap2EvlHpY2f
GgjMs2s5p3tOYmlOAk/WRiA/Itt40xsS4a8HKj07CWS9dddpB0gw88aPB3cR
qHJ2eiUfJFEUzQyJ6yHw98/2N0XDJD5PiJg3egmYitn7vT6SOG4Z6CccJpAR
2TWo0JKQ9Gx3dP9AoLBC1er8hYSqIHbKf4RAM6O5oHmChI3ryWsnxr555JdG
juhI1NMU8UXj3zw+5634lSbGj01F3k0TBDylF4TWemIYnrhp93aSQOi5zKlS
uhilfk1jU1MEEnuPvZYyxPgPPHgWEw==
        "]]},
      Annotation[#, "Charting`Private`Tag$107077#1"]& ]}, {}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJy9nUuI51mW1yMfke+sjIx3RkRmREZkZGVVTmVlPcYqpin+Yds4gzYtPaAt
2Iij2Agt2Aq1GRf2phiYTW16o8gg6MJVgfSmGZiNLnqjiCDmZhioTW90MZsR
ycrKsvP/Pd976v859+fN6GyMzZ8b93Xuueee972/u3//n/zuPzy7tLT0V1aW
ll78/s7nv7/+2W/fPPlf3/3ZnU/+562Tf/ejj648+bdXTpbmf+sn/+pfvvi7
p99b75/8p7948P1P/+PNaLdz8r9fFP/i0smL3t/92erJi9KD7984eVG688lW
1F+L+o2TN+YNLkT/lWFZ/S6c/LLwy//cPJn/PLl6Mgf78/UTwX/x5J++aP6j
mydcj9pfjPY3T353PuD5k3/+ovj7rwWc12PezZMX/13/7Easc6uNr/Y34/ds
tLva4Jov+1Pj71q024h2X8z+y39+8Xe+wCv8Xj55b/63drI/B2g9yncC7msx
zkbUX451rUa7cyca/9rJfNr19Wh35+QHL/5+8Uj4ePjByXzajzai/37gaV3t
frAf+7Ua8O3F+CuBt+22Lo1/UODTfq0HHPuFPvT7fCa8XQz8nwu8XC/0ZXoU
fqf2O/dH6zoXcN8o9KB5t+P3MOC7EniZHt9lr0Pr24v9u9rWrfEuBD5uFvrT
+bga614v8Pfnvxr1tT3H17m9GePfinXdjPpb8X+PuxP9bwbed8r+8/yyrHVe
bPum8pnYryuB5zONzkkP3B/V34r1HZX2PK8sC47rQa+bgY8r0W4t4DgT9H6l
0APpV/TnfY3z9INrMf5G4Om+2v/3xzHPcjvP3E+eF/JbzWt6XyvrZ5nnXf+/
Fv03Ao9L8f9LQ/6ocS4Gnd6M9V6K9a4GntcCz5X+uV7Nfz7qXyv15rPz8f/b
3YJf0ucIX/rd0/p+eBx88a7246dvDvGp+VdjXbuBlyuxbtPBSsB/a7gereNa
47vEp8Y/D7lpvn+/yAfNvx3wHsb/v5hp3PNlfP1eivlXg+5Wgt5vBbxnGl6F
r7UY/3b8/7XA91bj//Ofn9wVvfzRodb/5w/LetRvI9a1X+iN+Bbe3tM8f/xR
4X9av/nX7oT8zvWRnljm+OaXgvNWgU/1awH/XqxvJda7HXSwEnBsh/w9Uv2f
vlXoWefNcny3nF+Ncz3mNT+7EPCuTPCDPA9qtxXw3y36idpbb/A+XQ641gKu
q4GH9SanNe9GoW+uX/Bea3SgfVqJ9tsxzvnodyPgfi3402ZZj8Zdjf3dCziv
tvkp3zyO1nE38LQS41pfu9DOtelA7e4U+aXzcTbm8z6dD3p4LeBZifm2y/5S
P6a84viC79lM+Fku8lb4PNvomPoU6a2vn6X+IzhvBhyWD1/NhMeLRZ7o93zg
qfIvlb+aGW7KA63vfMDxWqkX3JY7e21e4X21nQP9fzvm3Yz2dxvfmo/zzbsB
50b03y/8gPx2VCa/HZUpf/X/vcD/cTvvarcZ9HIu4L5e5tc45+L3ejlPPJ/k
v9xP7gfPP8ejfkT9gedX4x2Kvr79sKxH8FwI+Kr9J3q4EevYKvzGfEvlvaJv
CY5L0W+1rEdwX2x8ROX1RtfsT3zq3NhO2In1b0a/g2I/6PdC1K8Ufm38qbze
1qN1bhZ+on06iPYPGh2ovNX0YNHX7WIvcP9IT6QX9T8b+3O10CPlaV+/zfFt
t2kdW6FXvx/0MivwE/99+t6O9RzGfl8JOlor8r3Pv6b1MZbJv1lP/sX9s/y1
ns31kH9Q/zdf1zpfL/XWV/S7HfPtBR6OBd/f/k7g52+V/aK8oj+F41PfYNn8
UetabX4M4W2j4JP02ZdvO0GP9wLv5lt3iv48n/fnb2ic770XeL8V+D5sdui8
/Ydvxbx3Yr6w+37yruD6s28UfiN99s2A+/1YZ8ixD48LfkmPWsd6/N4p69W5
2Q047sX/ree9WfRT6/fCx+2Yx3parPNnt+K8HcV455repvkuB9z2V1nPsL25
Fvt1u+hfnm++Dx8fNr1J42/F72r03y36DPmL4Lna+KP1ELXfKvJe460EHrbb
edN+GS9rgY/bZT9p71Iemc/N+/3eUSnr9yDgeVD4mehzPdZV/Wc+J6KTsJe+
uy94f/x64PUg7N0Hzb8xn2f5sIxHfVr75HO3X/iD9t123xtRH+f66KDQT99f
uK19/veHpT/5Hf1R/fkJX/K7Pj6SHgyv8HoUeDyMfX24aIc9Oijwmg/OwfuT
gwl+nGXjW/SV+onOq/Wzy7Geau/QnuR+Cl77uXfi3IddtHxQ7GuNuxzrst/7
auz/OuyyrTIe+a3qTTevl/NBf4nPm9axF3RxEPh5I+bdjPN+EPi4Hfr8/aDX
6PfguMGt/+8H3m3HHAZeV8D3zLf2y/5o39+Oc/tB8e/QHzXy79G+Iv8hvgyH
fo+bPiI6uB/4Oxb8T98u8JM/097hfC4Lvq3m5xIdHxX9VPtypvnJ6J82n1X7
w4Iflc82PZz8Xvi7FOPZX3Yh9tt6dsYT6M8Svs9EuytBZ2djPPs90j7r++sv
B32nvaV219t5UXm9lCXHzja/P8fnenk++vG49F+rfC7aXx/Wa97nM+Hl4kS8
4cuZ/Uzav6XA4+Xi32PZ8Q/TOfVF0gfjCdQXqF9qnjNNbyL/4nha/0qTO/T3
d/W1/8d89nfoXN0o/WmPcj712w19817TrwTn9aIfC1/Wu7aLPKG9pP/bT1T9
afaLSu89LPjWfl9pcUjaL7SXvZ+Ce3XifFN/Oo7xHpf1a7wzAdfl4o+wv9Jy
3PjR+rcLf+L+0b9E/4Lo3n6ozaIfEP88b4xf99fv+NBK8Y+Rf4zqeb6oH5t/
CH/WJ841v7l+v5gZz+QP5O+iQ8dXr5d6n3+NZ/68hLj1cpPDgnupyUHiU+2T
f9MfqnmXGp+2P8J+Te6H9u/pzHxR+Mj4vM7L85nXYf+q/WDk16zv+x8uBXzW
t5fj/KwU/x7ptc/Ps0z7mOsl/6a/hu3JP7lf3if72Ubyn/WC03rVcfF/kf8s
+lX2mh1qvU74uBF4tf/kTPPz9M9b1pMfqH4z4D0o/v2Xq8/xX7V+VGZ/4fNs
i4uQnnkeSX/cD9JjXx7mePZ/aj92ij0xiofTH0J+K3py/O12jOu4y1bR1zTu
1YBjvchn5r/0+Tv0p6/Z75aztgtoz4/8B9qX20GH98t4tKdpD1IeUN+nfLCc
1XmI/InlsNO++U6R99Q/NY7jMpvFH8z9Y73wY7lS45XUZ6ifGP/ydz0o+KV/
h/s5ih9wvd35vzZfP56b+VuCZ7nxLa3rPOLqGR/t+3vzvBBftGf6+RaXmx+F
8X2eJ+YLcH2O+2qeg+F57uebbCzu49fWI7+o/fQPS3zAfkKd87tFX6R9qPrl
qL/R8K5xNwt8Xf/R1/xPnI/7rfXZLtiasOcdN6nxQO2P48e1zHiB+p9rcpv+
I5UzX7JvL6f+PeLH1D8Y33Q8Xeu7Weid+jv1UeslWtd6oWfio5+vlmXyQ8cN
NM9O08u0vt2gm0stbs/1ap0XAm8rzS8h+HbLebG/1n56+g+Jb9obtLe0fq/D
frK0VyjP7KdQebPYO9QXqH/Rvqf8Z3uuv4+Px5Gf9eGE/Z/6IulD63g607jn
ovw89PcLBT7md2h//f+1aG+9cLvAy/il24tetsv4mnep+ZUW7aSN0p/rFxzM
X0n+bLqd//7hUaknP7a/T//fGOqPtqsE/0qjL9Vvtri39mW38GOuj/5SwW89
cbWMR3+u/QrCk+NhZ6CnnGl8j/vR108vRDnzG31OSW/UtygfaF/19cetiD9U
eUX7hPyP8o/6LMvCm/NqNps+43rNk/nilAdqv9TiCiz3+f+FxpdVZv7kpbaP
/fWeC3q59pL+9Mw3ob4s/Ge+heDZC/35uJTt59D/azyZ/NT7ov24U/LFqC8K
jqcz+2V07p7NrJfovHw1s15M+tZ+ng8+VPNnyS8pzymfuT9PkN+lec43PV/r
Svi13oSf/bUvSy1OTH+q21vP5flhe65P+Hg2s59T+PpqZrzQ3y46Ot/4GPHR
988nfIRH7c3Xq/4mfGX+pvVz82HjT/Mtl/loj9O/3fe/pL9P+Hw28zkTvpYa
3KQvy3et40bR/0kvhI/50Gp3K/BzNBnPsD/Seo3Wv1/GV73vU9gf8cXMckvw
LbU4Efsb7453Wa4Jf45LbQS8B0Wf13jXg342mzxwfI36/sh+UL3xcOvU9gn1
X85H/jnSx/r6e8pbzXMv+OWjIr8JH+XRaH79Og/yqJwf+issN3wfifRB/Vrz
Gc69ptdrnMyvER7vFHqnvkV8a74Hmu8fvDvhD3Ce2nHR5zleX1++0eIapD/m
s9E+ofzs38e60vDQtzcvQi/N/G/62zTvxbYO+ru4n9R3qC84jqD175T7GCzT
XqW+1ef/ST/Gi8ap9j77s57yiu0F19lml4/um9F/QHuM8pP6ougk8/H6/qSk
P+Kzz28sR4yn9BfTvuL5Jr55HmlPE7/0j3G/NM5y48u2e7WOg1LP8bhfGvd8
06tpP9mfod9qv6l8temtxpfjIzyvxM+nyDcW3m1nVv7H/dJv5j9+gngi18t4
Ul/fTHuzb49nmf4W+iv7+evT9bQ/hLflgH+l+ZfNN0bt++c74e/HI5NeTjv+
qD396zyfI35B/ZDxF/szBL/vN51veQIs9+3djLeQPzF/c8TvzDdUvz1sb3q1
vT6Kt/f9menvsn3jc07+zf3menW+vppZThJ+wsf4q8+h7/NQP6D/QeOarur9
TcGT9zX6+fppD9F/SH1WcFxpfIT5dczP0rzpDyA9Uj7zPpjvT+n/js+ZXnfi
/ISf9+Pj4t90nM5+APrLST/UZ0z3tuPVPvMFnU+k+u1ib3O9wlP6/xx/0b7e
LvTE+Ykvxot4vtU+8xtoH5mvOS4o+DLeZv+pxr9S9D/Tu/B8sYzneW032S+n
8lrR76f8C7SP7V8QHSy1uBb9FZRv9K/wPAiOC4HvGu+mPNG+nmt5WrSn52j8
2nsL5PeUZ6RHwf3VzHo09buRPOT6WDa+1P61iXL6Q5hvQ32d8Pb9T0vgE7m/
7M/9Jb9ie/pH6H8ifu1H0zibL6k/pb9U6zjbzqH6P5153fSPEV7G67QvZ5se
2c9HyftAlL/0nwt/1iNuNXhFL1fL/Kzn+WF71hN+tmeZ54X4HL0PQX4+us9P
e4n9qQ+wTP3N+6x13BjCy/mFt8z/ov+H8wkvS/F7aQgv9Q/Kh9H89B+dtn3f
H+R7fVW/Y5n4FB2fbXYU8TmqJ//TPJlP6P10Pu9ovJH+TXtN/Ods84NwPNYT
HsJP/FgOW+8mPukPHe3nqJ7jW154fK9v0W+V/GxUT3lGfI3qaU9x/H55Gr/e
T81X+Yv1A53D1SJv1C7fG+i/N5Lt+/L6UtvfPv+bvp/b96fneLaPfP+I55fw
0Z7ieH3+m+OP+CXPA+0n6yUad73JZfvxCe9ovin70fBSvyD++/vD+Mj0+xyE
h/FNjs/+hIf3dVimP5XnacpeWvQPZb4H7RGfB/sHSY/EN9/LYL4M46m09zg/
5Q3x67iR9vm1xu98j4Blxv/ozxacZ5rfk/hkPjT9KYyHE7+2R3zPle/P9eVt
xgc4Pt/XYv7jVD6k43X99zlSv6D9KnrIfFjSs+0Cxw9G/J3240g+s57+adtz
tgvsH7ZdTnxQ/+P4ff0j82fU33Hu+v5BX99NfqJ1LwW+L5X5bG8Lf2uF/nie
aF/QPiK8tsPUbxNxgN3Cn4i/vryeHp/6B/Gl/TsT41+esAezPe9Xaf4vZ/bD
j+b7PPyCjo/07fl8R2vxHZWtQt9sT3xwP6jv0X9HfYX66FS9y4Iz82FGZdqD
xE9fP7V/8Gbhtxx/6nxZf6R86tsHyb8Np98pEHz2Q95u+Tr2O+g85f0grtdl
7Wv1L9E/Rv5H+UF61jjM15x+P4X0S32K7z1x/2l/UN8j/yM8HE/3ueMdph+/
WfyBfX6a8V/Sz4jfkj7oD2I9+1t/cX5Dn7+m/vFy+KO9l/4wxhtG66P+xP0d
9R/B119P8iOun/vH88N8N+5n35+U+Zqir/PxO7YPOR71n5E8EtzPZv6//XeL
fIP3XRK+09LnCN8sk17WP1uMP/P8c37mw3M/SE+klxG9Ld4jrPhlf9ON4LY/
LvMJyB9J/9Q/uT76c0b+u/55zPsk+vU7RHX80f5TvhH+/nps1+yXfDmO53iJ
44J9+475cRnvNZ07Hsn90fxLLU+Q593xAuGj5reyPIpPjvxRGifv4/J9bOq3
ff0l74sR/9Qn+/Hfl9eX1N90c1DivYzf8jwJfxmPI32M8DWit0U7tr4/zPcW
aX+P6kmPI3z184HjHaXP3yr2jPYr88lH/uope33qPpvwfqbFxcmP2F/782Wc
x5rvO7KnT6t/U98U/BlP43mx/rwYD894jfCU7wP29aHMrzTffhL5HISP9wn6
/rCMf5i/2M6yfLbey/HMz5xHy3jmaD8Yv2R8lPHP09oL3B/uN+mt/343vx8w
7W+i/sPx5//+6X31u/hOqWf82edrMZ6XZdPT1PunxL/wlvEtzkd/HdsLv1/M
hB+fo+n7LP33FHgfhe/9Tt8XojzgeaZ+6LiJ1jP1Xrrzjtaan0fwrBb6F9x5
/0nzMH6Z44uen89sV3I89c/7ayzTnjK/sP+j72+63Oxswjtq3/dHp74ivHw5
+yji+PaXmq/07eHMT6I/iPb0yH9E+Wa61jwrrZ/vgVGeMt+S9NJ/TzTpl/dt
1S/zf/ye7pPIG6P+Rnqhvsv3Hmk/mX86P8dw2Z9FfjLS59U/7WO/N2O9nueV
/HPEL0fnRXDm9ysI76jM9VhfcL4w6fG0+sBInpDf8ryOyqPv8RBfLLM99RWe
9358L88v6Yvni/5Pyv/++f/V60+rP1BfeDl7tr6XyO/DuMzzRf3J9ovfySE9
0h4c9R/Bz/1ePK9Vf+V6XhW/ffrkezJZpj5M/YPrHdWf1l9BeE+7/tO2H+Gf
/P7l6CX7Uz/qxyvzPJ223nqezwnh6+fjZj3xNaKnUb4P2/9q553vrU63977q
3N8s8pz97U+1XD5tveNwmu9g4nsEqY84njpVT3uhTz/T/sUp+e7+I3rqf29g
uj3tO5atd6p/3R/Ox3qWTa+LfsaXP9/CS+ZjnrY/93+EH9OP7ZY+f01/CeOl
I/7C/qxnvIDwU57x+xKsN/06z//l+pM/sD2/d5L6OumX+uco3jEq9+/PXGj3
gPr+hOWm/7M80kdY5nq5nn58PeMjfXpL/k/67H9PaHo82oMjeh/Zh6P5SA/k
37S/yB9G/hni+9OIt/t+Qz9fcDo/kvnZpH/ba6qv8qMfz56WN5YPXif5C+1Z
8zn9Vv8y7xdR35qyx2xvkN/Y76Tfmu/H9dEeY3vaXz5vzo9ge+4P8cX2o/lG
4/M8kL5H+QfCd8bzyM9H59Hvn3g+jsf52Z/7MbLPR/vF915Z5npI3+Tvtj+0
7zcLffldXsd7KD/77/3x/kDax4yPkH54vokf8iPii/zA9qPjZ9yPzyK+7vsx
/fXwfuu0Pkr9sn+fZlqfWMRv/X5nX7+Z/r4Z9/u0Zb5nNZpvVD+yZzjfqMz5
Fv2OFZ7R+9fsT39pP96R3/vt2xt8P2caP5SvvF9lv7nGdXzSekONdxG//ffO
M9+zv57Ex+i+hODK+MVo/80ffK769/fyPZSp+Kjz5Ufv/VLfeRLxMut9qs/4
hOWPx2WZ72Np/b6nVd930jz5Xjjly5S8MT9c9DPUeB37s97vMJufCw7HwUxH
ad+SfrWe1H/pr6S8dnu1q/TdzxdK/BAenl/C/0nkdfieAeHn/H1+kP0X5exG
2U/Gf0b0T3jIzywXha9pf6r79+2D3F+tM7/f2vdfZH+vV/OvN3tH864U+UP8
s0x+Rf2P+sTifGk/TvmbuX+kz5e7fzVd7sv/pA/io88fE74R/2T7fnyK+RLT
8fj+/aJLuKeR+RUvh+/p8Wnv8Lzw/rXPu/NDvG/+/k8/vyXfkzad6Xe7fI+2
b78nPY7WM6qn/4f0T32V7fv64PT5GdEX8WO/m8at33sg/Y7Wq3nyPjrxyzL3
v3+eUl8xf3O8x3mf6r9VxuN5oL4wOt+fRhzfeVxcv/mR4eivJ9erfcv3VWhP
9d9zTH2E8tP6hPPBST9PEH/t86Mcj2X6L/TL+D3vp6a9y/f/tZ+Z70h/IN+v
6PvP0j+occ+0e2nGr+DJfAT7qzVOvp9L/zfruX+sf9Uy3zMmP2B7+odYz/PH
8mnh83743RrWj+Q1z9/ovRGWqT/7ezyii0tFPrBMfUjzpv7O8zIa3/4lv3Ph
PDrbQ9TvqJ+RP/T9kcstT5XvF9mvqHFvlfwb75fp3/qi5nEebuZPv9z7FPn9
O8b/fe6F33qflvyMZX4/i/vB/Dbhjd+/5vuPqZ8IzrwPovPjvKLxe3LsbzoU
HjcRB9so+o33TevaDfzl9//43iT5Efk737Nd5IO34v9fzmwX6jffByQ98P3z
/n3ot7W+v/tB0Tdstwk+++/ye3I+F2pX7xeqPr/nKvzvxvtZ9ybet8v8GsLD
fDbrsar3d+z9Lvf9It/5/YJ5u0dvx/upHxR9h+/hUb+gvBN+8/tvgj/fX2CZ
8AvePcH7w+Oin1Pe209nfyHxrXU8ElxP/1L5PiLz6YSXvB/B91TNVzTuTpFX
1OeEr4yn83459ZVFO3O7yAvel2Q+Pe8r/LrL1Le5n+Q3tJ9YNv0svpeY/Jfy
hPuv+qczy23HJdTO9x8yv5b7y/HVnvdf8vuKnL/vzzgb/e2Xy/e7niD+39cn
8j2rfvwv7UftQ75/yPWwP+Hvy1/q06kP+36Wx/sk4ieL+VuZL91/XyHrnV+q
+rqfvA/Wt5+fx3v0F4t+Tfrie1vUR0k/9Hf4vrrp3vqh8LRW+AH1U+tPhkt4
zHx6xrNor1puCc7V4XzUNxifJjx9//SvDp/qM5+U+8nx1S/fN/J5cTzY+J7y
p/TvD+b3NEkfXA/xRX2C/IHnj/rp6Ly+anvCc9r+1OfNz7RfNT7V53/nmp9V
455tZbYfxb/65z3zDbTOC81+eNUy76eM8tf75Yx3Wv65zPPB9qP+LBu/lqOj
+VT+Yma/z2i8fv8scz95Pvv+6OTnLLO94ynWW/v+3ml/26is9eZ7wywTnlFZ
v2faPXGWXxXefn5M2ge/7vkoDylPWG8/guikfr99lD/Wzz/J+yenLduf4fjZ
CP4+/8sy7a9XLY/y9axnLfqj8j6jytP5Cf31pX5K/zLXO/IXL94DHZ+PT5H/
Nupvf+livCbLhMf8zPxo5G9j+yn8TJVpr1F/of6t9kvtu4Yu209D/zD3j/Ka
ZftBrLfS38R4PecbxfdH+Scjehnhh2X6H07rz6V/k/OP8M39ZXm03lF+J+E7
bT4o+4/qLd+1jvresc7davNL8XsY3G/K48W4+1bzc2ie9aI/OC7k+xmqz+9T
2A+2eH8x31Pme5Ms8/4q/cEscz1T8e/F/HDfM9mfeE8s8x/79zXzvr7xpP0Y
j0d/C/0/trdUrvmCfXpIe63/HovtrpvFX0D7yHqk85G4fuvdGn+7nHe3V7ni
y35i0W1970Dz2299dyK/YDq+27f/8/sxhI/jsT/hZ30/3pr0wP3ne532n2q/
95qfVv3vFv+F/bSaZ6/4T5k/xvcnLbdE/6slPkD/p+DKeDDhc73fRRv1H92P
pX/Jfil/X4L+rEW/rr+PFu9s/N5R4S/0X572/L4qP2B/4st6o/pvDufneWJ8
gfKZ+pD9JppnvcRLNI/fdcjvV+nX/sGMD9GfQfkrOn1dcP75OzGuv6t0v6yH
8ob83OdB+7/X1iG4/H3RfD+U9r/tDMG71s6FfncbHxZ8a8X/ZL+l5Fv9fhD9
H/SXsr/LlqveN4273vR89bc/NPLinh6U71fSvqc853jWw4TXzSIv7XfVeVwv
8aXF7woelnzAkb3B/eX7TqYrwblZ7CG279tLWbZfUfDVfFyWPb7pnfSt3/pe
6FSZ/GhUZnym/5565mON8vdPW8/8FjV7oH27+G45Lywzn0S/6f9mfI700Y+X
pT/ccAtfa0W+8D1Z8kd/P810xnj5iH7VLuPvU/cD3V7zhtxdPij64cif5/cH
zY8ZL+rHg/P7tKN669eL91NSPvS/n5n9ef5FB7637ffFM//E8CzeH818wJF8
HtX3vx+Q9grL9P/wvJuuBeftCfynfKK+bXnhdtb3Dd9UfprlC+UJ/dFs73bC
90azsxyPtnz3e5nsT/goDzV+fh+S7wmafyzaK1kmPvr5+HlfnPye8pLnyXHZ
zyK+Yb6v+p3iD+V7vyxTv2bZ7TTenebPEj6ul/Gov6l9fj/dckfvAh+U8Umf
I3jIT6fGE7w+D5nfrl/f07nZ5JPtCvILybO8n+t7qfr/WvH3Up/8BPFqluk/
Y5n8gfaM426ar/KTvj2U30sxv7Q/gvyP87E/7anR+NSP++ub7j9aP/uPxqc9
Yb+D6Hin+HNJr7R/yK/p/xn5N33OtC7ri5mv1rff83vOtM/636PM/GiuZ6Sv
kZ/Rf/sp4un9+4bUh7IseDK/jmXG46n/8T4C8UX+PPLPcP20R0flvv/+QtMr
mL9J/qN5fU/g9oR9Ovpert83r98zJX8gfdCfR3j79mWWR+1pz7G94XP8QevO
fOHReKP8z1G5Pz7zi3he0t7geVG/zI+g/kX//JOIf6tf3qe2nsL2lEc8n2xP
+EdlrcP3ELYm8sGnvx9FfzDH9zo1ztawTP+w8ykW/5/5FeSP/fPC95LzvPA8
EJ+0DxftNec3ZT4I6YPyQuNlvI1l6vv2x5tPjN6r6d+vns4/Gfm3R+1Z33+/
5+XrWRZerzU7dSQ/hafnM8eL+/pG5uNSHvA+xag/2/fzfafbc3yWTQ+0h11P
+hd+Mh4vfGT8WOPkfeK+/zDHE13m94p8/8J8g/Lm5fKdsty/X5nx1anvf7xs
vcu+z833dgjPp8g3oH9ulH8xak99mWX1y/yl/n0I+iv5PdjUv2ifjPgHy+RH
fXtnWv8b5QuN3mt6uXyszAca2V+j+3x9fXJa/xiVeV51/vJ+FemD7y2x3L9/
OC1PWB69f9XXP1I+n3Z/1C/9X6ft35d////m79NryiP6T1jfb5/4pT+1Hx96
+fewqb+N3ncazU/9iPpd/7535m+wP/Vj/eb9HMKvfvk9KdYTHurHp8Xfr7v9
afndq9YznvCrnZfp95Npj4/a83vn/Xh71tN/Qn2G8mnknxn1Z73LU/ow23P/
p8Zzmf5yrpf19Ac7DqZxt4p8IbzM16Y/gPnyxM/IH0H/OuMlpBeW6e/pf/8n
60nfjj8Jrpov632xf6Xv30189O2bxIfoazp/dqQPndY+Y1n9zjb6mHo/afE+
LONNzI+fLp8Wvj68OR7pTftcv3fq/n19KN/D1f/z/TnmL47ol/qY8Ws55vHN
Vzy+zx3fL6L9QPuq7y85D39Qfv9E+7vUvjvJ9bPe9prlpugu4xeUn/SPsD/L
gjO/v6D/5/1/8kP27/PLpFe1m75vxTL9h6f1Z3K+kb9wNP6r1o/WP/KXnrb9
qP608Py68cf7DKwXHS+3PInR+RPd5nsoLHO+Ufv++Zy233j+Ka/ID/rxoen2
9I+yzP59eZn5jSP/Lucf1TNfhvCtw9/K+3VT9+00XtUPKH/or6J+Zv7m+1Dr
iFdRfrG/5k/5QP2F+6l1PJs5jik++mX4L5eLfHF70ZP17C9ni3ZJ5t/Zn6dy
lY/z4oeH8f+HRR7QX0Z9v09PKb/8boT63y3xWX5/k/qK87X8O9JnmL/Isv1l
2r9rxV/ft4ftF7K/Lr+n6TzF+Tx/dDCc/1XL9J8v3sN0frL53nb833Hnu0Uf
Eh4yH2JU9r5r3s2hvsvyyP/JfBHaNyzzfgH9Ddxf2gP994VIL/y+QPJzyhuW
aY9aTugcrJb5+v5dxnem66k/c70sj/ID+vMnPxrho59PbLt4rflRtJ5bw/eW
+va+1+18Mcdpdgs/I30IH/5O753ij9U6zRe2J+4T5/u/HI/fd/W+i+/tFntZ
8Ge+G/1p6m++eafgg/yX8tD8eA7Po7zfsRifTPrQes2Hdgr++ucx+T3z43wP
RnDfKf5p5t+wLDzmfRX1y+9v9+3HqwGH+UvGA0b2K89vPz88802Fz8zHpDxh
/MRy1XmQlLfmm/q9U/xD9F/QH0F67N9/Tf2M51XrtxzcnHhvJvNVfS9WeNks
8PbjtUlvjis6H4HjaR7nQR8WfrgYV9wp5990KDreL+9Fzf//vaPA51vDfHjh
0e++Hk34y/O9pkW/90ap5/1c5qvzPIqe8vvXpD/i1/5X4aHSs+lIv7sNTo27
H++gvaf2f/yR+v/ceHvc8tcd9yC9O99SePJ9lvzeO9//4v6Tv4hOI8/95wcT
+aoX27o0ju9xHLRzona7BZ86T84Dvh374jjxTuN/zk/X/N+I+0Xfau+lCT8H
zQ+jeXy/yu+4PSr0z/ssprt5/TdzPMFX9bEp+bCY18T3sabvM5v+9P+diXjD
duDzsPB3j296H/H3vr6S9+m0nsyv9ni+T0z5zPNru8NyifX28/p+I/kt5Qv3
y+vSOAeNTwru28X/8STywxbpPu836Pw+mzkPYySvyH95v5n2l36t5xwO4zN9
+ZPy1XgTXm8X/r9wDn5xUOQL18d4K+XVSD5Rntk+Nt76+i/xm+eT8V2+j9j3
32T8hvyO9N+/T570zHw2lulP4Xm0v87fW+B7fZRX5A+Ex3xAeF0v/Nv3OjT+
XuH/TxbypnwfIu8vep8F984Efed7AmqX38sRfs+1ffR7oMYH9Vn6y61n+v1K
3oemfOL3R8i/iM+uffO19zX79sBK4zvmI8LbRoPP938In+T4OzHubzU7RHDv
Ff8C9XfrWfJ/HBV6IP6ob/C9VvIn0k8/Xy/vx4k+8nvjLI/ydUb0rXHyfuqo
PeVb//sqtB/5nme+F8sy7yvSH0d5RvlAeurru9P+IPrzeJ+G+jrpqZ9/dz76
1++dkL+O7Dmub46XP3xP8/yNjwr9CG++R7Fb7i/377+n/4L+VPIL7nffnwD7
9c9mIR9/u7zH8LPwm9vvIbjvxnl8o8xnPGm9cV/g5ES/f+93Snu+t6F5fM/9
uNk/czx8+yjwey/shEfFPp/D/Xf+sdp/6+PYx/0Y9/VyP6Kv36b+Qf8M7d2+
PyLvi/fz1R8I3vvvlnil5bJ+jwu+tc58f5X+Hdqbms/rOmh6sf5/J+bJ/CjC
w/xPyk++d227UnBsFPxy/xkvoH9CeLsXcD2K+vDz//TNgOcbcY6/VfBN/11f
3j6dWS/u33fOeAv9a/p/3h/o+xMzf7ifX2Q5FfbeL4603j99q8QfP0N+CPV5
6zPCx0rxH/A8MB7Uz2/L9xm13ufx3tuFsv/a73zPmPiZz/cHj2OfPmxxMOtt
jNeR3vy+rd+Bov6qeZ7NjDfh6enMejv3g/or/fX0L1D/nS/vf/wjreff/LPm
f1f/1Ub32s+DFteZw/Gx9fHML6F/gPbTfH3nvhn36f966c/4Mtfv/fE5UDnj
lX399IuZ4+LCV76PQv2E73MxftnXz47Cn/FWoRedt7z/pH3OeDHpkfld/F6d
fkPv/Pi4n7/787tx//jNYo9RHonPHgneo7cC3jwv/fNGfup37yI/5obfhXqj
4Iv8jPyf+hfpg/aZ+t2O8e8XfYT82/Fg8xnzOY27V/wNzMdkPe0tweXvBtxt
77F6H0XXu5rvJ/fKeef66S8UnM9njiO5v/2g1Af5PgHzC+Y/P7ae/LDoA6RP
jRt+1eV7Md9GtDso+bf6P+9rJD2THoSvfJ+D/l2+v9znp1mv/b0f+/NOka+2
mzW/v5dgfSL8d3/yUPD/1/fLeeN85kt+v6ZvXzAfL/lNX99L/x3n6/s/Mh7f
X2/mE/b5Ua6P+UTMT+2v59nMec6Up6P8RMqvUZn0rXeWHsS+vVvykdif/hZ+
z4T+YsLreIn2eb+8N2a55Pi9+O5bwvv/+c2SLyH74I2A772Cr/79zoyHUt9m
vgDvp1F/oD6n9dnvcFjGdzxIw75V6lmWnHxT4//m+0W/69vX78c+zfT7H74T
830v5NYDnbdb70a/2+H/v9/eKRM+j4v/Wf28z28UfGi8j2K8v1riO+Sf1H9H
9ib1T66H+ofgyfeKmW9A/zf9UTrf+F7Kt4+j/u1if9nul5/tsPEV7dudwq81
7k7Ti9TuXuDh7YBvP97/e73YQ4I7/Arfu6f5fuvbwudv/M3iP+jbY/m9Ytq7
pC/RR+a7U/7Zry946nuX1Ke0/5aj7xd8Ul+Zo++vPQ46+LD4k4Xf+wHv44Ar
7OhfvBvrPQ6+93bxB9JfTf7G88H1f4J4Kemd8on2DutJj/R/UT+if4j8ov/+
WdqvOnf3Yl2PYj3hpz06KOdNdHk34H1zwh5P/tJ/bwTx4K/JF66P9En4WM/x
JC/uBz08LvE06lsLdtgv92H03md/fWvNz0V/nOMk6rdX4Bc+7wS+Xx+W6W+n
/OP+ML5FeU19h/XUr1jfzyebLvP9HcZjWCb90p8j/pXv79LfRH+u1vOB+Oe/
/ssT/iF+3yntbeKX+GN/tqe+1c9/Tvj77Uf1OR7jByP9kfCP8p1G4xFewmd7
yHmiLNMfwf6Ed4R/5i/R/zaCn/djR/hnvfUX66kvhz/eV2U+VsI3Or+vSl/c
/9H+jt67Ypn6hNaT3+vrf2+a3zc+0/IgqM+YLhyXk57yeuDpnZL/S/uV9hX9
h8yvl3zI+1Sj93Xor6X+LTrN97VY5nmh/5L2LPmn6CTzbVV2HML5XelvtP2s
dmulbH+G4PB4+X1Rrs/7vph/kftFfPb9OylfyJ9P+95cP96T9MR6+sOEp7zf
RHuD70X1z9N0mev5HPFWrqf/nlnaU6P7y3yfRufO715YvqR/SvNkfvFp74vR
X8Ey88lH54v08AnyeVhmf+KH94n777mm/5v+tdH9De6nxnFc/GHZX+ZPsZ77
QXr4PuJD1N+69uPX7AO1D/vih48K/uiPEz7y/XvyL7XbD7vl9Vi/9d7jgOOB
+m29W+CnvSk3wP3Y58cT8TvbXb+B72w6/v0v9PujP5iQd5lPo3XYT7hV/Cvi
Y4fx+1C/B9/S/I+/U/Lh5R55L34/Kv4b2sNCs+nG/tKtwGfNl9U4u7H+eyf/
F6yW04c=
      "]]}, {{}, {{}, {}}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 1.5104009543358297`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{567.75, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 7}, {1.5104009543358297`, 10.510306284169245`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8250994045007677`*^9, 3.825099414297393*^9}},
 CellLabel->
  "Out[105]=",ExpressionUUID->"b45d15aa-321d-408f-89c9-03eae0a2ec2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"data", ",", 
   RowBox[{"{", 
    RowBox[{"_Real", ",", "_String"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.825081550595685*^9, 3.8250815519287806`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"c0d4ff39-e0d2-47d7-a72d-70a112965aa7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2176", "}"}], ",", 
   RowBox[{"{", "2355", "}"}], ",", 
   RowBox[{"{", "2475", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.82508155253528*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"f1e10d2a-dc69-4e26-9075-151b91f1c9ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"item", "[", 
  RowBox[{"[", 
   RowBox[{"{", 
    RowBox[{"2176", ",", "2355", ",", "2475"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8250815736095796`*^9, 3.825081609052414*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"571e50fd-e8fd-4ade-a808-571c4ff9adbf"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Item_id" -> 44664, "Item_Description" -> "Kanan's Energy Booster", 
        "Category" -> "Energy Drink", "Pack" -> 12, "Bottle_Volume_ml" -> 
        1000., "Bottle_Cost" -> 1.5, "Bottle_Retail_Price" -> ""], 
       Association[
       "Item_id" -> 55506, "Item_Description" -> "Kyouya's Orange Soda", 
        "Category" -> "Orange Soda", "Pack" -> 12, "Bottle_Volume_ml" -> 750.,
         "Bottle_Cost" -> 1.5, "Bottle_Retail_Price" -> ""], 
       Association[
       "Item_id" -> 62096, "Item_Description" -> "Souma's Lime Soda", 
        "Category" -> "Lime Soda", "Pack" -> 12, "Bottle_Volume_ml" -> 750., 
        "Bottle_Cost" -> 1.5, "Bottle_Retail_Price" -> ""]}, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Item_id"} -> 1, {All, "Item_Description"} -> 
        1, {All, "Category"} -> 1, {All, "Pack"} -> 
        1, {All, "Bottle_Volume_ml"} -> 1, {All, "Bottle_Cost"} -> 
        1, {All, "Bottle_Retail_Price"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Item_id" -> TypeSystem`PackageScope`AtomShape[34], 
            "Item_Description" -> 
            TypeSystem`PackageScope`AtomShape[211.20000000000005`], 
            "Category" -> 
            TypeSystem`PackageScope`AtomShape[115.20000000000002`], "Pack" -> 
            TypeSystem`PackageScope`AtomShape[34], "Bottle_Volume_ml" -> 
            TypeSystem`PackageScope`AtomShape[60], "Bottle_Cost" -> 
            TypeSystem`PackageScope`AtomShape[60], "Bottle_Retail_Price" -> 
            TypeSystem`PackageScope`AtomShape[27.]]], 
          DirectedInfinity[1], 7, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Item_id", "Item_Description", "Category", "Pack", "Bottle_Volume_ml",
          "Bottle_Cost", "Bottle_Retail_Price"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]]}], 3], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Item_id"} -> 1, {All, "Item_Description"} -> 
        1, {All, "Category"} -> 1, {All, "Pack"} -> 
        1, {All, "Bottle_Volume_ml"} -> 1, {All, "Bottle_Cost"} -> 
        1, {All, "Bottle_Retail_Price"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Item_id" -> TypeSystem`PackageScope`AtomShape[34], 
            "Item_Description" -> 
            TypeSystem`PackageScope`AtomShape[211.20000000000005`], 
            "Category" -> 
            TypeSystem`PackageScope`AtomShape[115.20000000000002`], "Pack" -> 
            TypeSystem`PackageScope`AtomShape[34], "Bottle_Volume_ml" -> 
            TypeSystem`PackageScope`AtomShape[60], "Bottle_Cost" -> 
            TypeSystem`PackageScope`AtomShape[60], "Bottle_Retail_Price" -> 
            TypeSystem`PackageScope`AtomShape[27.]]], 
          DirectedInfinity[1], 7, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Item_id", "Item_Description", "Category", "Pack", "Bottle_Volume_ml",
          "Bottle_Cost", "Bottle_Retail_Price"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]]}], 3], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 
     7, "DataRowCount" -> 3, "DataColumnCount" -> 7, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Item_id", 
                  Style[
                  "Item_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Item_id"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Item_id"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Item_Description", 
                  Style[
                  "Item_Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Item_Description"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Item_Description"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Category", 
                  Style[
                  "Category", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Category"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Category"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Pack", 
                  Style[
                  "Pack", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Pack"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Pack"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Volume_ml", 
                  Style[
                  "Bottle_Volume_ml", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Bottle_Volume_ml"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Bottle_Volume_ml"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Cost", 
                  Style[
                  "Bottle_Cost", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Bottle_Cost"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Bottle_Cost"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Retail_Price", 
                  Style[
                  "Bottle_Retail_Price", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Bottle_Retail_Price"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Bottle_Retail_Price"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["44664"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Item_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Kanan's Energy Booster", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Energy Drink", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Category"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Pack"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Bottle_Volume_ml"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Bottle_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Bottle_Retail_Price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["55506"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Item_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Kyouya's Orange Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Orange Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Category"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Pack"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["750.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Bottle_Volume_ml"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Bottle_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Bottle_Retail_Price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["62096"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Item_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Souma's Lime Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Lime Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Category"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Pack"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["750.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Bottle_Volume_ml"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Bottle_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Bottle_Retail_Price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{704., {63., 69.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{704., {63., 69.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.825081585386255*^9, 3.8250816111935663`*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"c40316f5-aa7a-4e81-8e98-3ffbc638cfc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"item", "[", 
    RowBox[{"All", ",", "\"\<Category\>\""}], "]"}], ",", "\"\<\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8250816899237547`*^9, 3.8250817614955187`*^9}, {
  3.825082044593612*^9, 3.8250820506214137`*^9}, {3.825082096061817*^9, 
  3.8250821521910133`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"95b54dff-b837-4f16-9455-afc41606406d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3603", "}"}], ",", 
   RowBox[{"{", "3604", "}"}], ",", 
   RowBox[{"{", "3605", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8250817374571667`*^9, 3.82508176229909*^9}, {
  3.82508211886087*^9, 3.825082152970965*^9}},
 CellLabel->"Out[90]=",ExpressionUUID->"e0c350b2-5dc8-4bd9-821a-035bb34b1c23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", "\"\<Item_Description\>\"", "]"}], "&"}], "/@", 
  RowBox[{"item", "[", 
   RowBox[{"[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3603", ",", "3604", ",", "3605"}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8250821557953844`*^9, 3.8250821851195164`*^9}, {
  3.825082359513645*^9, 3.8250823995020943`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"fe355ec9-c0ab-46d1-a457-033690fe2a3e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {
      "Yummy Surstromming Juice", "Miku's Leek Juice", "Dark Fantasy", 
       "Butterbeer"}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[230.40000000000003`]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 4], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[230.40000000000003`]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 4], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     4, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["Yummy Surstromming Juice", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Miku's Leek Juice", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Dark Fantasy", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Butterbeer", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{
                   TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{259., {63., 69.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{259., {63., 69.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.825082161446174*^9, 3.8250821866920867`*^9}, 
   3.8250823666579075`*^9, 3.8250824003047037`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"68a8fd52-378f-4cf1-afe1-966887694ccf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"invoice", "[", 
  RowBox[{"Counts", ",", "\"\<Ca\>"}]}]], "Input",
 CellChangeTimes->{{3.8253474279910235`*^9, 
  3.8253474649631033`*^9}},ExpressionUUID->"61db5bf4-edeb-4278-be52-\
1274aaeebef2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", "%"}]], "Input",
 CellChangeTimes->{{3.825082404282546*^9, 3.8250824065040135`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"600d868c-1bb7-42a4-8193-0d4360c7067d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Yummy Surstromming Juice\"\>", 
   ",", "\<\"Miku's Leek Juice\"\>", ",", "\<\"Dark Fantasy\"\>", 
   ",", "\<\"Butterbeer\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.825082406704408*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"6c780dbd-bfd4-4471-928b-567f3df6526a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"item", "[", 
  RowBox[{"Counts", ",", "\"\<Category\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8250822331184063`*^9, 3.82508225632364*^9}, {
  3.825083262511916*^9, 3.825083263397769*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"d98a33b0-e3a5-4ac3-8af7-9d261901a3d1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Grapefruit Soda" -> 60, "Fruit Punch" -> 319, "" -> 4, "Cream Soda" -> 
       899, "Cherry Soda" -> 1019, "Blueberry Soda" -> 40, "Root Beer" -> 418,
        "Cola" -> 251, "Ginger Ale" -> 314, "Energy Drink" -> 339, 
       "Orange Soda" -> 186, "Lime Soda" -> 190, "Raspberry Soda" -> 127], 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[135.], 
         TypeSystem`PackageScope`AtomShape[34]]], 13, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "", "Blueberry Soda", "Cherry Soda", "Cola", "Cream Soda", 
         "Energy Drink", "Fruit Punch", "Ginger Ale", "Grapefruit Soda", 
         "Lime Soda", "Orange Soda", "Raspberry Soda", "Root Beer"]], 
       TypeSystem`Atom[Integer], 13], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[135.], 
         TypeSystem`PackageScope`AtomShape[34]]], 13, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "", "Blueberry Soda", "Cherry Soda", "Cola", "Cream Soda", 
         "Energy Drink", "Fruit Punch", "Ginger Ale", "Grapefruit Soda", 
         "Lime Soda", "Orange Soda", "Raspberry Soda", "Root Beer"]], 
       TypeSystem`Atom[Integer], 13], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 13, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     13, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Grapefruit Soda", 
                  Style[
                  "Grapefruit Soda", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Grapefruit Soda"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Grapefruit Soda"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{135., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["60"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Grapefruit Soda"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Fruit Punch", 
                  Style[
                  "Fruit Punch", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Fruit Punch"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Fruit Punch"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{135., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["319"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Fruit Punch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["", 
                  Style[
                  "", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[""]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[""]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{135., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cream Soda", 
                  Style[
                  "Cream Soda", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cream Soda"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cream Soda"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{135., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["899"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cream Soda"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cherry Soda", 
                  Style[
                  "Cherry Soda", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cherry Soda"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cherry Soda"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{135., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1019"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cherry Soda"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blueberry Soda", 
                  Style[
                  "Blueberry Soda", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blueberry Soda"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blueberry Soda"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{135., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blueberry Soda"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Root Beer", 
                  Style[
                  "Root Beer", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Root Beer"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Root Beer"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{135., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["418"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Root Beer"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cola", 
                  Style[
                  "Cola", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cola"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cola"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{135., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["251"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cola"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ginger Ale", 
                  Style[
                  "Ginger Ale", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Ginger Ale"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ginger Ale"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{135., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["314"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ginger Ale"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Energy Drink", 
                  Style[
                  "Energy Drink", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Energy Drink"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Energy Drink"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{135., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["339"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Energy Drink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Orange Soda", 
                  Style[
                  "Orange Soda", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Orange Soda"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Orange Soda"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{135., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["186"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Orange Soda"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Lime Soda", 
                  Style[
                  "Lime Soda", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Lime Soda"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Lime Soda"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{135., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["190"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Lime Soda"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Raspberry Soda", 
                  Style[
                  "Raspberry Soda", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Raspberry Soda"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raspberry Soda"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{135., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["127"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Raspberry Soda"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{205., {171., 177.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{205., {171., 177.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8253469173947873`*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"edd87709-a720-4e11-95b8-f394c1376b44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "item", "]"}]], "Input",
 CellChangeTimes->{{3.825346960594426*^9, 3.8253469667487125`*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"aab129aa-4eed-42a1-b73d-1d6f3b44e4ea"],

Cell[BoxData["4166"], "Output",
 CellChangeTimes->{3.825346967128891*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"23789a1b-a67b-4c0f-8f5e-97f48b703846"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"item", "[", 
  RowBox[{"[", "19", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.82534694694407*^9, 3.825346950604642*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"0389ae19-8d73-4427-bff4-fdd65aac21a9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Item_id" -> 161, "Item_Description" -> 
       "Alucard's Tropical Fruit Punch", "Category" -> "Fruit Punch", "Pack" -> 
       6, "Bottle_Volume_ml" -> 950., "Bottle_Cost" -> 2.91, 
       "Bottle_Retail_Price" -> 4.37], "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`DocumentShape[
       Association[{"Item_id"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Item_Description"} -> 
        TypeSystem`PackageScope`AtomShape[288.00000000000006`], {"Category"} -> 
        TypeSystem`PackageScope`AtomShape[105.60000000000002`], {"Pack"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Bottle_Volume_ml"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Bottle_Cost"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Bottle_Retail_Price"} -> 
        TypeSystem`PackageScope`AtomShape[60]], 1], "InitialType" -> 
     TypeSystem`Struct[{
       "Item_id", "Item_Description", "Category", "Pack", "Bottle_Volume_ml", 
        "Bottle_Cost", "Bottle_Retail_Price"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real]}], "Meta" -> Association[], "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`DocumentShape[
       Association[{"Item_id"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Item_Description"} -> 
        TypeSystem`PackageScope`AtomShape[288.00000000000006`], {"Category"} -> 
        TypeSystem`PackageScope`AtomShape[105.60000000000002`], {"Pack"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Bottle_Volume_ml"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Bottle_Cost"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Bottle_Retail_Price"} -> 
        TypeSystem`PackageScope`AtomShape[60]], 1], "Type" -> 
     TypeSystem`Struct[{
       "Item_id", "Item_Description", "Category", "Pack", "Bottle_Volume_ml", 
        "Bottle_Cost", "Bottle_Retail_Price"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real]}], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     7, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Item_id", 
                  Style[
                  "Item_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Item_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_id"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["161"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Item_Description", 
                  Style[
                  "Item_Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Item_Description"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_Description"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Alucard's Tropical Fruit Punch", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{288.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Category", 
                  Style[
                  "Category", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Category"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Category"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Fruit Punch", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Category"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Pack", 
                  Style[
                  "Pack", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Pack"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Pack"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Pack"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Volume_ml", 
                  Style[
                  "Bottle_Volume_ml", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bottle_Volume_ml"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Volume_ml"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["950.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Volume_ml"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Cost", 
                  Style[
                  "Bottle_Cost", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bottle_Cost"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Cost"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Retail_Price", 
                  Style[
                  "Bottle_Retail_Price", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bottle_Retail_Price"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Retail_Price"]}, "ColumnHeader", False], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.37"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Retail_Price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{440., {99., 105.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{440., {99., 105.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.825346951042776*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"1d7d5f4d-66ce-4aa3-a4dc-1f69dcaffdff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"item", "[", 
   RowBox[{"Union", ",", "\"\<Item_Description\>\""}], "]"}], "//", 
  "Length"}]], "Input",
 CellChangeTimes->{{3.825347015853948*^9, 3.825347023143959*^9}, {
  3.8253470807488317`*^9, 3.8253470936216755`*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"0a76b132-ae63-4f08-b458-fb047fa1148e"],

Cell[BoxData["4166"], "Output",
 CellChangeTimes->{3.8253470951362085`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"9f18c812-ce95-450e-b31b-53dd0396b4a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"item", "[", 
  RowBox[{"Union", ",", "\"\<Category\>\""}], "]"}]], "Input",
 CellLabel->"In[87]:=",ExpressionUUID->"77585fee-c271-4e1c-adec-285921914e47"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {
      "", "Blueberry Soda", "Cherry Soda", "Cola", "Cream Soda", 
       "Energy Drink", "Fruit Punch", "Ginger Ale", "Grapefruit Soda", 
       "Lime Soda", "Orange Soda", "Raspberry Soda", "Root Beer"}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[
       3, 6, 13, 144.00000000000003`], 13, 6, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Atom[String], 13], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[
       3, 6, 13, 144.00000000000003`], 13, 6, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Atom[String], 13], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     3, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["Blueberry Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["Cherry Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["Cola", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["Cream Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["Energy Drink", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["Fruit Punch", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["Ginger Ale", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["Grapefruit Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["Lime Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["Orange Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["Raspberry Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["Root Beer", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item["", Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item["", Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item["", Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item["", Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item["", Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{938., {51., 57.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{938., {51., 57.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8250820005701904`*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"db932488-a142-4bb2-b16a-670ba848b7cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "item", "]"}]], "Input",
 CellChangeTimes->{{3.825081740730945*^9, 3.8250817472520823`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"8a0b01c0-dcbe-4516-af76-2ff6b8ec1b40"],

Cell[BoxData["4166"], "Output",
 CellChangeTimes->{3.8250817476581173`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"5eaed7dd-5f5d-429a-a5e3-90b386d8751f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Observations", "Section",
 CellChangeTimes->{{3.8250817797392993`*^9, 
  3.8250817817908845`*^9}},ExpressionUUID->"17b301d9-2b6e-4e4d-8f2f-\
f50e1e807b68"],

Cell["\<\
The cost price relationship is roughly linear as  price ~ 0.0104165\
\[VeryThinSpace]+1.49998 Cost\
\>", "Item",
 CellChangeTimes->{{3.8250817910298567`*^9, 
  3.8250818446853933`*^9}},ExpressionUUID->"7ee0fe15-7486-427e-a77c-\
6257b9e7ec5a"],

Cell[TextData[{
 "There are 12 different categories of drink and some are not labeled into a \
category (Yummy Surstromming Juice, Miku\[CloseCurlyQuote]s Leek Juice, Dark \
Fantasy, Butterbeer)\[LineSeparator]",
 Cell[BoxData[
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association[
     "InitialData" -> 
      Association[
       "Grapefruit Soda" -> 60, "Fruit Punch" -> 319, "" -> 4, "Cream Soda" -> 
        899, "Cherry Soda" -> 1019, "Blueberry Soda" -> 40, "Root Beer" -> 
        418, "Cola" -> 251, "Ginger Ale" -> 314, "Energy Drink" -> 339, 
        "Orange Soda" -> 186, "Lime Soda" -> 190, "Raspberry Soda" -> 127], 
      "AllowEmbedding" -> True, "InitialShape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[135.], 
          TypeSystem`PackageScope`AtomShape[34]]], 13, 
        DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
        TypeSystem`Atom[
         TypeSystem`Enumeration[
         "", "Blueberry Soda", "Cherry Soda", "Cola", "Cream Soda", 
          "Energy Drink", "Fruit Punch", "Ginger Ale", "Grapefruit Soda", 
          "Lime Soda", "Orange Soda", "Raspberry Soda", "Root Beer"]], 
        TypeSystem`Atom[Integer], 13], "Meta" -> Association[], "RowTarget" -> 
      20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[135.], 
          TypeSystem`PackageScope`AtomShape[34]]], 13, 
        DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
        TypeSystem`Atom[
         TypeSystem`Enumeration[
         "", "Blueberry Soda", "Cherry Soda", "Cola", "Cream Soda", 
          "Energy Drink", "Fruit Punch", "Ginger Ale", "Grapefruit Soda", 
          "Lime Soda", "Orange Soda", "Raspberry Soda", "Root Beer"]], 
        TypeSystem`Atom[Integer], 13], "Path" -> {}, "BaseIndices" -> {}, 
      "DisplayedRowCount" -> 13, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
      13, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
      "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["Grapefruit Soda", 
                   Style[
                   "Grapefruit Soda", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Grapefruit Soda"]}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Grapefruit Soda"]}, "RowHeader", False], "Mouse"], 
               ImageSize -> {{135., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["60"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Grapefruit Soda"]}, "Item", False], "Mouse"], 
               ImageSize -> {{34, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["Fruit Punch", 
                   Style[
                   "Fruit Punch", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Fruit Punch"]}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Fruit Punch"]}, "RowHeader", False], "Mouse"], 
               ImageSize -> {{135., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["319"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Fruit Punch"]}, "Item", False], "Mouse"], 
               ImageSize -> {{34, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["", 
                   Style[
                   "", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[""]}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key[""]}, "RowHeader", False], "Mouse"], 
               ImageSize -> {{135., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["4"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key[""]}, "Item", False], "Mouse"], 
               ImageSize -> {{34, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["Cream Soda", 
                   Style[
                   "Cream Soda", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cream Soda"]}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Cream Soda"]}, "RowHeader", False], "Mouse"], 
               ImageSize -> {{135., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["899"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Cream Soda"]}, "Item", False], "Mouse"], 
               ImageSize -> {{34, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["Cherry Soda", 
                   Style[
                   "Cherry Soda", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cherry Soda"]}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Cherry Soda"]}, "RowHeader", False], "Mouse"], 
               ImageSize -> {{135., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1019"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Cherry Soda"]}, "Item", False], "Mouse"], 
               ImageSize -> {{34, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["Blueberry Soda", 
                   Style[
                   "Blueberry Soda", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blueberry Soda"]}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Blueberry Soda"]}, "RowHeader", False], "Mouse"], 
               ImageSize -> {{135., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["40"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Blueberry Soda"]}, "Item", False], "Mouse"], 
               ImageSize -> {{34, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["Root Beer", 
                   Style[
                   "Root Beer", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Root Beer"]}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Root Beer"]}, "RowHeader", False], "Mouse"], 
               ImageSize -> {{135., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["418"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Root Beer"]}, "Item", False], "Mouse"], 
               ImageSize -> {{34, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["Cola", 
                   Style[
                   "Cola", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cola"]}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Cola"]}, "RowHeader", False], "Mouse"], 
               ImageSize -> {{135., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["251"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Cola"]}, "Item", False], "Mouse"], 
               ImageSize -> {{34, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["Ginger Ale", 
                   Style[
                   "Ginger Ale", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Ginger Ale"]}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Ginger Ale"]}, "RowHeader", False], "Mouse"], 
               ImageSize -> {{135., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["314"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Ginger Ale"]}, "Item", False], "Mouse"], 
               ImageSize -> {{34, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["Energy Drink", 
                   Style[
                   "Energy Drink", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Energy Drink"]}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Energy Drink"]}, "RowHeader", False], "Mouse"], 
               ImageSize -> {{135., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["339"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Energy Drink"]}, "Item", False], "Mouse"], 
               ImageSize -> {{34, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["Orange Soda", 
                   Style[
                   "Orange Soda", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Orange Soda"]}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Orange Soda"]}, "RowHeader", False], "Mouse"], 
               ImageSize -> {{135., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["186"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Orange Soda"]}, "Item", False], "Mouse"], 
               ImageSize -> {{34, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["Lime Soda", 
                   Style[
                   "Lime Soda", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Lime Soda"]}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Lime Soda"]}, "RowHeader", False], "Mouse"], 
               ImageSize -> {{135., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["190"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Lime Soda"]}, "Item", False], "Mouse"], 
               ImageSize -> {{34, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["Raspberry Soda", 
                   Style[
                   "Raspberry Soda", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Raspberry Soda"]}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Raspberry Soda"]}, "RowHeader", False], "Mouse"], 
               ImageSize -> {{135., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["127"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  Key["Raspberry Soda"]}, "Item", False], "Mouse"], 
               ImageSize -> {{34, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
             "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
           Left, Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373],
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
          LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
          ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          If[GeneralUtilities`$DebugMode, 
           Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
             TypeSystem`NestedGrid`PackagePrivate`formatState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{205., {171., 177.}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{205., {171., 177.}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
       Needs["Dataset`"]; 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False]], "Input",ExpressionUUID->
  "28b12bd4-1c0c-423d-b1ae-3c42cf9911f5"]
}], "Item",
 CellChangeTimes->{{3.8250817910298567`*^9, 3.825081839919047*^9}, {
  3.8250819865575905`*^9, 3.825082036130955*^9}, {3.8250823487931232`*^9, 
  3.8250823513085785`*^9}, {3.8250824161016192`*^9, 3.8250824401622505`*^9}, {
  3.8250832802235246`*^9, 
  3.8250832808211355`*^9}},ExpressionUUID->"569ec0e4-2091-4d1a-b6c0-\
2a5bb4afea55"]
}, Open  ]]
},
WindowSize->{718.5, 748.5},
WindowMargins->{{Automatic, -485.25}, {534.25, Automatic}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 7, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e9c6957e-3dcb-4fb7-a4a3-3aaefcf20e8c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 156, 3, 66, "Section",ExpressionUUID->"166081a3-898d-48f8-8ec9-d14275219af7"],
Cell[CellGroupData[{
Cell[761, 29, 237, 4, 31, "Item",ExpressionUUID->"90aad72d-7fa8-4040-beb3-3a96391e4349"],
Cell[1001, 35, 246, 4, 27, "Subitem",ExpressionUUID->"911cb87e-2780-4700-8956-1c590b927a0e"],
Cell[1250, 41, 249, 4, 27, "Subitem",ExpressionUUID->"df7cb586-881d-4d26-9743-d16851367818"],
Cell[1502, 47, 334, 7, 27, "Subitem",ExpressionUUID->"fdb7dd6d-276e-4747-9e62-684ec252021f"],
Cell[CellGroupData[{
Cell[1861, 58, 329, 5, 27, "Subitem",ExpressionUUID->"3d761fa2-47d2-4333-9d68-ba2454de588e"],
Cell[2193, 65, 981, 26, 85, "Input",ExpressionUUID->"35da75ee-30ae-4ab5-bf63-3c3eb8f86dbc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3223, 97, 181, 3, 31, "Item",ExpressionUUID->"358a59a2-7782-4ed8-8ddb-f23aa8c8c2ee"],
Cell[3407, 102, 291, 4, 27, "Subitem",ExpressionUUID->"3fc84eae-616b-499d-8d39-976ee351acb8"],
Cell[3701, 108, 329, 6, 27, "Subitem",ExpressionUUID->"8d4a5b06-2c43-4405-9e3c-9b537c4ebabe"],
Cell[4033, 116, 334, 7, 27, "Subitem",ExpressionUUID->"7133aeb6-a7ee-4545-a8a5-0b262d42e1bf"],
Cell[CellGroupData[{
Cell[4392, 127, 326, 5, 27, "Subitem",ExpressionUUID->"d5fb2925-a0d7-429e-b3fe-da377a099967"],
Cell[4721, 134, 956, 25, 85, "Input",ExpressionUUID->"59df6d1a-6ad7-446b-a2d6-e9ac900af836"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5726, 165, 186, 3, 31, "Item",ExpressionUUID->"bace92d3-217a-46c0-a4fe-aef0c38b3770"],
Cell[CellGroupData[{
Cell[5937, 172, 349, 7, 28, "Input",ExpressionUUID->"9c755aed-f708-4d25-9bc6-3fb530e0c998"],
Cell[6289, 181, 228, 4, 32, "Output",ExpressionUUID->"88f3e95b-0e7b-4d2f-9e67-5e444a7e2ada"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6566, 191, 179, 3, 31, "Item",ExpressionUUID->"ef0a9e1e-b45e-48bd-b50c-9c6fca35c908"],
Cell[CellGroupData[{
Cell[6770, 198, 180, 2, 28, "Input",ExpressionUUID->"a145a633-4c23-45a5-a623-1df30e29a911"],
Cell[6953, 202, 532, 9, 51, "Output",ExpressionUUID->"b773c092-ce9e-4655-9a74-b7854990a2ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7522, 216, 186, 2, 28, "Input",ExpressionUUID->"9f2caa06-881e-4b09-8fa3-8e9abed8478c"],
Cell[7711, 220, 386, 7, 51, "Output",ExpressionUUID->"5ee30ca1-9e74-4433-a270-59ade9e6260b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8146, 233, 423, 10, 51, "Item",ExpressionUUID->"6feefc90-ceea-496b-a40b-7d2020ae310f"],
Cell[8572, 245, 425, 9, 28, "Input",ExpressionUUID->"bc46d934-a21d-46fa-9352-46c6ed131a54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9034, 259, 465, 9, 51, "Item",ExpressionUUID->"925a15a4-23e4-4b11-bfc9-be657728d3ac"],
Cell[CellGroupData[{
Cell[9524, 272, 604, 13, 66, "Input",ExpressionUUID->"c3d4ba26-11b6-4988-88db-59c388aba4a0"],
Cell[10131, 287, 64966, 1191, 535, "Output",ExpressionUUID->"ea45514b-f8e7-4a3c-9a06-0e9545cf225b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75146, 1484, 186, 3, 31, "Item",ExpressionUUID->"111d4669-6006-45a4-a5e2-cf4658260d75"],
Cell[75335, 1489, 615, 14, 85, "Input",ExpressionUUID->"41b4d4b7-a82f-4d8d-a6fb-51cd06a161f4"],
Cell[CellGroupData[{
Cell[75975, 1507, 337, 6, 28, "Input",ExpressionUUID->"796102aa-d8be-4cf7-8483-614289d94bf9"],
Cell[76315, 1515, 65017, 1193, 558, "Output",ExpressionUUID->"3b3fe33d-216a-4855-9f1c-dfeeb0ba96d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141369, 2713, 327, 7, 28, "Input",ExpressionUUID->"4036ae25-4512-4ac6-a3c1-a3ce61fbd492"],
Cell[141699, 2722, 207, 4, 32, "Output",ExpressionUUID->"35c8425b-4c28-4ba7-9ece-2a18f3ed7f0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141943, 2731, 221, 3, 28, "Input",ExpressionUUID->"59930bde-f18d-48e7-a6a6-f3b53b7bb23e"],
Cell[142167, 2736, 156, 2, 32, "Output",ExpressionUUID->"63ceff68-5368-4dde-bb4b-547d3484c3f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142360, 2743, 257, 5, 28, "Input",ExpressionUUID->"48f876e9-8955-41ba-82b1-42519c2a209c"],
Cell[142620, 2750, 104455, 1830, 555, "Output",ExpressionUUID->"e7e7a9cc-d04f-4f52-bd79-85f92c372778"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247112, 4585, 346, 6, 28, "Input",ExpressionUUID->"e216a0af-f360-4234-b14e-0f6e2f1dca53"],
Cell[247461, 4593, 16407, 349, 606, "Output",ExpressionUUID->"9a8a39c8-d9e5-42fc-91b5-b1412708cf71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263905, 4947, 1056, 29, 47, "Input",ExpressionUUID->"00807f32-1479-4a15-b48f-dfbefc48c753"],
Cell[264964, 4978, 874, 20, 32, "Output",ExpressionUUID->"a6455bde-412f-4137-8f7e-549c6a4001cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265875, 5003, 1203, 32, 47, "Input",ExpressionUUID->"eae2ed15-dda9-4ec3-b277-68a8795e52e4"],
Cell[267081, 5037, 30544, 560, 151, "Output",ExpressionUUID->"72816fe0-f198-4a7f-944f-f81a717621a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297662, 5602, 255, 5, 28, "Input",ExpressionUUID->"2f1af61d-5f87-45d1-8048-cd2c7589703c"],
Cell[297920, 5609, 140301, 2285, 555, "Output",ExpressionUUID->"bc89bb88-ea05-47cb-81c6-5de7deb64ca5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438258, 7899, 359, 6, 28, "Input",ExpressionUUID->"581a94d6-07c5-43a6-b320-ae7f751b8db5"],
Cell[438620, 7907, 131238, 4017, 228, "Output",ExpressionUUID->"4b9aa859-025a-405f-a29a-e62f59695ef5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[569895, 11929, 400, 6, 28, "Input",ExpressionUUID->"b587c583-9843-4e4c-8c74-c0f2d7c2753f"],
Cell[570298, 11937, 154, 2, 32, "Output",ExpressionUUID->"fc6df43e-5e17-456a-a61a-65205a0ab1ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570489, 11944, 400, 6, 28, "Input",ExpressionUUID->"14c4369c-8a7a-4b18-aaba-192d6d077238"],
Cell[570892, 11952, 151, 2, 32, "Output",ExpressionUUID->"e23f39ed-6f67-40a1-a1ed-670b753820a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571080, 11959, 255, 4, 28, "Input",ExpressionUUID->"7adafa4f-d54d-41fe-b047-9f29053bdbc7"],
Cell[571338, 11965, 35286, 1060, 235, "Output",ExpressionUUID->"e918a3dc-3b48-421a-b124-8190c6cef511"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606661, 13030, 263, 4, 28, "Input",ExpressionUUID->"2dc98f9a-814b-459d-9636-c239e059f427"],
Cell[606927, 13036, 36301, 1132, 235, "Output",ExpressionUUID->"4fa3ab72-d420-4983-b99f-499a11c63175"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643265, 14173, 315, 6, 28, "Input",ExpressionUUID->"39f7fac5-bf26-403a-8f92-e10f638181c7"],
Cell[643583, 14181, 11396, 341, 235, "Output",ExpressionUUID->"0562f943-db4b-494c-b646-9619a6c81398"]
}, Open  ]],
Cell[CellGroupData[{
Cell[655016, 14527, 334, 7, 28, "Input",ExpressionUUID->"cea46097-7d9d-4e25-a667-e6340579dccb"],
Cell[655353, 14536, 16738, 290, 380, "Output",ExpressionUUID->"93921f04-5be5-4062-9ee3-c39a58837b3d"]
}, Open  ]],
Cell[672106, 14829, 189, 3, 28, "Input",ExpressionUUID->"1ce486d6-218d-4c25-9860-cf5bce3dc034"],
Cell[CellGroupData[{
Cell[672320, 14836, 546, 11, 28, "Input",ExpressionUUID->"08220a6d-c6c3-4e7e-96d0-330a13af7127"],
Cell[672869, 14849, 16003, 279, 605, "Output",ExpressionUUID->"30d04c3d-4782-4510-8d91-db6b935ce121"]
}, Open  ]],
Cell[688887, 15131, 256, 5, 28, "Input",ExpressionUUID->"63f17194-8842-4921-9233-ed2e80edf885"],
Cell[CellGroupData[{
Cell[689168, 15140, 331, 8, 28, "Input",ExpressionUUID->"15d9b476-ef52-4617-a231-8cca12c549d2"],
Cell[689502, 15150, 15580, 272, 621, "Output",ExpressionUUID->"8c230399-04ae-4da4-a9d7-9a6405263494"]
}, Open  ]],
Cell[CellGroupData[{
Cell[705119, 15427, 535, 13, 28, "Input",ExpressionUUID->"d7b19406-d114-4eb5-a6e1-c9d69b166fc6"],
Cell[705657, 15442, 15619, 273, 331, "Output",ExpressionUUID->"1557ff89-4940-4a2d-8b28-7964537041cc"]
}, Open  ]],
Cell[721291, 15718, 451, 11, 28, "Input",ExpressionUUID->"7d05fd8e-bd43-443c-89a8-ecd9dbe21092"],
Cell[CellGroupData[{
Cell[721767, 15733, 579, 14, 47, "Input",ExpressionUUID->"f9e01a80-3c29-492b-8c9a-56acbea5ae04"],
Cell[722349, 15749, 434, 10, 23, "Message",ExpressionUUID->"522065cc-51ff-40c5-afc8-e2d653f15217"],
Cell[722786, 15761, 12317, 309, 214, "Output",ExpressionUUID->"b82846f5-042b-4eb6-ad26-21d547d072d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[735140, 16075, 305, 7, 28, "Input",ExpressionUUID->"c7a8951d-7326-4205-8d11-80671a7cab9f"],
Cell[735448, 16084, 417, 12, 32, "Output",ExpressionUUID->"fb7114b0-733a-4064-9c06-912ae807cd46"]
}, Open  ]],
Cell[735880, 16099, 328, 8, 28, "Input",ExpressionUUID->"c3a46c60-72f9-4c75-bc0a-216fe81bfc03"],
Cell[CellGroupData[{
Cell[736233, 16111, 431, 10, 28, "Input",ExpressionUUID->"b47dc00d-9385-4ad4-862a-952e3aa3a0cf"],
Cell[736667, 16123, 320, 7, 32, "Output",ExpressionUUID->"0b35ac86-0bff-4dfb-b4c2-7df3630c273c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[737024, 16135, 513, 13, 28, "Input",ExpressionUUID->"22906889-a8da-4262-a2a3-01efd09de720"],
Cell[737540, 16150, 27951, 473, 46, "Output",ExpressionUUID->"85831f6f-d696-4e92-b387-a4541a169fc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[765528, 16628, 606, 16, 47, "Input",ExpressionUUID->"ae62999c-12b4-439f-b84e-17da63c8ba6d"],
Cell[766137, 16646, 19060, 333, 367, "Output",ExpressionUUID->"b45d15aa-321d-408f-89c9-03eae0a2ec2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[785234, 16984, 293, 6, 28, "Input",ExpressionUUID->"c0d4ff39-e0d2-47d7-a72d-70a112965aa7"],
Cell[785530, 16992, 284, 7, 32, "Output",ExpressionUUID->"f1e10d2a-dc69-4e26-9075-151b91f1c9ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[785851, 17004, 295, 6, 28, "Input",ExpressionUUID->"571e50fd-e8fd-4ade-a808-571c4ff9adbf"],
Cell[786149, 17012, 45814, 849, 151, "Output",ExpressionUUID->"c40316f5-aa7a-4e81-8e98-3ffbc638cfc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[832000, 17866, 419, 9, 28, "Input",ExpressionUUID->"95b54dff-b837-4f16-9455-afc41606406d"],
Cell[832422, 17877, 392, 9, 32, "Output",ExpressionUUID->"e0c350b2-5dc8-4bd9-821a-035bb34b1c23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[832851, 17891, 459, 11, 28, "Input",ExpressionUUID->"fe355ec9-c0ab-46d1-a457-033690fe2a3e"],
Cell[833313, 17904, 22166, 388, 151, "Output",ExpressionUUID->"68a8fd52-378f-4cf1-afe1-966887694ccf"]
}, Open  ]],
Cell[855494, 18295, 220, 5, 28, "Input",ExpressionUUID->"61db5bf4-edeb-4278-be52-1274aaeebef2"],
Cell[CellGroupData[{
Cell[855739, 18304, 201, 3, 28, "Input",ExpressionUUID->"600d868c-1bb7-42a4-8193-0d4360c7067d"],
Cell[855943, 18309, 313, 6, 32, "Output",ExpressionUUID->"6c780dbd-bfd4-4471-928b-567f3df6526a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[856293, 18320, 299, 6, 28, "Input",ExpressionUUID->"d98a33b0-e3a5-4ac3-8af7-9d261901a3d1"],
Cell[856595, 18328, 49414, 911, 367, "Output",ExpressionUUID->"edd87709-a720-4e11-95b8-f394c1376b44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[906046, 19244, 213, 4, 28, "Input",ExpressionUUID->"aab129aa-4eed-42a1-b73d-1d6f3b44e4ea"],
Cell[906262, 19250, 156, 3, 32, "Output",ExpressionUUID->"23789a1b-a67b-4c0f-8f5e-97f48b703846"]
}, Open  ]],
Cell[CellGroupData[{
Cell[906455, 19258, 229, 5, 28, "Input",ExpressionUUID->"0389ae19-8d73-4427-bff4-fdd65aac21a9"],
Cell[906687, 19265, 37042, 670, 223, "Output",ExpressionUUID->"1d7d5f4d-66ce-4aa3-a4dc-1f69dcaffdff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[943766, 19940, 342, 8, 28, "Input",ExpressionUUID->"0a76b132-ae63-4f08-b458-fb047fa1148e"],
Cell[944111, 19950, 158, 3, 32, "Output",ExpressionUUID->"9f18c812-ce95-450e-b31b-53dd0396b4a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[944306, 19958, 178, 3, 28, "Input",ExpressionUUID->"77585fee-c271-4e1c-adec-285921914e47"],
Cell[944487, 19963, 33572, 644, 127, "Output",ExpressionUUID->"db932488-a142-4bb2-b16a-670ba848b7cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[978096, 20612, 209, 3, 28, "Input",ExpressionUUID->"8a0b01c0-dcbe-4516-af76-2ff6b8ec1b40"],
Cell[978308, 20617, 154, 2, 32, "Output",ExpressionUUID->"5eaed7dd-5f5d-429a-a5e3-90b386d8751f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[978523, 20626, 161, 3, 66, "Section",ExpressionUUID->"17b301d9-2b6e-4e4d-8f2f-f50e1e807b68"],
Cell[978687, 20631, 252, 6, 31, "Item",ExpressionUUID->"7ee0fe15-7486-427e-a77c-6257b9e7ec5a"],
Cell[978942, 20639, 50592, 922, 381, "Item",ExpressionUUID->"569ec0e4-2091-4d1a-b6c0-2a5bb4afea55"]
}, Open  ]]
}
]
*)

