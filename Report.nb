(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    315933,       6259]
NotebookOptionsPosition[    310842,       6173]
NotebookOutlinePosition[    311254,       6189]
CellTagsIndexPosition[    311211,       6186]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Statistical Report", "Title",
 CellChangeTimes->{{3.825681056541708*^9, 
  3.8256810593502436`*^9}},ExpressionUUID->"dc2a0d1b-8d55-4c34-9244-\
92b6f6c6171c"],

Cell["\<\
The data received included a total of 930,508 entries for invoices, 4,166 \
entries for items, and 50,000 revies in .dat files.

The invoice file contained information on Invoice id, date of invoice, item \
id (associated to the item sold), the id of the vendor, the name of the \
vendor, the id of the store, and store name, the address of the store, the \
city it was located, the zip code, the id of the county and its name, the \
number of bottles sold from the associated item.\
\>", "Text",
 CellChangeTimes->{{3.8256810956270895`*^9, 
  3.8256813307938433`*^9}},ExpressionUUID->"b88f761d-b22b-4fc3-9f57-\
b8f507275023"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomChoice", "[", "withPurchaseCost", "]"}]], "Input",
 CellChangeTimes->{{3.825291728980968*^9, 3.8252917519984536`*^9}, {
  3.8253666924954977`*^9, 3.8253667861752005`*^9}, {3.8253668820619383`*^9, 
  3.8253668993371177`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"5f6fee1f-f7e4-43ef-aae8-bcfdb503d9e0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Invoice_id" -> "S29535500042", "Date" -> "2015-12-09", "Item_id" -> 
       5346, "Vendor_id" -> 260, "Vendor_Name" -> "Inuyasha Brands", 
       "Store_id" -> 2621, "Store_Name" -> 
       "Hy-Vee Food Store #3 / Sioux City", "Address" -> "3301 GORDON DR", 
       "City_Name" -> "SIOUX CITY", "Zip_Code" -> 51105, "County_id" -> 97, 
       "County_Name" -> "Woodbury", "Bottles_Sold" -> 6, "Item_Description" -> 
       "Rikka's Vanilla Cream Soda", "Category" -> "Cream Soda", "Pack" -> 12,
        "Bottle_Volume_ml" -> 750., "Bottle_Cost" -> 3.47, 
       "Bottle_Retail_Price" -> 5.2, "Purchase_Cost" -> 31.200000000000003`], 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 20], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 20], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 20, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Invoice_id", 
                  Style[
                  "Invoice_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Invoice_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Invoice_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["S29535500042", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Invoice_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Date", 
                  Style[
                  "Date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Date"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Date"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["2015-12-09", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Item_id", 
                  Style[
                  "Item_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Item_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5346"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Vendor_id", 
                  Style[
                  "Vendor_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Vendor_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Vendor_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["260"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Vendor_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Vendor_Name", 
                  Style[
                  "Vendor_Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Vendor_Name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Vendor_Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Inuyasha Brands", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Vendor_Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Store_id", 
                  Style[
                  "Store_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Store_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Store_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2621"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Store_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Store_Name", 
                  Style[
                  "Store_Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Store_Name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Store_Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Hy-Vee Food Store #3 / Sioux City", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Store_Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{316.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Address", 
                  Style[
                  "Address", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Address"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Address"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["3301 GORDON DR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Address"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["City_Name", 
                  Style[
                  "City_Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["City_Name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["City_Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["SIOUX CITY", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["City_Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Zip_Code", 
                  Style[
                  "Zip_Code", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Zip_Code"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Zip_Code"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51105"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Zip_Code"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["County_id", 
                  Style[
                  "County_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["County_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["County_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["County_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["County_Name", 
                  Style[
                  "County_Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["County_Name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["County_Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Woodbury", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["County_Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottles_Sold", 
                  Style[
                  "Bottles_Sold", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bottles_Sold"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottles_Sold"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottles_Sold"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Item_Description", 
                  Style[
                  "Item_Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Item_Description"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_Description"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Rikka's Vanilla Cream Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{249.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Category", 
                  Style[
                  "Category", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Category"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Category"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Cream Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Category"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Pack", 
                  Style[
                  "Pack", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Pack"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Pack"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Pack"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Volume_ml", 
                  Style[
                  "Bottle_Volume_ml", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bottle_Volume_ml"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Volume_ml"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["750.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Volume_ml"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Cost", 
                  Style[
                  "Bottle_Cost", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bottle_Cost"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Cost"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Retail_Price", 
                  Style[
                  "Bottle_Retail_Price", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Bottle_Retail_Price"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Retail_Price"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Bottle_Retail_Price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Purchase_Cost", 
                  Style[
                  "Purchase_Cost", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Purchase_Cost"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Purchase_Cost"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Purchase_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{439., {255., 261.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{439., {255., 261.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.82529175235907*^9, {3.8253667212482567`*^9, 3.8253667572771864`*^9}, 
   3.825366787739571*^9, {3.82536684190457*^9, 3.8253668998437653`*^9}, 
   3.825624801462555*^9, 3.8256372379671354`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"114fe663-372f-45d3-b9b0-3235320d7cb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
A few observations on counting the numbers of elements in each column in the \
invoice file\
\>", "Item",
 CellChangeTimes->{{3.825681692737905*^9, 
  3.825681725879176*^9}},ExpressionUUID->"499f1ba1-e363-40a2-9ba5-\
247b85ab26d4"],

Cell["\<\
There seems to be a total of 1021 days when the purchases were done.\
\>", "Subitem",
 CellChangeTimes->{{3.8256816517114067`*^9, 
  3.8256816816052036`*^9}},ExpressionUUID->"7ac2f1e9-6ad3-4874-a6d5-\
fbc3f6aace72"],

Cell["\<\
Apparently one item was not sold at all, the Yummy Surstromming Juice (item \
id 103)\
\>", "Subitem",
 CellChangeTimes->{{3.8256816517114067`*^9, 3.825681674305009*^9}, {
  3.8256817355298815`*^9, 3.8256817820159426`*^9}, {3.8256823688153906`*^9, 
  3.8256824122608175`*^9}, {3.825682514970285*^9, 3.8256825149713163`*^9}, {
  3.825682795426772*^9, 3.825682795427823*^9}, {3.825683015528633*^9, 
  3.825683021379545*^9}},ExpressionUUID->"654bc648-90a5-4710-a05d-\
3a2effd92f01"],

Cell["There are 155 vendors", "Subitem",
 CellChangeTimes->{{3.8256816517114067`*^9, 3.825681674305009*^9}, {
  3.8256817355298815`*^9, 3.8256817820159426`*^9}, {3.8256823688153906`*^9, 
  3.8256824122608175`*^9}, {3.825682514970285*^9, 3.8256825149713163`*^9}, {
  3.825682796272517*^9, 
  3.825682804723728*^9}},ExpressionUUID->"16f7c545-09dd-4b05-854a-\
52c43068c829"],

Cell["\<\
There is a discrepancy in the number of store ids (102) and store names (98). \
This last one being the same as addresses (98)\
\>", "Subitem",
 CellChangeTimes->{{3.8256816517114067`*^9, 3.825681674305009*^9}, {
  3.8256817355298815`*^9, 3.8256817820159426`*^9}, {3.8256823688153906`*^9, 
  3.8256824122608175`*^9}, {3.8256825154739428`*^9, 3.825682521148891*^9}, {
  3.825682811497998*^9, 
  3.825682851568862*^9}},ExpressionUUID->"a7b00fb1-c3b2-46be-bb6a-\
b51f45b4ff99"],

Cell["\<\
The invoices come from two main cities, (Davenport and Sioux City)\
\>", "Subitem",
 CellChangeTimes->{{3.8256816517114067`*^9, 3.825681674305009*^9}, {
  3.8256817355298815`*^9, 3.8256817820159426`*^9}, {3.8256823688153906`*^9, 
  3.8256824122608175`*^9}, {3.8256825154739428`*^9, 3.825682521148891*^9}, {
  3.825682811497998*^9, 3.82568282639861*^9}, {3.8256828631792693`*^9, 
  3.8256828848777742`*^9}},ExpressionUUID->"7c7d2814-cd4f-4d01-885f-\
fa5950626785"],

Cell["Spread across 14 zip codes", "Subitem",
 CellChangeTimes->{{3.8256816517114067`*^9, 3.825681674305009*^9}, {
  3.8256817355298815`*^9, 3.8256817820159426`*^9}, {3.8256823688153906`*^9, 
  3.8256824122608175`*^9}, {3.8256825154739428`*^9, 3.825682521148891*^9}, {
  3.825682811497998*^9, 3.82568282639861*^9}, {3.8256828631792693`*^9, 
  3.8256829129436665`*^9}},ExpressionUUID->"1e6dd63c-bfac-4090-b529-\
ee736ff9f2ba"],

Cell["and two counties, (Scott and Woodbury)", "Subitem",
 CellChangeTimes->{{3.8256816517114067`*^9, 3.825681674305009*^9}, {
   3.8256817355298815`*^9, 3.8256817820159426`*^9}, {3.8256823688153906`*^9, 
   3.8256824122608175`*^9}, {3.8256825154739428`*^9, 3.825682521148891*^9}, {
   3.825682811497998*^9, 3.82568282639861*^9}, {3.8256828631792693`*^9, 
   3.8256829535243654`*^9}, 
   3.8257035754250517`*^9},ExpressionUUID->"6d6d5c5a-ff3a-49af-a0d9-\
850b7f70ebbd"]
}, Open  ]],

Cell["\<\
The main interesting column by itself in terms of numeric analysis is the one \
corresponding to bottles sold.\
\>", "Text",
 CellChangeTimes->{{3.8256830840438485`*^9, 3.825683109014065*^9}, {
  3.825683981775173*^9, 
  3.8256840012947173`*^9}},ExpressionUUID->"4be023f9-8515-43ca-9526-\
95e6de462d0a"],

Cell["\<\
On  approximately 9.87 bottles were sold per purchase on average\
\>", "Subitem",
 CellChangeTimes->{{3.825684004359008*^9, 3.825684047793174*^9}, {
  3.825703605440527*^9, 
  3.8257036071541486`*^9}},ExpressionUUID->"e43427d7-6762-4f33-865a-\
271a9326fbf2"],

Cell["\<\
The standard deviation for the number of bottles sold was approximately 22.49\
\>", "Subitem",
 CellChangeTimes->{{3.825684004359008*^9, 3.82568405462219*^9}, {
  3.8256841238620305`*^9, 
  3.825684141001917*^9}},ExpressionUUID->"e12eea68-c072-42ee-b093-\
930f94d4e7e5"],

Cell["\<\
There were 73 sales marked as having sold 0 bottles, which seems to be an \
error\
\>", "Subitem",
 CellChangeTimes->{{3.825684004359008*^9, 3.82568405462219*^9}, {
  3.8256841238620305`*^9, 
  3.8256841824289713`*^9}},ExpressionUUID->"b4636e7e-aa39-47c7-80f4-\
aaf418d3fe11"],

Cell["\<\
There is one sale of 2160 bottles of Yona\[CloseCurlyQuote]s Black Cherry \
soda in July 9 of 2012. That also seems like too much\
\>", "Subitem",
 CellChangeTimes->{{3.825684004359008*^9, 3.82568405462219*^9}, {
  3.8256841238620305`*^9, 3.825684189584773*^9}, {3.825684221498353*^9, 
  3.825684275235237*^9}},ExpressionUUID->"081f636f-06aa-4aa9-8bb3-\
4f629c007f91"],

Cell["\<\
In terms of dates, the following represents a Date list plot (timeseries \
plot) of the bottles sold each day\
\>", "Text",
 CellChangeTimes->{{3.825685523621066*^9, 3.8256855445405707`*^9}, {
  3.8256856106285534`*^9, 
  3.8256856145441484`*^9}},ExpressionUUID->"081e788b-aae8-478c-a4b1-\
f7bdc53ae95e"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxVm3ucF9Mbx0eSlaVBWEkmFSFMuaXCRGkpNZLa0mV0p62m+3af7vearrar
aXVZSU0JUTESQhi3rPsgWRUGySL8ft/PM5/v6zX+wPs1c87znOd2nnO+s7V7
Dm7fp5KiKP+cqiiZ//7/H7v4gSPN8X8zpxj//7e3l6z1yXB4jFwwP8Pu0o4J
B7MzHLxELnYyHP9Ajh7OsFa9U8JleD/aTa4/PcPq9+QiyDfOKUjYsjJsNyUH
CzKsHyLnYbx1dmfqC/luY7ID/YOe5PK5GXbO7JJwxawM+zeSDciPepCjftBv
Nrk/1h82epD6z8yw0i3L06DfDLLXH/ptI5cvgj26dE14P+SbU8nFkO9sIQcD
oF8ZOXch7DGpG+eHfO/Jbin54UdkDfZXlO4JH8f4oJTcGOPj98llsJ/2Dzno
Bf2u6EF7Q381JOuwv/EX2Z8K/epatOdg6NeWXLoU9viDnAN/urUf4voxX9Ca
rDwC/UaQczHer9WT/oD+UT45nAz9hpG9Qui3mqwuhj3u6pXwzhkZ1m2yNQn6
rSA78J+7j9wA9jMH9k7YhP+cR7MM/f2XyRbkR0fJPuznLenDfML48EVyMfRR
fiArA6HfeX1pP+gf7yLriGftMDkf+ptqP46H/k4Tcjn0N77NPke82Gf1T9jF
eO9msoX4Dx8il2G8W/VhyoP+wQ1kH/PF3ckW5GuzyAH0jxo+Qv9gvNqVHEr+
TydriH/bJx+CfL3zAPof460pZB3j3acGpMYHH5P3wf6OU8j4h/38TWRN8v9D
cjAE+v2XfX8J9LtyIPWHv5X3B6b8p58kOxhvXT4o4Q7LYI93yf3nZdj8k1wE
+zl1BlM+8te/l7wE8u0TZBv55mk29YP+4T1kxYZ+I8j7sf7gkiGMB8n/Vlme
DP2GkiPkn7mKrMB/asuh3C+wXmMwOcR89nJyNBb6vUIuWgH9fiQ7rWGfwmGM
H9jTXUZWoE98hCz5pJ0/nPks9WAxuQz6RHuyz2V/KSdHyCfj3BHMV6kHu8ga
3te/I0s9s6qNZD3rDf1uIdeHP8xvyGXQ18kdRf/CH/5NZA/+jCxyA8j3zihi
/Eo9uJ4s9V3pTg6HQr+Z5AqpB/roVPxoD5IlPsxp5KQebCXfgHgwCsawHs3J
sD2ZLPnkbSY7sF94kLwZ8t2JY1k/ID94glwf4+MPyBr01/4lr5N6sGEc9cN6
1ffIBdDf+JvsYrxdbzz1L4Z+7cjxhAxbFeQA+riXTaA9kQ9BG/Ju+M/5nawh
H/1LJ1IfqQd3kyPEnzqc3Az2C2s6tI/U71bkAozXh5A12M9amX2Oeqa1mMT8
FH8NIjvYj53iLKMe+3vJOyDfHjCZ9Rjx6y0l54DDl8jOIOh3hCz5o1efklpf
sIgs+3G8m1wq8fV99n3UN/OcqQnPhT+dpmSlB+z1AjkP/Z9xiGzK/nP2NMYr
/OM1Jn+O+ayvp6XW4545nfs37BvcOD2lf9yDXBnj/ZwZjGfpPxuRrYnQrxs5
hnxjBrmr1Ad9JuNZ6kMXsuxX1lSy9CvuFnKh1IdOsxi/iG9nErkU/vafnJXS
P/qIvBn+UZXZXK/U26vI1mTYawJZ+t2wlFyM8fH6ORyP/NZCcinWY/5FdrBf
OnXncr3Yr4y3yZH464+5qfV7teelxoetyTbku8fJPuQHtebTHlhPnE+W/Uob
Rt4J+0UXL2B+oP9W7yI3xnyGTQ6HQb8V5LrYb7x92fHivztd6gf57qPkCOOD
l7PPV0K/o+Q89KvOIwtT/oxeJFt9od8P5FypDwsXMd5RX5TdZOm/9MNkA/li
qYu5n7iwx/OLU/Y3vyXnoF9zzlpC+XJeuJlcU+pDRJb92qu6NLW/hTcsTemv
9CCbkB+cvoz1VOpBQ3Ip/K91JSuQb04nr8N49bpHEy6H/kZncgXms6eQpd/2
niKr8L/VsZj+lfx3yPsl/zeRbewP8YfkIsn/8ctT8RJtzDLWr75P9lBfjZPk
/ZL/61fQPnhff5dsYD3Wn9nnyD+3zkrWE9jfPEAugv2dE+R8yX9tFeVL/t9D
9rF+7zeynDfCS1YzPyZDv3yyg/5CH0pO+oMaaxi/kK+1JPvYX8zB5AD1y1lO
XiX9wR2PcT3SHxSS8yDfW5Z9jvwNA3II/d2HPdoT8oPFXkr/eA9Zwf6klZOb
Sf67axn/6NfVXWQP8W98RzZgP7taCes/xus7ybacF74h58l9Qe7jqfwJbiJL
/jhfkQO5LzhjHdc3HvpdT5bzttqdPFPyv8p6MuynNCRLv6Q/SJb93ZpGlv5E
u3YD/Yn1mwXk/bCfM5kcwH7+ZrIN/9sPbKT9oL83kSz9UvgE2UD+KR+SZf8K
xpUyf7F/xhvI9WF/7T1yAPubf5Md1H/jnSfI8L9dQZb88y7bRPnSX7YhN5b9
/y1yHvLd/Z0cjYN+lz5J+2N8fDd5uOT/r2QL9TuquZn5BPuprcgR7GcMIedI
/VxJLkK8eK+SrRGwV42nuD45r7cgr5L7lr3Z5y2h3zGyciPs1XwL5cO+zgCy
9Fv+UrLkV/QSuY30v/230h9yP7WILP2nsoeswD/69+R87O/xAp/1QPq5Q2S3
BPZ4bhvjaRTs8TXZQPx4Z25P+AUvw+6XZKMI8zd6mvmE+aLTdtD+mM/oQt7x
OPS75hk+x37sTiIX4LnT4Vn6G/NHpeR4LdY/9jnuHyMxX0ieAPna4zu5Xsh3
/iC3WI/1HH+e8Twa9rv7Bcpfl+HgF3IwHPPdtSvhq7B+9aLdKf3sgeTekG8Z
eyhf+o0l5ON47vd7MeVvdTd5DeQrC15K+cP6lhyI/c8KGG8tMP/NZLmfNZ8l
B7CPX/XlhLdAvvcFOcZ+qjTay3jA/HHlVzg/npudydthf6PBPq5vDOZzyJ+L
fzaRIzlP3/8q4xPxF28kl8Hf0ZjX6E/Y23iXfBeee3Vepz6YTy8hz4W+zhv7
uR6Jl0veSLhkA/SJyRrsqVz8JvVRMF9L8q+Qp+W9xfdhP6eQvGIj7LmMrORB
XkC2cB9q336A9oc9lBezLPlZTnax3qDv2wm/g/hU57/D+VH/7G/IzyI+rGfe
TY8/I0z4TcjzPycreK42fC/hDrCXUvn9hHU8twrIX5Zk2Lz6A46X+JlIvgfP
vfYfcr0SPxvJHuwXj/6I82O8+Q65reR3BTnonmFj7UHKg3+838n5j2XY3f8x
/QF945pljBfxV6uylD+jn8k28s9o8UnCudDfHkRW8jOsX/gp7Yl6YDUne6h/
7gDyGIm32z6jfDyPFpF3Qt+wz+ccL/XpBbIF+dYhslIX+s/7gvmC9Tlfk3X4
297xJest9Atzvkr4MOYLPiN7WK+mR9QP8aCe+jXrLe7r7E7kRhJPV31DfeBP
t0OWH8T8E8g1YW//vm+pD9anbiD/CvsYIVnqkzL6EPMT+6n1NjkH87l/kJX4
9oy82t9x/s6Qd5x8Avp6rx+mfXC+V2p+n3AN2CP+iSznefPO8oRnY7wzsDwl
z7jgB8rDfN4jZFf0u/UI40nOHwvJ7ZGv5mGyI/m24CjrD/TR5x6j/fHcjcg/
Ybzz9I8cj/iPTv8pJT/8lCz7kX7dz6wX8K9WKU7tR05H8msSP1f+korvcDx5
HOpjYP6ayndtPfmgxE/Rb4wnjLcPkCPpT06Q5fdC67HjCYfQJ/iNvBv5EV/y
O/03BfLyyR7OJ1FMVppC/sUnEt6P8UZLsof9TvmJrEn+3vEH1yf1o5Bsop83
z69I7Rf+w+SauE+IFpMDvO81+5P7Hd4P+5KDTpC/kBw+mmF9F9lFPMW9/krp
Z+4kL5N68g25WM47c/6mveEP7yvyydWQf8ZJzg/93O1kye+4yj8J78N6tIZk
OQ9En5B9zG9c+y/Hw152AbkI+uin/Mf3EZ/uA+R9qzIcTCTnyH1mfeVoYh+J
53HkjtI/bSS70Md4jyy/R4TtTknYaQX568jFWL/1DtnD/qiNqpSwgvmct8hr
IM//nexgPdGlp1I/uW9eQ1ZwH+TtJ4ewZ/Bq5YRjsFbjtIT7lmTYbEGOJ2N9
P5Ll/GA3r5LwTOSTN4CsyO8P1U/nePRTQX9yueyni8hyHtT2kE3Zn5vmJLwB
6436kE3kl32IbGF+pdcZCS/B/Po8stz3mbOr0r6IV/9L8gGZP+fMhH2pl9vI
Bvaf8DOyivUpVXIpD/dFup6b8pfVhezA/9qpZ/H5HdDnGvJmxJvT6ayUPwzl
bPoT+el1IK+TfJlATvbzK6qRYb94LLkQ69M2kFXEV9RW5fpE3uPkdZIvb5Nd
xL8+8hy+D3u7b5KPQZ/gODlP7otXn0t7irxfyGV4X615XsI7Eb/hvvNS69Uv
qp5wI+hv3UmukPP7MbLEl2Ocn3AzzO8/Qlbxvn3eBWS5P+hH1qV/XESW83LQ
5MKUfbQF5EM4f5rPk2O5j+uZx/XKefNZ8kzY04vIHvLTmnUR7YvxwRfk3nJe
Ob1GwrbUcz/L0p+cdjHzQfaP68jyPYlSRvZgH6tBzYRXId7cjmQL9jD/I6si
7/5LGJ/I72g8WX4v9C6vRfvhfWUsOQf66OtrpfSJ772U7yMezBLyOPjLOUD2
Mb8xQqP+0j+/QR4q57HfyPL7sVKrNuNHvr+IyVsk/i++jPNLvXyFLL/XGnl1
6O81GbbvIMv5Uz9K1iT+b6+b8D6sN3iYLN+jOOfWS8Vz1JdcJv3HQrIu99m3
XJ7ylz6f3FfifydZ7q/db8gaztvmnCvoT7HnM+Ry+b5lZn3Gq/RLn5PHlMB+
p1/J+eT30K1kOa9pla9KuC7Wa15LlnqpfkyWfs+++uqEW0Af7wFy8r3Kv2SJ
h6B9A64X9onHkWO879e7hvPDPuoYcp7E/zpy48lYz73Xcn6J/7XkqfCv+xZZ
+i1z+HXcr6GPv58s9SH6lWzgubdSp31k/4nJw/G+XqMh7Qn9471kqYfmhY3o
H+jvNCdrcr8+gCy/b3i3XU/7S/3vT5bfU9xzbiBLvvUhR1iv5pKlfkeNb0zt
n8Y8cg7qg/0cOZT4t27i+4hndwc5lvj/kuzB/s6Mm1P7bfQZua3Ef5XGXC/e
D7eQ5byhn3pLwovwvnUN2UG8aQfJOuqzc1UT5hf08TuQfdQ3+x+y3I+F9zVN
uCb6I2Uc2ZL+qG4zzo/3tdHkvdDHfLxZSn+1za2UB3vZHnmnxP+bZA36W8Nu
4/si73VyKc438S9k6b+0mrcz3nBf5K8gH5f+fh9Zft9QfyY7bbG+vQYZ9cO6
oDn3E8hzDXJjOV/+QI7Rj/u33sH9RvaDfuQKyPPUO1PrV/qQk35sATmS7x+f
JxtyH9mzRcJN8L45l1yGehRVbcn1Qx+jB1m+x7FnkQ9JP/o0eSb0c6fflbB8
bxZ/SpZ6o53Wivs/3o+eIkt8GZXyOR/ixW5Alv7A60gOukHelXdT/+UZDu4n
S3/nnCTL9x6ReQ/nl/PEWHKI/AzrtE7Fs15EdhDvVglZvsfUWrdJ5YvzGPkO
uU97gxxIvA69l+9Dv/A1so36ofySZemPlrdl/ZLvL38iF+J9M68d54e/1Jez
DH3s803Gm+TH7WQd9rfKybL/Bs3uS7hDSYbjvmQ5P/jV2qf2E7U3ubrsD/PJ
0t8pN9/P9YKtOeTL5T76GbL012b3Dqn65m8n5yIeos/J0k950x5I7S/Kp+Qq
sL9euSPjQc7Tm8manOdP6cT1yv5wNdmT+P+wU8o+Xv2ChPvD/mF7suy37t9k
Tfbbep2ZTzdAfjtyA9kvxpBtrDe6rEvCcj43RpFPYD32WrIi5+t7HuR4xJO7
hnwE9g32kyM53w7pSnvIef7Vril/qDFZ6otRoxvl4X40LCYn5/sfya9J/3Rh
d8Yf8sNtTpbf35zqPRjPcr6+jRzK+eF7suzPYVMrYbn/UfqS90u8nv0Q/SX7
VS9yA9k/5mWfw77qTT25Puw3hkV2TMifTT4g54kd5ByMt7r1on8gL9hGtksy
HH9GroD+WpXeXA/6NfUTsir3naf2SflT2UyW+mIpfZm/0k9dRZZ6G3QgB+2x
3g/IEn/+Ff3of4yP7iPL/af3F7mx5E+7/pwf7+ujyTnQJ679cKo+aW3ISn3I
H0muK/dTHlnO88bdjzBfYH9vNbmZ5NPr5Dz5Ps8ewPml39pHLpL8+ZnsQr/o
0ULu7xK/x8iu9FsXDOR+IvH7Eln6Bfe8QcwPuZ+6lSz7o7aILN8jRE0GJ9xT
8qcPWb4fC8+yuR75vqgnWe6PrbnkddiP3Wezz5Fv2o1DGK/oB80eZEWDfWeR
T8Ie/tPkYDLW23Voan2hT16H87XyGVnqu37aMOZDB6x/Cln6L62MXCjnk0rD
uT78fq4+SZb8tP8j75D7sStHML7xe394/4i0Pd4nS70OLh/JeML6YnNkan3a
2JEpe/l/kqW+qW1HpeLFKCKXyfdFJaNS45XaRazvmN8aQbZkv3qMrCN+gjfI
Sg7skT+azxGP/ipyb9greo1syfdWg8cwPyX/9pFj9Iv6T+RS3H/Fy8am6oX2
MjmAv8yjZEO+f3txHOur9Ofl41L29s4dn/BIrC9sRg7hT6Xf+NT77ndk+f49
qDaB+uP7kPgWcn/p93qTdfn+Ondiyj/GQ+RlJdBvDlnyWb/B4frle6ruZAd/
/+POJN+G8cF2chG+d3AenMT6L/VhK1l+71E/nZTyl/7xZK5H+r1TpqT00TaR
pb44/5J3I779+lNT9TlqT1aqZ9j7mxxiPwjrTaO/5HxkkmM8DyrI8j2Rdu90
zod+zhxFlu9dnbXTU/5StRkcj/7WHk5WJR/XkKWfslrN5PrlvLSSrEFe/CpZ
6rk/aBbth3quvkI2UD+NH8nS39gXzk7ppywjS/+vB+nn1hFyBeS71edQPuqD
uYcs+5l/zlz6G/KjpmTpP71DZFO+37hlXsIH5T6h17yUPeIz5/N96U+t+Sn7
O7PJcr9oXL+A65f9bQZ5kOTXNrL0D24Xlyzfw2whH4B/tE/ItvRrkxbyfekP
D5JLpD9UFtFfcn55giz3se4/ZPk9P7hicSpenZCswh9R3SUJF8j+1o4s/Xr4
x5KUPfU2SxMeh/OyNZIs98/apcs4Xs5nw8i15Ly0mpwv+8ddjzIf5D5hBdmS
89Kr5DKpxwOLqb/ky17ycehvHiPL933q0uXcXyU/fiDLfaB33grmj9yf30q2
5Hvuw+Tk92d1JeuL3K81Icv3qFofsnz/4X9L7i/6NF6VcHfpD3uS5fcY5czV
lC/3bT3ITSDPnUWW74PNRmsoT+6bp5MrJD98snzv5nV+jOtF/6hsIW8qybBe
RpZ+xKrkMR7l922HLPfJ5kfkLvL7+X9k6TeM0rX0r9z3nSSvk/vny0uoL953
3yV78vvwn2TZf+M6jycs/ZDWliz7ZXSCLL8fGK3XJSznY3sEWfZ3vdZ61kP5
/XIoWYF+wSpycv5vuYHPpR4NzjLiI1pOvknyaR+5HP4NCzfyfbmfe5lcKL9f
HiXH0n8vKU3VD6ecXFXOV+c+wXyA/exdZBf2DqttSviw/D7ThFwf9SzOfTKl
v3YzOV/uHx4iSz125mTfr4n1Vd3M+SSfu5OLMd6bSTahj9XwKdpf9r9p5Fzp
/7aS+8v+U7Al4QC/l6pPkSvDXsbHZEP6K2cr80fi90PyXunv/iVLvpobfdYL
+d7yb3Kx3M/V28b147lqkqWf9N4hJ/dLFdtS9lTqbE+4gew/95KT+7Pft6fs
Y97zdMLt5Xw1nCz3x8YlOxiP8r1FK7Lkhzck+1zOWyvJZViv2+IZ7h+QFxeT
K0k/9wpZ+udowLOcX+7vAvI4+X7kCFnOw1715/h+O6x3MVnui6092ec69Pme
bKOeOS/spD9lfzr7ecZ7Cex/C9mS/rfX8yl/hF+T5XsKJfeFlD/0m8hz5T7c
IpdjPnd2+n3tjF0p/zrdyPJ9mT+DLH+/buu7U/UunEp+E/orW8mN5e9FPyEX
SDxM2pOWv5ks32OZB8mW/D6svEh/tzT+BygOZTY=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.5345376*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.4712928*^9, 
        FormBox[
         StyleBox["\"2010\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{601.5, Automatic},
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Purchases per day\"", TraditionalForm],
  PlotRange->{{3.5345376*^9, 3.7234944*^9}, {0, 3021.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{
  3.825291807113059*^9, 3.825318736315984*^9, 3.825669671257761*^9, {
   3.825685566218124*^9, 3.8256855870540648`*^9}, 3.8256856395952473`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"511b14d5-4148-471c-b008-274cb571d922"],

Cell["\<\
The above shows an interesting increase mid 2013 and a subsequent decrease \
mid 2014\
\>", "Text",
 CellChangeTimes->{{3.8256856533718576`*^9, 
  3.825685672630701*^9}},ExpressionUUID->"6bb82be6-adab-4d6c-8577-\
406193eb393e"],

Cell["\<\
We can further use a moving average on the data to remove some noise and see \
larger sclae trends\
\>", "Text",
 CellChangeTimes->{{3.825685724444718*^9, 
  3.825685750700568*^9}},ExpressionUUID->"8d488787-c7f8-4267-8e4c-\
f08792e3b537"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxVW3dY00nXjb1rVOyosXfF3jXYu7FjgwgKIpbYsaBRURAEIvYee8fYG2h0
sbtudte+lqjYwBJ71w/vOfM9b/KPz3nuzO33zp35YRn/MT2HZdRoNM5MGs3v
f9N/puV9Ur3/vJz+q7xAn46tp9Nxn9+//FG/seOFwj0EW5b0TfUO/P07Ldh+
si/3L478jV3P03H+379ignUe/VK9V65I/70U7ExMxzt3pP/uzf+NtU/T8b27
6b8KgvX5fbj/uaw3NfXh/s0Rv7FXSjqeH5n+CxVszNuf+vyU9ZZG/alvbcF2
//6UN1qwOdcA4rwiz1Y/HYsnBgk/p98A2mOdJ/pFKfomoTvqDEz1Tjye/vsl
WDN4IOlH5op+EQOp73bBxr3puO7v30zhpxswKNW77O+ff/hvbAhXuLhgc8Ig
2t9YsO3mIOoTLvxMswanerf5/TswR+K1c7Dy72zR79pg7s8hdI3Gl/rphZ99
my/XPxDs+seX/hstWPfDl/rekP2GSn6Uf1XoWocf+e8WrP/qR382EWwqbyT/
joKt3Yy076dg4ycj/dda7LGUGcL4dxRs7zyE/AoIdk0cQv1eCbaV8qc95wU7
O/iT/0rB2vH+Sn/B+jUKNxX/a9oFkP8/gr1MAdT3AuK1Mh1P/v3LJHRLcgD5
HxNsGDWU6+8KNi8bynzrL9h2aij1fSvYmTaU/hos+WJdPIzr1wjdcWIY9fkq
8jXPhzG+vaFfwUDiRrLfdVxhT+TTk0DKw36DNoj8V0C/JkHU/4Rg/aMgxtMu
2JRnOO2pItjacDjr6zz0GzKc61fDHzmDGa/aoo+9XjDlTRG6yzeY/isC/eYr
egb4o/YIxj8X6muQwpOh3zyFp0E/2wja+wL+6B/C+NsEG+eE0P680G93CPWb
L9h+I4T7w+EP80jaNxTx2jGS9i2HfldHcv1N5NOvdPz6VfpvHPSrMor8ZyGf
/hlF+36g/r+PYjxjoV/F0dSvlfhL99do5sMwwYYvoyn/MvQrN4b2dxe6resY
0j8LNn0cw3gNRrx0JsrPIf3N0clEef7Qb6KJ9oxEvEqOpT07kE/tx1JeCeg3
biz5hSHfV4+lv7ILXdt2HPWZLlg/Zhzj8QzxWjGO+rVFvv8xjvnwGv3zpcLl
0L9Hjuf+ZoItS8eT/3fkU6rCicinQhOojx3+WTSB9nZD/05S+BDy69kE2puK
+BWYqPon+vfxibQ3GPn1eCL1H4X45ZtEfvOQX40nMb6TEL+Hir4S8cs9mfFt
i/xqMJn6JqNfGSfT/vuCrTlCqU8zwY66oeQPeRrfUBV/5FdkKPnXQPy8pjB+
G+GfgVOoP+M3dwr355b15j1T6I8CiJ/PVObzXsRvtsIdkV+7FEZ9O65PJT8H
/DFzGvU5g/69fRrXox+6/p1GfR4LXfdzGvvxKtTblun0jwbx+ns6149FvL5N
J/+J0K9CGP3XEPnVPYz2IB7Gz2GM53PoV3YG88uJftBlBv01Bv74MIPyYhCv
0jMpLwn6dZxJea2h34SZ7Keob4en2S2fNe3NtO8+8mmsmflxD/m0ysz4+qPe
2sxi/JMRr9GzKJ/9e/ks6lsJ+p2eRX2LoR+EzKa/L8AfS2a7nSeOk7OpH/qt
JlWtD8M85TGH/B8hfvFzKH8J4pc4h/JOIX5P59C+f6Fv/nDSEX9z03C3fNAe
Cyf/aohniqJfQDzzzqX99ZBvjea69UvjA0VHf7Tkmkd7zmGeqT+P9ETMC37z
KO8k5oXsEcQNUX91Imj/B8wzgyOYz16YFyIimD8vhZ5ecOr8Eew1IJL2x2Ge
CY8k/3WCLQmR5LcJ53G/+YxHWfhn1nzuf4f5bqeixwp2XpvPfF0N/2miuL4W
9KsapeYT9I8ZUdRvgex3bIsivxPwx+Zo7l+E+Dmiyd8H+n2NZjy8oV/5BcQ4
P/V/LmB9Zka8Pik8EvEqE0P+aci3zjGM31TE630M5aF/20vFqvMS+dUhlv6L
Rv8aH6vqFf28RBz5tZDzTdsujvL6oX+Z4tz6v2llHPX/U9Zbk+OYnzlk3vdq
beH+CNwXllnYP0rhvnDKQn2Oy3pXmoX6eMp9xzxiIfkvFLrzxEL6Q4v7zPOF
5JcV96eF8YxXLcGaxHjmhwn6PImnvHMi36hdRHs6CV13dJGaZwUbHi2i/LG4
z+RZTLxesK3hYtp7FPcn52Lyby/7rTmXqPzDeVxviYoH+pffEtpjhD+yLVXn
O+53tZdSv3j0r0FLyX8/zsN5S9kfRyBetZbR3kaC9f0VxnxpmrNM9Sf0r93L
mL8XUf99l9M+3P8s5uUqHsinHctpb33k09Xl1Kcu5oOwFep8RT/fuoL7c6Of
/7OC/Oujvr4rfBDz+OaV9Fdd9PO/Vip/oP6/rKQ91XGfKbeK9FDU1+VVKr/Q
zz8qXBP9Sbea/sb57+y0mvb0QX29W039MX87Sq7h+gnQr8Marl+D+WCcwjg/
XMXXMh4JqK+2a2kf1hvGrFXnOep/xVr67ynqv9U69sseiNfIdYzXO/Sfpeto
rwf0s69jfpRFvIKtzK8qmD8XWbnehf6UZFXzCPR7ZlXnF+JlWU/7O2D+PL6e
8uOg3+P1bv4x5dug3gsQryMbaH8D5NPDDW73JUvujW7xsTfYSHszYD64v5H8
KyOfcmwi/78Rr7qbqG9x5JPvJrf5yJF1s3pvQH3V3ux2PnkNVBjzoHHuZtVP
4Y+aW7gf56HBR+GcyKfZW1R/wXywawv9XRL9sM9W8g9Bfc3cyvWf0K+3b2U+
YP7TXFXrUY/26dvon76YN7dsY/5hHtX9vY37a2Me+LaN/CuhP1/ZTv8ZoM/n
7Vz/Aflddgft/QR/ddlBeS0Qr0s7KK8NzpMPO1Q+IV6ldzKf8F7j6rjTLR9s
b3e65aPTcxfte43ztf0udb4in8buYvxfIp9WKfo36Html3qvgb+K7yYejXi2
2U19h0O/07vV+Yd8f7Gb9vVE/Xkn0F8tUX8hCVxvx3ywJIH8LJgPTiao9x7U
3/A9pKfg/I/fQ//UQH9I2sN8TIF+T/eo+wP8FWej/L8QvxQb95+CPw7vVecL
/PFgL/2xH/Jz7VPnC87Te/uYnxlxXtTZT/m94f8sB9Q8i/NgwAHKqyDno1eN
g1zfJlr4zTqozn95nzT3PkR/nxXs3HaI/hwRI/ZPO0x+SbHCz3GY9n0TrNt4
hHhZnPD7dIT8vRaKPe+P0t7ui8R/HY9x/VPB9jfH1PujYF2744yX12LJp2KJ
pPsKNo1KpL+eCzbqkxi/gUuE3+Ik2hMu2BZ0gva0Ar/EE9QnTOiauJPU1xYv
/B6dVO+Por8lj53yDeDf0K7uB2Kv4ZCi6yEv5ynyfyP8rHdPcX1dka+pc5r6
nJD9rsx/kN5c7Df0/4P6N5L1+urJpJcWbDUn0/6GIs+xI5n6vhB5ll5n6I9s
ws+19Qz9XUj2O6eepfyfsl7/11nWd25Zby13jvq/E7rXhnPMn7eCzRfOk98H
wc6SF8gP8XK4LjBfXov/NCUukv9Z8Gt7Ub1HCNYVvUR7y4P/SIUNoo9t6SXu
/yn8nPZL6j1d6KaWl7neE/l14jL1f2QRec8UPbfstwf+yXopJ/K0sVfoz4GC
TQ+v0H+tkQ8H/1Lv9YLtORy0t6pg2x0H/dEZ/Gr/Tf6NoU/mf7gf8TX6KNwD
8a72L+u7G+ydqbAP4tHzKuM/EPy2XuX+CPG3a8o16hMIfleuUf+5Qjd/vkZ/
dBW6fv11+nM4+H+4zvyFfMv5G4xPqNjj8ryp6lX46drfpLzest75+ib9h/rW
t7mlzmfU62iFKyL+RW7TP03hX+/b1Gc68jfkNuX9K/zMLf4j/wDkW/x/lH9b
sGPYHdobBP7H7nD9Mvg75Q75ZZP462LuUt5nyQ/zg7tcX0bopgP36C/E35H9
Pv3fEPH/7766HyF/vZyU3x3xz/SA9rYDv34PyD9IsLHqQ+ZjKZFv6f3Qbb19
xkPKby7Y1uMR7fUQrN2icE3Ur+MR6z8n6m1KCvUpA//+mUJ/l4R/P6UwvoUh
r8xj5lN70cf2/jHtHYX+fe6Jeh+Ufq/xfEr9AmS969VTynsn2ND6GdefgH9H
PaN9maFv4efUNyv644jn5Id8sDRPZbxKI/8Wpqr3esGGJ6mU10/iq41Lo39r
CPZa8ILx6Yt8dr6gvycgn/a/VO/hyN9sryhvpmDH7Vfq+xDyqdZr4iicTxld
1D8c/Pq66K8Y9KMqb+jPfOjPYW+o3y+pB7vhLfX5DH6b33J9NpxPoe+I86B+
Lr/j+jvo/x/fUd8cOP/Wvac/8oH/u/f0VymR7yr5gf7Iifrt8EHFC/a7Pqj7
C/K3xEfVL2W/vu1H2gt9Na8+Mv/qIL9afaJ9neHvkZ+oXx70o0Kf6b/ryOfg
z5SP/u1c9Jn8XiHfmn2hPnMFOwK/UP9A5PfCL9RvumCv418ory7yMeAr6ZmR
j0e+Mv80yMeHXymvrGB99Df6q43kt/X+N8q/K+ezI8d38lsq85Bl33fVb2Ve
cmX9Qfl+gnW1f3B/DOapWz9YD40E62v+VPcPwSafn1xfQeYzrwy/mE+b8X24
zy/Kqyjr7TN/UZ94vJ9U1qSB7i/YOT0dS7w8Zb12azqWfC8C+X+nY7xHC3Z0
z5DGfoN5cVM6lniWE7rxSjrGe6TQdZMzpvF7FuRfysj9OWS97UM6xn0W+pTO
xPXJgk1rM1Hfr4Kt59OxuD+72G8/k5n7e4m/dcWzKPsEG9oofELWa19mob5j
hG7yzpoG/+wQbA3JSvuPCzZ6ZOP+mvDn8GyU7yPxd8Vn4/pakJ+UjiVeV4Ru
a5pd2SfYOSw77Vsu+WJKyU7/HxGsCchBem/BXjEK78L8GJUzDfndBPzv5aR+
r4TuzJ6L6zsgP/fmovyniN9/ubg/Fv05a27KN4v+Xl65qf9Z2D8gHeM9FfZl
ykP768G/NfKQ/0bM8/0UriZ0vSYv82E79Omdl/Isgh0z8nK9H+qlUr409LOO
gl3T8jH/skD+lnzUP6tgZzct8+kW8nWjlvqvRb38qaX+DsFek/LTPzqRb7mY
n/GbLPzs7/OT32bB5jUFmC9PJX+cbwpQ33KyX+tZkPTS8G9yQcpvgvos5kF9
j6E+Wntw/SPU/wsP6vcM9yt9Ido7UfbbRhRS9SbYVLAw5e+HvKDC5H9PsCa+
MPe/RL42KUJ57SEvrgjpXRG/o4qOetf6F2V8e4t9pkNFqd9n1IezKP1XXejG
+cVYPw8h724xxncb6iNbccY/BvlqK05+C+C/LCXor3GC9bVKkP9n1MPNEuTf
DfKqeyr/Cd3S15P2txK64Zcn62Ep5PUqSXusqL+wkvRnGPKxYin6Ixj1ME1h
5KvX5lLcPwj2dC2t+gfkbShNfY2CzZdLc/9j5ONEHfFCyLugo3+gj+Odjv44
gPiVKsP8bwx5rjLcPwr35xJl6c81sOePsrR3KvxXtBz1K4H+0qoc/fcR9qSV
o76Z4b+W5Un/KnR7cHnq0wb1XKAC13uhvwRWIP9pch5qF1ag/+fh/Gtckfo2
Rv+Krcj6WifYeKQi9/uh/h5WZD4XgT+jK5EeDfkHK5H/Q/TryMpp/3v+Ou5U
Jv0t8iVbFcZ3CezZU4XyQ+C/zFXp/9w472tWpb05Yc+NqtT/B/xXrRr9m13o
1j7VKD+jYOPPaszf67Le3rM65V/DfX16dfIvinm5Qg3uxzyvnVqD9mfBfLGp
hupvgjVdazI+qfDf+prMj5O4D1yqyfWgGybUIn/ML7bztSj/PeL3thbtOyrY
usqL/j4J/7kU/hv34eK1uX437Dldm/47D3lF6qh+i3h5K7xBsC2kDvXdCP+1
qEt6imDH8LqkD0E+5q9HefUhb1g9rg+U9TqLoleBPY3qU9+CgvUx9emvn+hf
h+uTP9Z7GRvQP8+QfwcaMF7Bwt9+rwHj/Rb1HNGQ/u0pdOd/Dbl/OOKXtRH9
Wx35n6Aw+Htlakz9nyBfajRW54Gs111vzPzMBP9VbcJ8+IX+1buJ6r+w50cT
1j/6iaNHU+q7Fv1relOuv4p+XL4Z/XMD+T+lmZKPetvYjP56gn7cpTlxAuRZ
FdYhfhebk18E+vH4FuwPFpyf51pQHyPm6zctaF8u2OvZkhj62Fa2dPOfM7ml
W/y1r1vSH/mEv+a03m1+Mxb2Jr+GiKfem/oMwvn2XNHjIK95K+7/BHlBrZjP
oejP2tbU5zL8Oaw1+bVDPcS1ZjzLoh6PtlbnL/zr34bxiUZ/WdCG/tsHeTnb
Kv6od7+2XH8L/WZ+W/JzwN/729KfuJ9Y5rVj/nnAv7fbkX9e1EeW9uSXD/m6
u73Kd9RHxg6Unyx0U/UOrI8MkNe3A/0zB/VYpaPq9+invTpyvwH18b0j+S/G
eWToRH99Rz5NU/gq8rVcZ7d4e4V2pv8NqI8NnRnvVbCncxfa0xH3sXVdqE8A
7ocXFP4X+TquK+OzBfLOdlXzDfrpm670bynYs6Ib9cc8qHul8FD0t6Ld1byC
fDyl8HvMl4UM5P8a+dPSQHscqI9nBuofjPOhWQ/ql4rzPbCHOp/QL/P15H4N
5A3tyfhMRL7EKlwB/bphL+6PQD5G96L/1iBfDvZi/lxBPvr2Zr97ifNhX2/q
fwv5ckfR0f+tc/vQXpx/mtt9VP0hfpn7qvkC/XpXX/oX9xFDhn609x/Er1o/
6lsa88pVRcd5bK3so+Y19NOePvTfZuTjNx/ux33DXqG/23ng6t6f61cgf6b2
V/MV6q/sAPoD84p+8gA3/5nWD1D+Rf/uNJD+wHlpWTuQ/r0E+ecH0h+XcF8Y
O4jyT+F+cmaQuo8hni6Fk3E/Kj6Y9hrx/WT5YNKH4z72UuEJiG8RX3Ufgz7e
vtRnptwPzB5+9Edz2W9r4Uf9CyFfn/q53fcdTY2k70V/DTSq+yj6ed4hlJ+C
+1fAEOoLfQwxQyjvg9C1DfypD/ypN/rTv8swv0X5cz/uv9YD/syX4qiXwQHc
XwLn194ANT+hXv4L4PqaqNesQ8k/Gv3m1lDGtxPyK9Mw6jcY/XzXMNo3AfI0
geTXAOdH1UB1H0V/6B1I/q9xnvyr6Ii3rVIQ83cq8qtHEOvhNO5LX4MoT4v5
vvtw+tOE+E4ZTvkFYF+ZYHV+wb4uwdx/APInBdN/iL/ZGkz5qE99xxGkR0L+
mhGkj0Z+nRtB/Rfhvm0Kob8G4L6dHML8H4t4vw4hPxfuv8tGUt+LgvUvRjLf
kW+mwqOoL9bbvkyiPe/x9zndJqv7NvaHTmZ8u+C9Z8Nk6hMv6zVlQhU/wcaJ
oSoegi3rQtV5I9h+IZT89Ph7nQ5TqH8K/r/B6inUdzD+fujsFO4vj/elMVNZ
z53x90LJUymvIOL1aqrbfd+1dBr5I766U9Oo7ybZb0ibRn+OEqw/MZ3yDLD3
2XTmSx38fVCBMMZrAP5+qVkY6Z3EX5qgMMavNN77Hoep8w3/HyTfDNLH4/tv
4xnUD/7RDZ3BejiF97bcM+mPJOg3ZCb1X45+ET2T+jbDe0Y9szr/BBt9zVy/
GN+LI83U/yve5/aZ6b+meN8YOIt0vBc498yivntQv7dnUd/y8PeN2dRvL+o1
wxzy64d5cscc+qcV6uHnHLd52lY5nPl6G/NJz3DSO+O8/hau5nPR11Fhrpo/
UK+Guape0Y8+z1XzGuLddR71PY95evI8+iMS89H6efRXZtini6D8INTLhAjm
B+Zd69oI9uO5mG/bR5K/Df14lcIjcd6dieT+M+hHo+en/e/3eO0f88nvAvrh
y/nU7wXiWySK+9vC3qVRtFeD9zJ7FO29i3inRtGfoxFvj2j1/oh8T4rm/suC
bfkXuNWTs+kC9X6IektR2Cz5qmkcQ/2K4n05IIbxyCXYlStWvX/JeoMxlvsz
4305Kpb67UM+142jPkcgLyKO+hZHvPfGcX1Z2DPAQn4G/P1hgoX1kkfoulsW
9Z4Ke2YtpP+GoZ9dX6j6GeKriVf3OdTP9nh1P4W8H/HUD/3dXmkR/T0E9eJY
pOYb1Ev5xdTvBeLbfbGaT3Gef1pMeQMRvy5LVL9C/Uxa4vZepiu9VJ33yNfx
S8kP86dtzVLuz4b5qN0y0l2Yr1cuY/3kxTx6ZhntK475aNRy4qqo19MK18T8
8GK5+31vyQrqVxHynq+g/CDUR8GVrJ/umA+br6Q/PDEPPVH0/Ti/tauo30Wc
r01WUf8XsH+YwvheaXu0yu39XttoNevHG/OM/2rGpxjmpVxriHOgXv3WMB+u
YZ6Yv4bxOIfzu85adR9Fvc5bS3k5MT/Y1lLeFJzf/de5nceahHX0z2zM3zfX
kV8lxDejlfg+znOzVdkD+des6j0Z8f5lVe8b6A/b1ru9z1m/r2e97EO8K25g
vibCvr82uL3v279sUP0N52O5jep+hHmi20bKy4t+/HEj17fGe2nnTaSvRf1M
3OT2/uxVajPpvpA/brOaXyB/9Wbq1wj2td3CfIvF96YxW9zqxblC0asi3slb
qG8t2DtyK+vDA/eBU1u5/gTinbZVrYd9i7fRH7VxH3i2Tb1fId4FtlO/obDv
+HbmRwDms3w7yK8S4t1kh3qfRjxz71T9C/IaKsz3nCE7aV8k+kf0TvU+iO9f
OXcpf+J7gq/C2wRbI3cxHrhPGGvvpj1TcJ7P/X8MffbspvzC8K9PgjrfIW93
AvmPxH3nhsKZcd6Y99CftyHv6h63887ycw/Xe8h6w1ab6l+Q981GeYWRTxX2
kh/qXWvYy/pZj/9fe2Wv8if65ee9bvw15faRXzv0z6771PsD8vmDwv2hT6f9
6j0C/p6wn/H1QT6XPMD4dsZ52/6A23lmHXuA+TUc59GqA6zP/LLe0uYg/RGO
82+5wm0wf/xxkPbh+5gz5BD1fwX59kPq/R35lnqI9t9Cf/E4rO5rqK9Fh9W8
jngkHSY/zJ+Wp4fV+zTsPXaE+6NxHuY9qu6v+J7U+Kh6v4Y+AUfJLwHz7YOj
tHcs5u3cx2hPEv4+v8Ex9T0W87/xmHpvwPwfdUzdPzHf5jjuhs2Dj6v5AvkS
cZz6/8T87ZVI/AT6hCeqeQb5sCdRzXM4v28l0r4Fgl2zkkjXYT7YlUS6A/32
epLbPG3WnFDfW6L1/wfetSpk
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.5345376*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.4712928*^9, 
        FormBox[
         StyleBox["\"2010\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{524.25, Automatic},
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"30 day Aggregate\"", TraditionalForm],
  PlotRange->{{3.5345376*^9, 3.7234944*^9}, {0, 1377.0333333333333`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.8256701781592216`*^9, 3.825670201220665*^9}, {
   3.825670249703562*^9, 3.825670262437706*^9}, 3.825685701277976*^9, {
   3.8257038753331733`*^9, 3.825703909561989*^9}},
 CellLabel->
  "Out[111]=",ExpressionUUID->"73331e72-d682-4141-9e31-0a02ff7bc8bd"],

Cell["\<\
The graph suggests an increase in number of sales by end and beginning of \
each calendar year, aside from supporting the previous observation.\
\>", "Text",
 CellChangeTimes->{{3.8256857617439537`*^9, 
  3.825685805779889*^9}},ExpressionUUID->"73ed8a45-d706-4215-b6f2-\
2d878fabe217"],

Cell["\<\
As far as the items table there were many interesting things. The item file \
contained the item id, a description of it which presumably is the name, the \
category it fit into the number of bottles in a pack, the volume of the \
bottle, cost per bottle and the retail price. \
\>", "Text",
 CellChangeTimes->{{3.8257051469208574`*^9, 
  3.8257051944562607`*^9}},ExpressionUUID->"0e638148-9492-4d74-9884-\
2cb32fc40541"],

Cell[CellGroupData[{

Cell["\<\
Looking at a scatterplot of cost vs retail price we saw that the relation was \
very linear\
\>", "Subitem",
 CellChangeTimes->{
  3.8257051631662045`*^9, {3.8257052072507486`*^9, 
   3.8257052472874007`*^9}},ExpressionUUID->"1718b132-9ead-496f-a70a-\
409296b48564"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJy9nUuI51mW1yMfke+sjIx3RkRmREZkZGVVTmVlPcYqpin+Yds4gzYtPaAt
2Iij2Agt2Aq1GRf2phiYTW16o8gg6MJVgfSmGZiNLnqjiCDmZhioTW90MZsR
ycrKsvP/Pd976v859+fN6GyMzZ8b93Xuueee972/u3//n/zuPzy7tLT0V1aW
ll78/s7nv7/+2W/fPPlf3/3ZnU/+562Tf/ejj648+bdXTpbmf+sn/+pfvvi7
p99b75/8p7948P1P/+PNaLdz8r9fFP/i0smL3t/92erJi9KD7984eVG688lW
1F+L+o2TN+YNLkT/lWFZ/S6c/LLwy//cPJn/PLl6Mgf78/UTwX/x5J++aP6j
mydcj9pfjPY3T353PuD5k3/+ovj7rwWc12PezZMX/13/7Easc6uNr/Y34/ds
tLva4Jov+1Pj71q024h2X8z+y39+8Xe+wCv8Xj55b/63drI/B2g9yncC7msx
zkbUX451rUa7cyca/9rJfNr19Wh35+QHL/5+8Uj4ePjByXzajzai/37gaV3t
frAf+7Ua8O3F+CuBt+22Lo1/UODTfq0HHPuFPvT7fCa8XQz8nwu8XC/0ZXoU
fqf2O/dH6zoXcN8o9KB5t+P3MOC7EniZHt9lr0Pr24v9u9rWrfEuBD5uFvrT
+bga614v8Pfnvxr1tT3H17m9GePfinXdjPpb8X+PuxP9bwbed8r+8/yyrHVe
bPum8pnYryuB5zONzkkP3B/V34r1HZX2PK8sC47rQa+bgY8r0W4t4DgT9H6l
0APpV/TnfY3z9INrMf5G4Om+2v/3xzHPcjvP3E+eF/JbzWt6XyvrZ5nnXf+/
Fv03Ao9L8f9LQ/6ocS4Gnd6M9V6K9a4GntcCz5X+uV7Nfz7qXyv15rPz8f/b
3YJf0ucIX/rd0/p+eBx88a7246dvDvGp+VdjXbuBlyuxbtPBSsB/a7gereNa
47vEp8Y/D7lpvn+/yAfNvx3wHsb/v5hp3PNlfP1eivlXg+5Wgt5vBbxnGl6F
r7UY/3b8/7XA91bj//Ofn9wVvfzRodb/5w/LetRvI9a1X+iN+Bbe3tM8f/xR
4X9av/nX7oT8zvWRnljm+OaXgvNWgU/1awH/XqxvJda7HXSwEnBsh/w9Uv2f
vlXoWefNcny3nF+Ncz3mNT+7EPCuTPCDPA9qtxXw3y36idpbb/A+XQ641gKu
q4GH9SanNe9GoW+uX/Bea3SgfVqJ9tsxzvnodyPgfi3402ZZj8Zdjf3dCziv
tvkp3zyO1nE38LQS41pfu9DOtelA7e4U+aXzcTbm8z6dD3p4LeBZifm2y/5S
P6a84viC79lM+Fku8lb4PNvomPoU6a2vn6X+IzhvBhyWD1/NhMeLRZ7o93zg
qfIvlb+aGW7KA63vfMDxWqkX3JY7e21e4X21nQP9fzvm3Yz2dxvfmo/zzbsB
50b03y/8gPx2VCa/HZUpf/X/vcD/cTvvarcZ9HIu4L5e5tc45+L3ejlPPJ/k
v9xP7gfPP8ejfkT9gedX4x2Kvr79sKxH8FwI+Kr9J3q4EevYKvzGfEvlvaJv
CY5L0W+1rEdwX2x8ROX1RtfsT3zq3NhO2In1b0a/g2I/6PdC1K8Ufm38qbze
1qN1bhZ+on06iPYPGh2ovNX0YNHX7WIvcP9IT6QX9T8b+3O10CPlaV+/zfFt
t2kdW6FXvx/0MivwE/99+t6O9RzGfl8JOlor8r3Pv6b1MZbJv1lP/sX9s/y1
ns31kH9Q/zdf1zpfL/XWV/S7HfPtBR6OBd/f/k7g52+V/aK8oj+F41PfYNn8
UetabX4M4W2j4JP02ZdvO0GP9wLv5lt3iv48n/fnb2ic770XeL8V+D5sdui8
/Ydvxbx3Yr6w+37yruD6s28UfiN99s2A+/1YZ8ixD48LfkmPWsd6/N4p69W5
2Q047sX/ree9WfRT6/fCx+2Yx3parPNnt+K8HcV455repvkuB9z2V1nPsL25
Fvt1u+hfnm++Dx8fNr1J42/F72r03y36DPmL4Lna+KP1ELXfKvJe460EHrbb
edN+GS9rgY/bZT9p71Iemc/N+/3eUSnr9yDgeVD4mehzPdZV/Wc+J6KTsJe+
uy94f/x64PUg7N0Hzb8xn2f5sIxHfVr75HO3X/iD9t123xtRH+f66KDQT99f
uK19/veHpT/5Hf1R/fkJX/K7Pj6SHgyv8HoUeDyMfX24aIc9Oijwmg/OwfuT
gwl+nGXjW/SV+onOq/Wzy7Geau/QnuR+Cl77uXfi3IddtHxQ7GuNuxzrst/7
auz/OuyyrTIe+a3qTTevl/NBf4nPm9axF3RxEPh5I+bdjPN+EPi4Hfr8/aDX
6PfguMGt/+8H3m3HHAZeV8D3zLf2y/5o39+Oc/tB8e/QHzXy79G+Iv8hvgyH
fo+bPiI6uB/4Oxb8T98u8JM/097hfC4Lvq3m5xIdHxX9VPtypvnJ6J82n1X7
w4Iflc82PZz8Xvi7FOPZX3Yh9tt6dsYT6M8Svs9EuytBZ2djPPs90j7r++sv
B32nvaV219t5UXm9lCXHzja/P8fnenk++vG49F+rfC7aXx/Wa97nM+Hl4kS8
4cuZ/Uzav6XA4+Xi32PZ8Q/TOfVF0gfjCdQXqF9qnjNNbyL/4nha/0qTO/T3
d/W1/8d89nfoXN0o/WmPcj712w19817TrwTn9aIfC1/Wu7aLPKG9pP/bT1T9
afaLSu89LPjWfl9pcUjaL7SXvZ+Ce3XifFN/Oo7xHpf1a7wzAdfl4o+wv9Jy
3PjR+rcLf+L+0b9E/4Lo3n6ozaIfEP88b4xf99fv+NBK8Y+Rf4zqeb6oH5t/
CH/WJ841v7l+v5gZz+QP5O+iQ8dXr5d6n3+NZ/68hLj1cpPDgnupyUHiU+2T
f9MfqnmXGp+2P8J+Te6H9u/pzHxR+Mj4vM7L85nXYf+q/WDk16zv+x8uBXzW
t5fj/KwU/x7ptc/Ps0z7mOsl/6a/hu3JP7lf3if72Ubyn/WC03rVcfF/kf8s
+lX2mh1qvU74uBF4tf/kTPPz9M9b1pMfqH4z4D0o/v2Xq8/xX7V+VGZ/4fNs
i4uQnnkeSX/cD9JjXx7mePZ/aj92ij0xiofTH0J+K3py/O12jOu4y1bR1zTu
1YBjvchn5r/0+Tv0p6/Z75aztgtoz4/8B9qX20GH98t4tKdpD1IeUN+nfLCc
1XmI/InlsNO++U6R99Q/NY7jMpvFH8z9Y73wY7lS45XUZ6ifGP/ydz0o+KV/
h/s5ih9wvd35vzZfP56b+VuCZ7nxLa3rPOLqGR/t+3vzvBBftGf6+RaXmx+F
8X2eJ+YLcH2O+2qeg+F57uebbCzu49fWI7+o/fQPS3zAfkKd87tFX6R9qPrl
qL/R8K5xNwt8Xf/R1/xPnI/7rfXZLtiasOcdN6nxQO2P48e1zHiB+p9rcpv+
I5UzX7JvL6f+PeLH1D8Y33Q8Xeu7Weid+jv1UeslWtd6oWfio5+vlmXyQ8cN
NM9O08u0vt2gm0stbs/1ap0XAm8rzS8h+HbLebG/1n56+g+Jb9obtLe0fq/D
frK0VyjP7KdQebPYO9QXqH/Rvqf8Z3uuv4+Px5Gf9eGE/Z/6IulD63g607jn
ovw89PcLBT7md2h//f+1aG+9cLvAy/il24tetsv4mnep+ZUW7aSN0p/rFxzM
X0n+bLqd//7hUaknP7a/T//fGOqPtqsE/0qjL9Vvtri39mW38GOuj/5SwW89
cbWMR3+u/QrCk+NhZ6CnnGl8j/vR108vRDnzG31OSW/UtygfaF/19cetiD9U
eUX7hPyP8o/6LMvCm/NqNps+43rNk/nilAdqv9TiCiz3+f+FxpdVZv7kpbaP
/fWeC3q59pL+9Mw3ob4s/Ge+heDZC/35uJTt59D/azyZ/NT7ov24U/LFqC8K
jqcz+2V07p7NrJfovHw1s15M+tZ+ng8+VPNnyS8pzymfuT9PkN+lec43PV/r
Svi13oSf/bUvSy1OTH+q21vP5flhe65P+Hg2s59T+PpqZrzQ3y46Ot/4GPHR
988nfIRH7c3Xq/4mfGX+pvVz82HjT/Mtl/loj9O/3fe/pL9P+Hw28zkTvpYa
3KQvy3et40bR/0kvhI/50Gp3K/BzNBnPsD/Seo3Wv1/GV73vU9gf8cXMckvw
LbU4Efsb7453Wa4Jf45LbQS8B0Wf13jXg342mzxwfI36/sh+UL3xcOvU9gn1
X85H/jnSx/r6e8pbzXMv+OWjIr8JH+XRaH79Og/yqJwf+issN3wfifRB/Vrz
Gc69ptdrnMyvER7vFHqnvkV8a74Hmu8fvDvhD3Ce2nHR5zleX1++0eIapD/m
s9E+ofzs38e60vDQtzcvQi/N/G/62zTvxbYO+ru4n9R3qC84jqD175T7GCzT
XqW+1ef/ST/Gi8ap9j77s57yiu0F19lml4/um9F/QHuM8pP6ougk8/H6/qSk
P+Kzz28sR4yn9BfTvuL5Jr55HmlPE7/0j3G/NM5y48u2e7WOg1LP8bhfGvd8
06tpP9mfod9qv6l8temtxpfjIzyvxM+nyDcW3m1nVv7H/dJv5j9+gngi18t4
Ul/fTHuzb49nmf4W+iv7+evT9bQ/hLflgH+l+ZfNN0bt++c74e/HI5NeTjv+
qD396zyfI35B/ZDxF/szBL/vN51veQIs9+3djLeQPzF/c8TvzDdUvz1sb3q1
vT6Kt/f9menvsn3jc07+zf3menW+vppZThJ+wsf4q8+h7/NQP6D/QeOarur9
TcGT9zX6+fppD9F/SH1WcFxpfIT5dczP0rzpDyA9Uj7zPpjvT+n/js+ZXnfi
/ISf9+Pj4t90nM5+APrLST/UZ0z3tuPVPvMFnU+k+u1ib3O9wlP6/xx/0b7e
LvTE+Ykvxot4vtU+8xtoH5mvOS4o+DLeZv+pxr9S9D/Tu/B8sYzneW032S+n
8lrR76f8C7SP7V8QHSy1uBb9FZRv9K/wPAiOC4HvGu+mPNG+nmt5WrSn52j8
2nsL5PeUZ6RHwf3VzHo09buRPOT6WDa+1P61iXL6Q5hvQ32d8Pb9T0vgE7m/
7M/9Jb9ie/pH6H8ifu1H0zibL6k/pb9U6zjbzqH6P5153fSPEV7G67QvZ5se
2c9HyftAlL/0nwt/1iNuNXhFL1fL/Kzn+WF71hN+tmeZ54X4HL0PQX4+us9P
e4n9qQ+wTP3N+6x13BjCy/mFt8z/ov+H8wkvS/F7aQgv9Q/Kh9H89B+dtn3f
H+R7fVW/Y5n4FB2fbXYU8TmqJ//TPJlP6P10Pu9ovJH+TXtN/Ods84NwPNYT
HsJP/FgOW+8mPukPHe3nqJ7jW154fK9v0W+V/GxUT3lGfI3qaU9x/H55Gr/e
T81X+Yv1A53D1SJv1C7fG+i/N5Lt+/L6UtvfPv+bvp/b96fneLaPfP+I55fw
0Z7ieH3+m+OP+CXPA+0n6yUad73JZfvxCe9ovin70fBSvyD++/vD+Mj0+xyE
h/FNjs/+hIf3dVimP5XnacpeWvQPZb4H7RGfB/sHSY/EN9/LYL4M46m09zg/
5Q3x67iR9vm1xu98j4Blxv/ozxacZ5rfk/hkPjT9KYyHE7+2R3zPle/P9eVt
xgc4Pt/XYv7jVD6k43X99zlSv6D9KnrIfFjSs+0Cxw9G/J3240g+s57+adtz
tgvsH7ZdTnxQ/+P4ff0j82fU33Hu+v5BX99NfqJ1LwW+L5X5bG8Lf2uF/nie
aF/QPiK8tsPUbxNxgN3Cn4i/vryeHp/6B/Gl/TsT41+esAezPe9Xaf4vZ/bD
j+b7PPyCjo/07fl8R2vxHZWtQt9sT3xwP6jv0X9HfYX66FS9y4Iz82FGZdqD
xE9fP7V/8Gbhtxx/6nxZf6R86tsHyb8Np98pEHz2Q95u+Tr2O+g85f0grtdl
7Wv1L9E/Rv5H+UF61jjM15x+P4X0S32K7z1x/2l/UN8j/yM8HE/3ueMdph+/
WfyBfX6a8V/Sz4jfkj7oD2I9+1t/cX5Dn7+m/vFy+KO9l/4wxhtG66P+xP0d
9R/B119P8iOun/vH88N8N+5n35+U+Zqir/PxO7YPOR71n5E8EtzPZv6//XeL
fIP3XRK+09LnCN8sk17WP1uMP/P8c37mw3M/SE+klxG9Ld4jrPhlf9ON4LY/
LvMJyB9J/9Q/uT76c0b+u/55zPsk+vU7RHX80f5TvhH+/nps1+yXfDmO53iJ
44J9+475cRnvNZ07Hsn90fxLLU+Q593xAuGj5reyPIpPjvxRGifv4/J9bOq3
ff0l74sR/9Qn+/Hfl9eX1N90c1DivYzf8jwJfxmPI32M8DWit0U7tr4/zPcW
aX+P6kmPI3z184HjHaXP3yr2jPYr88lH/uope33qPpvwfqbFxcmP2F/782Wc
x5rvO7KnT6t/U98U/BlP43mx/rwYD894jfCU7wP29aHMrzTffhL5HISP9wn6
/rCMf5i/2M6yfLbey/HMz5xHy3jmaD8Yv2R8lPHP09oL3B/uN+mt/343vx8w
7W+i/sPx5//+6X31u/hOqWf82edrMZ6XZdPT1PunxL/wlvEtzkd/HdsLv1/M
hB+fo+n7LP33FHgfhe/9Tt8XojzgeaZ+6LiJ1jP1Xrrzjtaan0fwrBb6F9x5
/0nzMH6Z44uen89sV3I89c/7ayzTnjK/sP+j72+63Oxswjtq3/dHp74ivHw5
+yji+PaXmq/07eHMT6I/iPb0yH9E+Wa61jwrrZ/vgVGeMt+S9NJ/TzTpl/dt
1S/zf/ye7pPIG6P+Rnqhvsv3Hmk/mX86P8dw2Z9FfjLS59U/7WO/N2O9nueV
/HPEL0fnRXDm9ysI76jM9VhfcL4w6fG0+sBInpDf8ryOyqPv8RBfLLM99RWe
9358L88v6Yvni/5Pyv/++f/V60+rP1BfeDl7tr6XyO/DuMzzRf3J9ovfySE9
0h4c9R/Bz/1ePK9Vf+V6XhW/ffrkezJZpj5M/YPrHdWf1l9BeE+7/tO2H+Gf
/P7l6CX7Uz/qxyvzPJ223nqezwnh6+fjZj3xNaKnUb4P2/9q553vrU63977q
3N8s8pz97U+1XD5tveNwmu9g4nsEqY84njpVT3uhTz/T/sUp+e7+I3rqf29g
uj3tO5atd6p/3R/Ox3qWTa+LfsaXP9/CS+ZjnrY/93+EH9OP7ZY+f01/CeOl
I/7C/qxnvIDwU57x+xKsN/06z//l+pM/sD2/d5L6OumX+uco3jEq9+/PXGj3
gPr+hOWm/7M80kdY5nq5nn58PeMjfXpL/k/67H9PaHo82oMjeh/Zh6P5SA/k
37S/yB9G/hni+9OIt/t+Qz9fcDo/kvnZpH/ba6qv8qMfz56WN5YPXif5C+1Z
8zn9Vv8y7xdR35qyx2xvkN/Y76Tfmu/H9dEeY3vaXz5vzo9ge+4P8cX2o/lG
4/M8kL5H+QfCd8bzyM9H59Hvn3g+jsf52Z/7MbLPR/vF915Z5npI3+Tvtj+0
7zcLffldXsd7KD/77/3x/kDax4yPkH54vokf8iPii/zA9qPjZ9yPzyK+7vsx
/fXwfuu0Pkr9sn+fZlqfWMRv/X5nX7+Z/r4Z9/u0Zb5nNZpvVD+yZzjfqMz5
Fv2OFZ7R+9fsT39pP96R3/vt2xt8P2caP5SvvF9lv7nGdXzSekONdxG//ffO
M9+zv57Ex+i+hODK+MVo/80ffK769/fyPZSp+Kjz5Ufv/VLfeRLxMut9qs/4
hOWPx2WZ72Np/b6nVd930jz5Xjjly5S8MT9c9DPUeB37s97vMJufCw7HwUxH
ad+SfrWe1H/pr6S8dnu1q/TdzxdK/BAenl/C/0nkdfieAeHn/H1+kP0X5exG
2U/Gf0b0T3jIzywXha9pf6r79+2D3F+tM7/f2vdfZH+vV/OvN3tH864U+UP8
s0x+Rf2P+sTifGk/TvmbuX+kz5e7fzVd7sv/pA/io88fE74R/2T7fnyK+RLT
8fj+/aJLuKeR+RUvh+/p8Wnv8Lzw/rXPu/NDvG/+/k8/vyXfkzad6Xe7fI+2
b78nPY7WM6qn/4f0T32V7fv64PT5GdEX8WO/m8at33sg/Y7Wq3nyPjrxyzL3
v3+eUl8xf3O8x3mf6r9VxuN5oL4wOt+fRhzfeVxcv/mR4eivJ9erfcv3VWhP
9d9zTH2E8tP6hPPBST9PEH/t86Mcj2X6L/TL+D3vp6a9y/f/tZ+Z70h/IN+v
6PvP0j+occ+0e2nGr+DJfAT7qzVOvp9L/zfruX+sf9Uy3zMmP2B7+odYz/PH
8mnh83743RrWj+Q1z9/ovRGWqT/7ezyii0tFPrBMfUjzpv7O8zIa3/4lv3Ph
PDrbQ9TvqJ+RP/T9kcstT5XvF9mvqHFvlfwb75fp3/qi5nEebuZPv9z7FPn9
O8b/fe6F33qflvyMZX4/i/vB/Dbhjd+/5vuPqZ8IzrwPovPjvKLxe3LsbzoU
HjcRB9so+o33TevaDfzl9//43iT5Efk737Nd5IO34v9fzmwX6jffByQ98P3z
/n3ot7W+v/tB0Tdstwk+++/ye3I+F2pX7xeqPr/nKvzvxvtZ9ybet8v8GsLD
fDbrsar3d+z9Lvf9It/5/YJ5u0dvx/upHxR9h+/hUb+gvBN+8/tvgj/fX2CZ
8AvePcH7w+Oin1Pe209nfyHxrXU8ElxP/1L5PiLz6YSXvB/B91TNVzTuTpFX
1OeEr4yn83459ZVFO3O7yAvel2Q+Pe8r/LrL1Le5n+Q3tJ9YNv0svpeY/Jfy
hPuv+qczy23HJdTO9x8yv5b7y/HVnvdf8vuKnL/vzzgb/e2Xy/e7niD+39cn
8j2rfvwv7UftQ75/yPWwP+Hvy1/q06kP+36Wx/sk4ieL+VuZL91/XyHrnV+q
+rqfvA/Wt5+fx3v0F4t+Tfrie1vUR0k/9Hf4vrrp3vqh8LRW+AH1U+tPhkt4
zHx6xrNor1puCc7V4XzUNxifJjx9//SvDp/qM5+U+8nx1S/fN/J5cTzY+J7y
p/TvD+b3NEkfXA/xRX2C/IHnj/rp6Ly+anvCc9r+1OfNz7RfNT7V53/nmp9V
455tZbYfxb/65z3zDbTOC81+eNUy76eM8tf75Yx3Wv65zPPB9qP+LBu/lqOj
+VT+Yma/z2i8fv8scz95Pvv+6OTnLLO94ynWW/v+3ml/26is9eZ7wywTnlFZ
v2faPXGWXxXefn5M2ge/7vkoDylPWG8/guikfr99lD/Wzz/J+yenLduf4fjZ
CP4+/8sy7a9XLY/y9axnLfqj8j6jytP5Cf31pX5K/zLXO/IXL94DHZ+PT5H/
Nupvf+livCbLhMf8zPxo5G9j+yn8TJVpr1F/of6t9kvtu4Yu209D/zD3j/Ka
ZftBrLfS38R4PecbxfdH+Scjehnhh2X6H07rz6V/k/OP8M39ZXm03lF+J+E7
bT4o+4/qLd+1jvresc7davNL8XsY3G/K48W4+1bzc2ie9aI/OC7k+xmqz+9T
2A+2eH8x31Pme5Ms8/4q/cEscz1T8e/F/HDfM9mfeE8s8x/79zXzvr7xpP0Y
j0d/C/0/trdUrvmCfXpIe63/HovtrpvFX0D7yHqk85G4fuvdGn+7nHe3V7ni
y35i0W1970Dz2299dyK/YDq+27f/8/sxhI/jsT/hZ30/3pr0wP3ne532n2q/
95qfVv3vFv+F/bSaZ6/4T5k/xvcnLbdE/6slPkD/p+DKeDDhc73fRRv1H92P
pX/Jfil/X4L+rEW/rr+PFu9s/N5R4S/0X572/L4qP2B/4st6o/pvDufneWJ8
gfKZ+pD9JppnvcRLNI/fdcjvV+nX/sGMD9GfQfkrOn1dcP75OzGuv6t0v6yH
8ob83OdB+7/X1iG4/H3RfD+U9r/tDMG71s6FfncbHxZ8a8X/ZL+l5Fv9fhD9
H/SXsr/LlqveN4273vR89bc/NPLinh6U71fSvqc853jWw4TXzSIv7XfVeVwv
8aXF7woelnzAkb3B/eX7TqYrwblZ7CG279tLWbZfUfDVfFyWPb7pnfSt3/pe
6FSZ/GhUZnym/5565mON8vdPW8/8FjV7oH27+G45Lywzn0S/6f9mfI700Y+X
pT/ccAtfa0W+8D1Z8kd/P810xnj5iH7VLuPvU/cD3V7zhtxdPij64cif5/cH
zY8ZL+rHg/P7tKN669eL91NSPvS/n5n9ef5FB7637ffFM//E8CzeH818wJF8
HtX3vx+Q9grL9P/wvJuuBeftCfynfKK+bXnhdtb3Dd9UfprlC+UJ/dFs73bC
90azsxyPtnz3e5nsT/goDzV+fh+S7wmafyzaK1kmPvr5+HlfnPye8pLnyXHZ
zyK+Yb6v+p3iD+V7vyxTv2bZ7TTenebPEj6ul/Gov6l9fj/dckfvAh+U8Umf
I3jIT6fGE7w+D5nfrl/f07nZ5JPtCvILybO8n+t7qfr/WvH3Up/8BPFqluk/
Y5n8gfaM426ar/KTvj2U30sxv7Q/gvyP87E/7anR+NSP++ub7j9aP/uPxqc9
Yb+D6Hin+HNJr7R/yK/p/xn5N33OtC7ri5mv1rff83vOtM/636PM/GiuZ6Sv
kZ/Rf/sp4un9+4bUh7IseDK/jmXG46n/8T4C8UX+PPLPcP20R0flvv/+QtMr
mL9J/qN5fU/g9oR9Ovpert83r98zJX8gfdCfR3j79mWWR+1pz7G94XP8QevO
fOHReKP8z1G5Pz7zi3he0t7geVG/zI+g/kX//JOIf6tf3qe2nsL2lEc8n2xP
+EdlrcP3ELYm8sGnvx9FfzDH9zo1ztawTP+w8ykW/5/5FeSP/fPC95LzvPA8
EJ+0DxftNec3ZT4I6YPyQuNlvI1l6vv2x5tPjN6r6d+vns4/Gfm3R+1Z33+/
5+XrWRZerzU7dSQ/hafnM8eL+/pG5uNSHvA+xag/2/fzfafbc3yWTQ+0h11P
+hd+Mh4vfGT8WOPkfeK+/zDHE13m94p8/8J8g/Lm5fKdsty/X5nx1anvf7xs
vcu+z833dgjPp8g3oH9ulH8xak99mWX1y/yl/n0I+iv5PdjUv2ifjPgHy+RH
fXtnWv8b5QuN3mt6uXyszAca2V+j+3x9fXJa/xiVeV51/vJ+FemD7y2x3L9/
OC1PWB69f9XXP1I+n3Z/1C/9X6ft35d////m79NryiP6T1jfb5/4pT+1Hx96
+fewqb+N3ncazU/9iPpd/7535m+wP/Vj/eb9HMKvfvk9KdYTHurHp8Xfr7v9
afndq9YznvCrnZfp95Npj4/a83vn/Xh71tN/Qn2G8mnknxn1Z73LU/ow23P/
p8Zzmf5yrpf19Ac7DqZxt4p8IbzM16Y/gPnyxM/IH0H/OuMlpBeW6e/pf/8n
60nfjj8Jrpov632xf6Xv30189O2bxIfoazp/dqQPndY+Y1n9zjb6mHo/afE+
LONNzI+fLp8Wvj68OR7pTftcv3fq/n19KN/D1f/z/TnmL47ol/qY8Ws55vHN
Vzy+zx3fL6L9QPuq7y85D39Qfv9E+7vUvjvJ9bPe9prlpugu4xeUn/SPsD/L
gjO/v6D/5/1/8kP27/PLpFe1m75vxTL9h6f1Z3K+kb9wNP6r1o/WP/KXnrb9
qP608Py68cf7DKwXHS+3PInR+RPd5nsoLHO+Ufv++Zy233j+Ka/ID/rxoen2
9I+yzP59eZn5jSP/Lucf1TNfhvCtw9/K+3VT9+00XtUPKH/or6J+Zv7m+1Dr
iFdRfrG/5k/5QP2F+6l1PJs5jik++mX4L5eLfHF70ZP17C9ni3ZJ5t/Zn6dy
lY/z4oeH8f+HRR7QX0Z9v09PKb/8boT63y3xWX5/k/qK87X8O9JnmL/Isv1l
2r9rxV/ft4ftF7K/Lr+n6TzF+Tx/dDCc/1XL9J8v3sN0frL53nb833Hnu0Uf
Eh4yH2JU9r5r3s2hvsvyyP/JfBHaNyzzfgH9Ddxf2gP994VIL/y+QPJzyhuW
aY9aTugcrJb5+v5dxnem66k/c70sj/ID+vMnPxrho59PbLt4rflRtJ5bw/eW
+va+1+18Mcdpdgs/I30IH/5O753ij9U6zRe2J+4T5/u/HI/fd/W+i+/tFntZ
8Ge+G/1p6m++eafgg/yX8tD8eA7Po7zfsRifTPrQes2Hdgr++ucx+T3z43wP
RnDfKf5p5t+wLDzmfRX1y+9v9+3HqwGH+UvGA0b2K89vPz88802Fz8zHpDxh
/MRy1XmQlLfmm/q9U/xD9F/QH0F67N9/Tf2M51XrtxzcnHhvJvNVfS9WeNks
8PbjtUlvjis6H4HjaR7nQR8WfrgYV9wp5990KDreL+9Fzf//vaPA51vDfHjh
0e++Hk34y/O9pkW/90ap5/1c5qvzPIqe8vvXpD/i1/5X4aHSs+lIv7sNTo27
H++gvaf2f/yR+v/ceHvc8tcd9yC9O99SePJ9lvzeO9//4v6Tv4hOI8/95wcT
+aoX27o0ju9xHLRzona7BZ86T84Dvh374jjxTuN/zk/X/N+I+0Xfau+lCT8H
zQ+jeXy/yu+4PSr0z/ssprt5/TdzPMFX9bEp+bCY18T3sabvM5v+9P+diXjD
duDzsPB3j296H/H3vr6S9+m0nsyv9ni+T0z5zPNru8NyifX28/p+I/kt5Qv3
y+vSOAeNTwru28X/8STywxbpPu836Pw+mzkPYySvyH95v5n2l36t5xwO4zN9
+ZPy1XgTXm8X/r9wDn5xUOQL18d4K+XVSD5Rntk+Nt76+i/xm+eT8V2+j9j3
32T8hvyO9N+/T570zHw2lulP4Xm0v87fW+B7fZRX5A+Ex3xAeF0v/Nv3OjT+
XuH/TxbypnwfIu8vep8F984Efed7AmqX38sRfs+1ffR7oMYH9Vn6y61n+v1K
3oemfOL3R8i/iM+uffO19zX79sBK4zvmI8LbRoPP938In+T4OzHubzU7RHDv
Ff8C9XfrWfJ/HBV6IP6ob/C9VvIn0k8/Xy/vx4k+8nvjLI/ydUb0rXHyfuqo
PeVb//sqtB/5nme+F8sy7yvSH0d5RvlAeurru9P+IPrzeJ+G+jrpqZ9/dz76
1++dkL+O7Dmub46XP3xP8/yNjwr9CG++R7Fb7i/377+n/4L+VPIL7nffnwD7
9c9mIR9/u7zH8LPwm9vvIbjvxnl8o8xnPGm9cV/g5ES/f+93Snu+t6F5fM/9
uNk/czx8+yjwey/shEfFPp/D/Xf+sdp/6+PYx/0Y9/VyP6Kv36b+Qf8M7d2+
PyLvi/fz1R8I3vvvlnil5bJ+jwu+tc58f5X+Hdqbms/rOmh6sf5/J+bJ/CjC
w/xPyk++d227UnBsFPxy/xkvoH9CeLsXcD2K+vDz//TNgOcbcY6/VfBN/11f
3j6dWS/u33fOeAv9a/p/3h/o+xMzf7ifX2Q5FfbeL4603j99q8QfP0N+CPV5
6zPCx0rxH/A8MB7Uz2/L9xm13ufx3tuFsv/a73zPmPiZz/cHj2OfPmxxMOtt
jNeR3vy+rd+Bov6qeZ7NjDfh6enMejv3g/or/fX0L1D/nS/vf/wjreff/LPm
f1f/1Ub32s+DFteZw/Gx9fHML6F/gPbTfH3nvhn36f966c/4Mtfv/fE5UDnj
lX399IuZ4+LCV76PQv2E73MxftnXz47Cn/FWoRedt7z/pH3OeDHpkfld/F6d
fkPv/Pi4n7/787tx//jNYo9RHonPHgneo7cC3jwv/fNGfup37yI/5obfhXqj
4Iv8jPyf+hfpg/aZ+t2O8e8XfYT82/Fg8xnzOY27V/wNzMdkPe0tweXvBtxt
77F6H0XXu5rvJ/fKeef66S8UnM9njiO5v/2g1Af5PgHzC+Y/P7ae/LDoA6RP
jRt+1eV7Md9GtDso+bf6P+9rJD2THoSvfJ+D/l2+v9znp1mv/b0f+/NOka+2
mzW/v5dgfSL8d3/yUPD/1/fLeeN85kt+v6ZvXzAfL/lNX99L/x3n6/s/Mh7f
X2/mE/b5Ua6P+UTMT+2v59nMec6Up6P8RMqvUZn0rXeWHsS+vVvykdif/hZ+
z4T+YsLreIn2eb+8N2a55Pi9+O5bwvv/+c2SLyH74I2A772Cr/79zoyHUt9m
vgDvp1F/oD6n9dnvcFjGdzxIw75V6lmWnHxT4//m+0W/69vX78c+zfT7H74T
830v5NYDnbdb70a/2+H/v9/eKRM+j4v/Wf28z28UfGi8j2K8v1riO+Sf1H9H
9ib1T66H+ofgyfeKmW9A/zf9UTrf+F7Kt4+j/u1if9nul5/tsPEV7dudwq81
7k7Ti9TuXuDh7YBvP97/e73YQ4I7/Arfu6f5fuvbwudv/M3iP+jbY/m9Ytq7
pC/RR+a7U/7Zry946nuX1Ke0/5aj7xd8Ul+Zo++vPQ46+LD4k4Xf+wHv44Ar
7OhfvBvrPQ6+93bxB9JfTf7G88H1f4J4Kemd8on2DutJj/R/UT+if4j8ov/+
WdqvOnf3Yl2PYj3hpz06KOdNdHk34H1zwh5P/tJ/bwTx4K/JF66P9En4WM/x
JC/uBz08LvE06lsLdtgv92H03md/fWvNz0V/nOMk6rdX4Bc+7wS+Xx+W6W+n
/OP+ML5FeU19h/XUr1jfzyebLvP9HcZjWCb90p8j/pXv79LfRH+u1vOB+Oe/
/ssT/iF+3yntbeKX+GN/tqe+1c9/Tvj77Uf1OR7jByP9kfCP8p1G4xFewmd7
yHmiLNMfwf6Ed4R/5i/R/zaCn/djR/hnvfUX66kvhz/eV2U+VsI3Or+vSl/c
/9H+jt67Ypn6hNaT3+vrf2+a3zc+0/IgqM+YLhyXk57yeuDpnZL/S/uV9hX9
h8yvl3zI+1Sj93Xor6X+LTrN97VY5nmh/5L2LPmn6CTzbVV2HML5XelvtP2s
dmulbH+G4PB4+X1Rrs/7vph/kftFfPb9OylfyJ9P+95cP96T9MR6+sOEp7zf
RHuD70X1z9N0mev5HPFWrqf/nlnaU6P7y3yfRufO715YvqR/SvNkfvFp74vR
X8Ey88lH54v08AnyeVhmf+KH94n777mm/5v+tdH9De6nxnFc/GHZX+ZPsZ77
QXr4PuJD1N+69uPX7AO1D/vih48K/uiPEz7y/XvyL7XbD7vl9Vi/9d7jgOOB
+m29W+CnvSk3wP3Y58cT8TvbXb+B72w6/v0v9PujP5iQd5lPo3XYT7hV/Cvi
Y4fx+1C/B9/S/I+/U/Lh5R55L34/Kv4b2sNCs+nG/tKtwGfNl9U4u7H+eyf/
F6yW04c=
     "]]}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.5165625000000003`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{577.5, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{1.5165625000000003`, 7.075000000000001}, {0, 10.65}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Input",ExpressionUUID->"8323ed8a-6f2d-\
49d4-b6f1-c512ed206815"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
So we could build a linear model to fit the data (Retail_price=0.01$ + 1.5 \
Bottle_Cost)\
\>", "Subitem",
 CellChangeTimes->{{3.8257052537113175`*^9, 
  3.8257053269548683`*^9}},ExpressionUUID->"e21c31b6-2a57-473d-a921-\
36c2dcae8407"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwV0Gs0lAkAh/HJNEYTxjDN4HWZGe+o6DStqBTef2qnm6LaXMt1aOs4pVpd
SJRlV4ztfpK2oaIYdsm96MbKJXWqsWoqYcuKgynJSMa2H57zfP8Jw3dvitSj
0Wjrv/X/l+V2Cmg0DSVLHlhwwUFLqWe0lKUxNVQgPy2lz0VLHdxbITVjayhv
pb160XItVb4iI9reRkO5PgtLfuanpeb3ulZ7uWkott3zdsMULSVwPOuddVBD
Vd9viEt8o6WmV6w74vRBQ83Uu9QgOzNOPWyqfinr+UCVJPn4S3RfqLsYEmwb
HKEMevfm5RrrqCch/mHF7aPUoch0ZkYsDdHBAQd2lI9Rwh0JwvOvpmFncQW/
5tY49Viw4ZFpOB2pV6RloTkT1OrzIWm/tU0Ho9/pRXbxJNVY790R56cPY5NK
lWfpFHWAFsparGYie6jynaCZhpGvJetGPWcgNAH2/W3T8FNxl62ohYXyEJks
5J4e7lhv1Nu42BBtpZvlrBI63BXdzT6/G4FfFBM/dWM67ql8yDtCNjTjs7fn
XGVAPzKpkS81wcSwoXl6oT5Ka1at/IXFQeuWujKlkolPPIVzSCsHc9kG6w9m
G8BKxZu3JNEUNTFJykzFDKwamIxe7WmGDvFp5sZTLPiGMyoCtGaYnfxszras
mdix8LD0ch0Xbj5vnBXZhuAZJa/dnDgLXTEpHvIMI1yTFm5hOPNQ4Rpg9NdJ
YyxTo3BojAcL3wcvrqewUd42xnjxBx/CPUmrw5aaoLHZQ+UYbo4NM8v1zWpN
8NJ2dKCCtIDn4/J6SxcOVO2trOVqC3hv94pYVc3Bk3ecfXSFJTyq1miNXU0R
pft3/fxQAqMLuBnzSk3Rvb9TEsi1QsORWL3dC80QvGZlUF2HFYI+XznALDbD
vfgWuTDTGirxkp6lJBe1lV1OQ7BB1NwIyek8Lm6tixJ+1LPFHd+g+OU2s3AJ
hvyxKlt8599fwM2dhfsPTJQWHgLsTJZ2uBM8zFE4bqjOEiA1yuDLtNM8qOMy
HdJHBLhlHTbVz+Ujk16gHP9BiCpdKt0hkw+X2s0lfX8K8bBsRb+cY47XwsqA
faYi1AuiGjNOmeNJeqib0z4RjlVtye1mWaBanH15T5sIgaJXwUFyC+RGy4u9
JHYYr5QQjkxLHP6H7Xb9uB3i6O8fnj1iiavBavqSt3bgkq5hYhqBttStMRHf
k4jd5fuJdYhAX+euUHYOCctFsib7eAL6kgiPq7kkbk/uueiZQIBM9LNyvULC
QC5fGXeUQJgtnofnk7iobDjzPo2AOoTjU1lEoqHPyaXpAoFHXWXUthoSZhHs
/Sm1BMp6tDbKpySqHazX5t4m8NRp8CulIrH1o4NN3V0Cw8e61ap2EvlHpY2f
GgjMs2s5p3tOYmlOAk/WRiA/Itt40xsS4a8HKj07CWS9dddpB0gw88aPB3cR
qHJ2eiUfJFEUzQyJ6yHw98/2N0XDJD5PiJg3egmYitn7vT6SOG4Z6CccJpAR
2TWo0JKQ9Gx3dP9AoLBC1er8hYSqIHbKf4RAM6O5oHmChI3ryWsnxr555JdG
juhI1NMU8UXj3zw+5634lSbGj01F3k0TBDylF4TWemIYnrhp93aSQOi5zKlS
uhilfk1jU1MEEnuPvZYyxPgPPHgWEw==
        "]]},
      Annotation[#, "Charting`Private`Tag$107077#1"]& ]}, {}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJy9nUuI51mW1yMfke+sjIx3RkRmREZkZGVVTmVlPcYqpin+Yds4gzYtPaAt
2Iij2Agt2Aq1GRf2phiYTW16o8gg6MJVgfSmGZiNLnqjiCDmZhioTW90MZsR
ycrKsvP/Pd976v859+fN6GyMzZ8b93Xuueee972/u3//n/zuPzy7tLT0V1aW
ll78/s7nv7/+2W/fPPlf3/3ZnU/+562Tf/ejj648+bdXTpbmf+sn/+pfvvi7
p99b75/8p7948P1P/+PNaLdz8r9fFP/i0smL3t/92erJi9KD7984eVG688lW
1F+L+o2TN+YNLkT/lWFZ/S6c/LLwy//cPJn/PLl6Mgf78/UTwX/x5J++aP6j
mydcj9pfjPY3T353PuD5k3/+ovj7rwWc12PezZMX/13/7Easc6uNr/Y34/ds
tLva4Jov+1Pj71q024h2X8z+y39+8Xe+wCv8Xj55b/63drI/B2g9yncC7msx
zkbUX451rUa7cyca/9rJfNr19Wh35+QHL/5+8Uj4ePjByXzajzai/37gaV3t
frAf+7Ua8O3F+CuBt+22Lo1/UODTfq0HHPuFPvT7fCa8XQz8nwu8XC/0ZXoU
fqf2O/dH6zoXcN8o9KB5t+P3MOC7EniZHt9lr0Pr24v9u9rWrfEuBD5uFvrT
+bga614v8Pfnvxr1tT3H17m9GePfinXdjPpb8X+PuxP9bwbed8r+8/yyrHVe
bPum8pnYryuB5zONzkkP3B/V34r1HZX2PK8sC47rQa+bgY8r0W4t4DgT9H6l
0APpV/TnfY3z9INrMf5G4Om+2v/3xzHPcjvP3E+eF/JbzWt6XyvrZ5nnXf+/
Fv03Ao9L8f9LQ/6ocS4Gnd6M9V6K9a4GntcCz5X+uV7Nfz7qXyv15rPz8f/b
3YJf0ucIX/rd0/p+eBx88a7246dvDvGp+VdjXbuBlyuxbtPBSsB/a7gereNa
47vEp8Y/D7lpvn+/yAfNvx3wHsb/v5hp3PNlfP1eivlXg+5Wgt5vBbxnGl6F
r7UY/3b8/7XA91bj//Ofn9wVvfzRodb/5w/LetRvI9a1X+iN+Bbe3tM8f/xR
4X9av/nX7oT8zvWRnljm+OaXgvNWgU/1awH/XqxvJda7HXSwEnBsh/w9Uv2f
vlXoWefNcny3nF+Ncz3mNT+7EPCuTPCDPA9qtxXw3y36idpbb/A+XQ641gKu
q4GH9SanNe9GoW+uX/Bea3SgfVqJ9tsxzvnodyPgfi3402ZZj8Zdjf3dCziv
tvkp3zyO1nE38LQS41pfu9DOtelA7e4U+aXzcTbm8z6dD3p4LeBZifm2y/5S
P6a84viC79lM+Fku8lb4PNvomPoU6a2vn6X+IzhvBhyWD1/NhMeLRZ7o93zg
qfIvlb+aGW7KA63vfMDxWqkX3JY7e21e4X21nQP9fzvm3Yz2dxvfmo/zzbsB
50b03y/8gPx2VCa/HZUpf/X/vcD/cTvvarcZ9HIu4L5e5tc45+L3ejlPPJ/k
v9xP7gfPP8ejfkT9gedX4x2Kvr79sKxH8FwI+Kr9J3q4EevYKvzGfEvlvaJv
CY5L0W+1rEdwX2x8ROX1RtfsT3zq3NhO2In1b0a/g2I/6PdC1K8Ufm38qbze
1qN1bhZ+on06iPYPGh2ovNX0YNHX7WIvcP9IT6QX9T8b+3O10CPlaV+/zfFt
t2kdW6FXvx/0MivwE/99+t6O9RzGfl8JOlor8r3Pv6b1MZbJv1lP/sX9s/y1
ns31kH9Q/zdf1zpfL/XWV/S7HfPtBR6OBd/f/k7g52+V/aK8oj+F41PfYNn8
UetabX4M4W2j4JP02ZdvO0GP9wLv5lt3iv48n/fnb2ic770XeL8V+D5sdui8
/Ydvxbx3Yr6w+37yruD6s28UfiN99s2A+/1YZ8ixD48LfkmPWsd6/N4p69W5
2Q047sX/ree9WfRT6/fCx+2Yx3parPNnt+K8HcV455repvkuB9z2V1nPsL25
Fvt1u+hfnm++Dx8fNr1J42/F72r03y36DPmL4Lna+KP1ELXfKvJe460EHrbb
edN+GS9rgY/bZT9p71Iemc/N+/3eUSnr9yDgeVD4mehzPdZV/Wc+J6KTsJe+
uy94f/x64PUg7N0Hzb8xn2f5sIxHfVr75HO3X/iD9t123xtRH+f66KDQT99f
uK19/veHpT/5Hf1R/fkJX/K7Pj6SHgyv8HoUeDyMfX24aIc9Oijwmg/OwfuT
gwl+nGXjW/SV+onOq/Wzy7Geau/QnuR+Cl77uXfi3IddtHxQ7GuNuxzrst/7
auz/OuyyrTIe+a3qTTevl/NBf4nPm9axF3RxEPh5I+bdjPN+EPi4Hfr8/aDX
6PfguMGt/+8H3m3HHAZeV8D3zLf2y/5o39+Oc/tB8e/QHzXy79G+Iv8hvgyH
fo+bPiI6uB/4Oxb8T98u8JM/097hfC4Lvq3m5xIdHxX9VPtypvnJ6J82n1X7
w4Iflc82PZz8Xvi7FOPZX3Yh9tt6dsYT6M8Svs9EuytBZ2djPPs90j7r++sv
B32nvaV219t5UXm9lCXHzja/P8fnenk++vG49F+rfC7aXx/Wa97nM+Hl4kS8
4cuZ/Uzav6XA4+Xi32PZ8Q/TOfVF0gfjCdQXqF9qnjNNbyL/4nha/0qTO/T3
d/W1/8d89nfoXN0o/WmPcj712w19817TrwTn9aIfC1/Wu7aLPKG9pP/bT1T9
afaLSu89LPjWfl9pcUjaL7SXvZ+Ce3XifFN/Oo7xHpf1a7wzAdfl4o+wv9Jy
3PjR+rcLf+L+0b9E/4Lo3n6ozaIfEP88b4xf99fv+NBK8Y+Rf4zqeb6oH5t/
CH/WJ841v7l+v5gZz+QP5O+iQ8dXr5d6n3+NZ/68hLj1cpPDgnupyUHiU+2T
f9MfqnmXGp+2P8J+Te6H9u/pzHxR+Mj4vM7L85nXYf+q/WDk16zv+x8uBXzW
t5fj/KwU/x7ptc/Ps0z7mOsl/6a/hu3JP7lf3if72Ubyn/WC03rVcfF/kf8s
+lX2mh1qvU74uBF4tf/kTPPz9M9b1pMfqH4z4D0o/v2Xq8/xX7V+VGZ/4fNs
i4uQnnkeSX/cD9JjXx7mePZ/aj92ij0xiofTH0J+K3py/O12jOu4y1bR1zTu
1YBjvchn5r/0+Tv0p6/Z75aztgtoz4/8B9qX20GH98t4tKdpD1IeUN+nfLCc
1XmI/InlsNO++U6R99Q/NY7jMpvFH8z9Y73wY7lS45XUZ6ifGP/ydz0o+KV/
h/s5ih9wvd35vzZfP56b+VuCZ7nxLa3rPOLqGR/t+3vzvBBftGf6+RaXmx+F
8X2eJ+YLcH2O+2qeg+F57uebbCzu49fWI7+o/fQPS3zAfkKd87tFX6R9qPrl
qL/R8K5xNwt8Xf/R1/xPnI/7rfXZLtiasOcdN6nxQO2P48e1zHiB+p9rcpv+
I5UzX7JvL6f+PeLH1D8Y33Q8Xeu7Weid+jv1UeslWtd6oWfio5+vlmXyQ8cN
NM9O08u0vt2gm0stbs/1ap0XAm8rzS8h+HbLebG/1n56+g+Jb9obtLe0fq/D
frK0VyjP7KdQebPYO9QXqH/Rvqf8Z3uuv4+Px5Gf9eGE/Z/6IulD63g607jn
ovw89PcLBT7md2h//f+1aG+9cLvAy/il24tetsv4mnep+ZUW7aSN0p/rFxzM
X0n+bLqd//7hUaknP7a/T//fGOqPtqsE/0qjL9Vvtri39mW38GOuj/5SwW89
cbWMR3+u/QrCk+NhZ6CnnGl8j/vR108vRDnzG31OSW/UtygfaF/19cetiD9U
eUX7hPyP8o/6LMvCm/NqNps+43rNk/nilAdqv9TiCiz3+f+FxpdVZv7kpbaP
/fWeC3q59pL+9Mw3ob4s/Ge+heDZC/35uJTt59D/azyZ/NT7ov24U/LFqC8K
jqcz+2V07p7NrJfovHw1s15M+tZ+ng8+VPNnyS8pzymfuT9PkN+lec43PV/r
Svi13oSf/bUvSy1OTH+q21vP5flhe65P+Hg2s59T+PpqZrzQ3y46Ot/4GPHR
988nfIRH7c3Xq/4mfGX+pvVz82HjT/Mtl/loj9O/3fe/pL9P+Hw28zkTvpYa
3KQvy3et40bR/0kvhI/50Gp3K/BzNBnPsD/Seo3Wv1/GV73vU9gf8cXMckvw
LbU4Efsb7453Wa4Jf45LbQS8B0Wf13jXg342mzxwfI36/sh+UL3xcOvU9gn1
X85H/jnSx/r6e8pbzXMv+OWjIr8JH+XRaH79Og/yqJwf+issN3wfifRB/Vrz
Gc69ptdrnMyvER7vFHqnvkV8a74Hmu8fvDvhD3Ce2nHR5zleX1++0eIapD/m
s9E+ofzs38e60vDQtzcvQi/N/G/62zTvxbYO+ru4n9R3qC84jqD175T7GCzT
XqW+1ef/ST/Gi8ap9j77s57yiu0F19lml4/um9F/QHuM8pP6ougk8/H6/qSk
P+Kzz28sR4yn9BfTvuL5Jr55HmlPE7/0j3G/NM5y48u2e7WOg1LP8bhfGvd8
06tpP9mfod9qv6l8temtxpfjIzyvxM+nyDcW3m1nVv7H/dJv5j9+gngi18t4
Ul/fTHuzb49nmf4W+iv7+evT9bQ/hLflgH+l+ZfNN0bt++c74e/HI5NeTjv+
qD396zyfI35B/ZDxF/szBL/vN51veQIs9+3djLeQPzF/c8TvzDdUvz1sb3q1
vT6Kt/f9menvsn3jc07+zf3menW+vppZThJ+wsf4q8+h7/NQP6D/QeOarur9
TcGT9zX6+fppD9F/SH1WcFxpfIT5dczP0rzpDyA9Uj7zPpjvT+n/js+ZXnfi
/ISf9+Pj4t90nM5+APrLST/UZ0z3tuPVPvMFnU+k+u1ib3O9wlP6/xx/0b7e
LvTE+Ykvxot4vtU+8xtoH5mvOS4o+DLeZv+pxr9S9D/Tu/B8sYzneW032S+n
8lrR76f8C7SP7V8QHSy1uBb9FZRv9K/wPAiOC4HvGu+mPNG+nmt5WrSn52j8
2nsL5PeUZ6RHwf3VzHo09buRPOT6WDa+1P61iXL6Q5hvQ32d8Pb9T0vgE7m/
7M/9Jb9ie/pH6H8ifu1H0zibL6k/pb9U6zjbzqH6P5153fSPEV7G67QvZ5se
2c9HyftAlL/0nwt/1iNuNXhFL1fL/Kzn+WF71hN+tmeZ54X4HL0PQX4+us9P
e4n9qQ+wTP3N+6x13BjCy/mFt8z/ov+H8wkvS/F7aQgv9Q/Kh9H89B+dtn3f
H+R7fVW/Y5n4FB2fbXYU8TmqJ//TPJlP6P10Pu9ovJH+TXtN/Ods84NwPNYT
HsJP/FgOW+8mPukPHe3nqJ7jW154fK9v0W+V/GxUT3lGfI3qaU9x/H55Gr/e
T81X+Yv1A53D1SJv1C7fG+i/N5Lt+/L6UtvfPv+bvp/b96fneLaPfP+I55fw
0Z7ieH3+m+OP+CXPA+0n6yUad73JZfvxCe9ovin70fBSvyD++/vD+Mj0+xyE
h/FNjs/+hIf3dVimP5XnacpeWvQPZb4H7RGfB/sHSY/EN9/LYL4M46m09zg/
5Q3x67iR9vm1xu98j4Blxv/ozxacZ5rfk/hkPjT9KYyHE7+2R3zPle/P9eVt
xgc4Pt/XYv7jVD6k43X99zlSv6D9KnrIfFjSs+0Cxw9G/J3240g+s57+adtz
tgvsH7ZdTnxQ/+P4ff0j82fU33Hu+v5BX99NfqJ1LwW+L5X5bG8Lf2uF/nie
aF/QPiK8tsPUbxNxgN3Cn4i/vryeHp/6B/Gl/TsT41+esAezPe9Xaf4vZ/bD
j+b7PPyCjo/07fl8R2vxHZWtQt9sT3xwP6jv0X9HfYX66FS9y4Iz82FGZdqD
xE9fP7V/8Gbhtxx/6nxZf6R86tsHyb8Np98pEHz2Q95u+Tr2O+g85f0grtdl
7Wv1L9E/Rv5H+UF61jjM15x+P4X0S32K7z1x/2l/UN8j/yM8HE/3ueMdph+/
WfyBfX6a8V/Sz4jfkj7oD2I9+1t/cX5Dn7+m/vFy+KO9l/4wxhtG66P+xP0d
9R/B119P8iOun/vH88N8N+5n35+U+Zqir/PxO7YPOR71n5E8EtzPZv6//XeL
fIP3XRK+09LnCN8sk17WP1uMP/P8c37mw3M/SE+klxG9Ld4jrPhlf9ON4LY/
LvMJyB9J/9Q/uT76c0b+u/55zPsk+vU7RHX80f5TvhH+/nps1+yXfDmO53iJ
44J9+475cRnvNZ07Hsn90fxLLU+Q593xAuGj5reyPIpPjvxRGifv4/J9bOq3
ff0l74sR/9Qn+/Hfl9eX1N90c1DivYzf8jwJfxmPI32M8DWit0U7tr4/zPcW
aX+P6kmPI3z184HjHaXP3yr2jPYr88lH/uope33qPpvwfqbFxcmP2F/782Wc
x5rvO7KnT6t/U98U/BlP43mx/rwYD894jfCU7wP29aHMrzTffhL5HISP9wn6
/rCMf5i/2M6yfLbey/HMz5xHy3jmaD8Yv2R8lPHP09oL3B/uN+mt/343vx8w
7W+i/sPx5//+6X31u/hOqWf82edrMZ6XZdPT1PunxL/wlvEtzkd/HdsLv1/M
hB+fo+n7LP33FHgfhe/9Tt8XojzgeaZ+6LiJ1jP1Xrrzjtaan0fwrBb6F9x5
/0nzMH6Z44uen89sV3I89c/7ayzTnjK/sP+j72+63Oxswjtq3/dHp74ivHw5
+yji+PaXmq/07eHMT6I/iPb0yH9E+Wa61jwrrZ/vgVGeMt+S9NJ/TzTpl/dt
1S/zf/ye7pPIG6P+Rnqhvsv3Hmk/mX86P8dw2Z9FfjLS59U/7WO/N2O9nueV
/HPEL0fnRXDm9ysI76jM9VhfcL4w6fG0+sBInpDf8ryOyqPv8RBfLLM99RWe
9358L88v6Yvni/5Pyv/++f/V60+rP1BfeDl7tr6XyO/DuMzzRf3J9ovfySE9
0h4c9R/Bz/1ePK9Vf+V6XhW/ffrkezJZpj5M/YPrHdWf1l9BeE+7/tO2H+Gf
/P7l6CX7Uz/qxyvzPJ223nqezwnh6+fjZj3xNaKnUb4P2/9q553vrU63977q
3N8s8pz97U+1XD5tveNwmu9g4nsEqY84njpVT3uhTz/T/sUp+e7+I3rqf29g
uj3tO5atd6p/3R/Ox3qWTa+LfsaXP9/CS+ZjnrY/93+EH9OP7ZY+f01/CeOl
I/7C/qxnvIDwU57x+xKsN/06z//l+pM/sD2/d5L6OumX+uco3jEq9+/PXGj3
gPr+hOWm/7M80kdY5nq5nn58PeMjfXpL/k/67H9PaHo82oMjeh/Zh6P5SA/k
37S/yB9G/hni+9OIt/t+Qz9fcDo/kvnZpH/ba6qv8qMfz56WN5YPXif5C+1Z
8zn9Vv8y7xdR35qyx2xvkN/Y76Tfmu/H9dEeY3vaXz5vzo9ge+4P8cX2o/lG
4/M8kL5H+QfCd8bzyM9H59Hvn3g+jsf52Z/7MbLPR/vF915Z5npI3+Tvtj+0
7zcLffldXsd7KD/77/3x/kDax4yPkH54vokf8iPii/zA9qPjZ9yPzyK+7vsx
/fXwfuu0Pkr9sn+fZlqfWMRv/X5nX7+Z/r4Z9/u0Zb5nNZpvVD+yZzjfqMz5
Fv2OFZ7R+9fsT39pP96R3/vt2xt8P2caP5SvvF9lv7nGdXzSekONdxG//ffO
M9+zv57Ex+i+hODK+MVo/80ffK769/fyPZSp+Kjz5Ufv/VLfeRLxMut9qs/4
hOWPx2WZ72Np/b6nVd930jz5Xjjly5S8MT9c9DPUeB37s97vMJufCw7HwUxH
ad+SfrWe1H/pr6S8dnu1q/TdzxdK/BAenl/C/0nkdfieAeHn/H1+kP0X5exG
2U/Gf0b0T3jIzywXha9pf6r79+2D3F+tM7/f2vdfZH+vV/OvN3tH864U+UP8
s0x+Rf2P+sTifGk/TvmbuX+kz5e7fzVd7sv/pA/io88fE74R/2T7fnyK+RLT
8fj+/aJLuKeR+RUvh+/p8Wnv8Lzw/rXPu/NDvG/+/k8/vyXfkzad6Xe7fI+2
b78nPY7WM6qn/4f0T32V7fv64PT5GdEX8WO/m8at33sg/Y7Wq3nyPjrxyzL3
v3+eUl8xf3O8x3mf6r9VxuN5oL4wOt+fRhzfeVxcv/mR4eivJ9erfcv3VWhP
9d9zTH2E8tP6hPPBST9PEH/t86Mcj2X6L/TL+D3vp6a9y/f/tZ+Z70h/IN+v
6PvP0j+occ+0e2nGr+DJfAT7qzVOvp9L/zfruX+sf9Uy3zMmP2B7+odYz/PH
8mnh83743RrWj+Q1z9/ovRGWqT/7ezyii0tFPrBMfUjzpv7O8zIa3/4lv3Ph
PDrbQ9TvqJ+RP/T9kcstT5XvF9mvqHFvlfwb75fp3/qi5nEebuZPv9z7FPn9
O8b/fe6F33qflvyMZX4/i/vB/Dbhjd+/5vuPqZ8IzrwPovPjvKLxe3LsbzoU
HjcRB9so+o33TevaDfzl9//43iT5Efk737Nd5IO34v9fzmwX6jffByQ98P3z
/n3ot7W+v/tB0Tdstwk+++/ye3I+F2pX7xeqPr/nKvzvxvtZ9ybet8v8GsLD
fDbrsar3d+z9Lvf9It/5/YJ5u0dvx/upHxR9h+/hUb+gvBN+8/tvgj/fX2CZ
8AvePcH7w+Oin1Pe209nfyHxrXU8ElxP/1L5PiLz6YSXvB/B91TNVzTuTpFX
1OeEr4yn83459ZVFO3O7yAvel2Q+Pe8r/LrL1Le5n+Q3tJ9YNv0svpeY/Jfy
hPuv+qczy23HJdTO9x8yv5b7y/HVnvdf8vuKnL/vzzgb/e2Xy/e7niD+39cn
8j2rfvwv7UftQ75/yPWwP+Hvy1/q06kP+36Wx/sk4ieL+VuZL91/XyHrnV+q
+rqfvA/Wt5+fx3v0F4t+Tfrie1vUR0k/9Hf4vrrp3vqh8LRW+AH1U+tPhkt4
zHx6xrNor1puCc7V4XzUNxifJjx9//SvDp/qM5+U+8nx1S/fN/J5cTzY+J7y
p/TvD+b3NEkfXA/xRX2C/IHnj/rp6Ly+anvCc9r+1OfNz7RfNT7V53/nmp9V
455tZbYfxb/65z3zDbTOC81+eNUy76eM8tf75Yx3Wv65zPPB9qP+LBu/lqOj
+VT+Yma/z2i8fv8scz95Pvv+6OTnLLO94ynWW/v+3ml/26is9eZ7wywTnlFZ
v2faPXGWXxXefn5M2ge/7vkoDylPWG8/guikfr99lD/Wzz/J+yenLduf4fjZ
CP4+/8sy7a9XLY/y9axnLfqj8j6jytP5Cf31pX5K/zLXO/IXL94DHZ+PT5H/
Nupvf+livCbLhMf8zPxo5G9j+yn8TJVpr1F/of6t9kvtu4Yu209D/zD3j/Ka
ZftBrLfS38R4PecbxfdH+Scjehnhh2X6H07rz6V/k/OP8M39ZXm03lF+J+E7
bT4o+4/qLd+1jvresc7davNL8XsY3G/K48W4+1bzc2ie9aI/OC7k+xmqz+9T
2A+2eH8x31Pme5Ms8/4q/cEscz1T8e/F/HDfM9mfeE8s8x/79zXzvr7xpP0Y
j0d/C/0/trdUrvmCfXpIe63/HovtrpvFX0D7yHqk85G4fuvdGn+7nHe3V7ni
y35i0W1970Dz2299dyK/YDq+27f/8/sxhI/jsT/hZ30/3pr0wP3ne532n2q/
95qfVv3vFv+F/bSaZ6/4T5k/xvcnLbdE/6slPkD/p+DKeDDhc73fRRv1H92P
pX/Jfil/X4L+rEW/rr+PFu9s/N5R4S/0X572/L4qP2B/4st6o/pvDufneWJ8
gfKZ+pD9JppnvcRLNI/fdcjvV+nX/sGMD9GfQfkrOn1dcP75OzGuv6t0v6yH
8ob83OdB+7/X1iG4/H3RfD+U9r/tDMG71s6FfncbHxZ8a8X/ZL+l5Fv9fhD9
H/SXsr/LlqveN4273vR89bc/NPLinh6U71fSvqc853jWw4TXzSIv7XfVeVwv
8aXF7woelnzAkb3B/eX7TqYrwblZ7CG279tLWbZfUfDVfFyWPb7pnfSt3/pe
6FSZ/GhUZnym/5565mON8vdPW8/8FjV7oH27+G45Lywzn0S/6f9mfI700Y+X
pT/ccAtfa0W+8D1Z8kd/P810xnj5iH7VLuPvU/cD3V7zhtxdPij64cif5/cH
zY8ZL+rHg/P7tKN669eL91NSPvS/n5n9ef5FB7637ffFM//E8CzeH818wJF8
HtX3vx+Q9grL9P/wvJuuBeftCfynfKK+bXnhdtb3Dd9UfprlC+UJ/dFs73bC
90azsxyPtnz3e5nsT/goDzV+fh+S7wmafyzaK1kmPvr5+HlfnPye8pLnyXHZ
zyK+Yb6v+p3iD+V7vyxTv2bZ7TTenebPEj6ul/Gov6l9fj/dckfvAh+U8Umf
I3jIT6fGE7w+D5nfrl/f07nZ5JPtCvILybO8n+t7qfr/WvH3Up/8BPFqluk/
Y5n8gfaM426ar/KTvj2U30sxv7Q/gvyP87E/7anR+NSP++ub7j9aP/uPxqc9
Yb+D6Hin+HNJr7R/yK/p/xn5N33OtC7ri5mv1rff83vOtM/636PM/GiuZ6Sv
kZ/Rf/sp4un9+4bUh7IseDK/jmXG46n/8T4C8UX+PPLPcP20R0flvv/+QtMr
mL9J/qN5fU/g9oR9Ovpert83r98zJX8gfdCfR3j79mWWR+1pz7G94XP8QevO
fOHReKP8z1G5Pz7zi3he0t7geVG/zI+g/kX//JOIf6tf3qe2nsL2lEc8n2xP
+EdlrcP3ELYm8sGnvx9FfzDH9zo1ztawTP+w8ykW/5/5FeSP/fPC95LzvPA8
EJ+0DxftNec3ZT4I6YPyQuNlvI1l6vv2x5tPjN6r6d+vns4/Gfm3R+1Z33+/
5+XrWRZerzU7dSQ/hafnM8eL+/pG5uNSHvA+xag/2/fzfafbc3yWTQ+0h11P
+hd+Mh4vfGT8WOPkfeK+/zDHE13m94p8/8J8g/Lm5fKdsty/X5nx1anvf7xs
vcu+z833dgjPp8g3oH9ulH8xak99mWX1y/yl/n0I+iv5PdjUv2ifjPgHy+RH
fXtnWv8b5QuN3mt6uXyszAca2V+j+3x9fXJa/xiVeV51/vJ+FemD7y2x3L9/
OC1PWB69f9XXP1I+n3Z/1C/9X6ft35d////m79NryiP6T1jfb5/4pT+1Hx96
+fewqb+N3ncazU/9iPpd/7535m+wP/Vj/eb9HMKvfvk9KdYTHurHp8Xfr7v9
afndq9YznvCrnZfp95Npj4/a83vn/Xh71tN/Qn2G8mnknxn1Z73LU/ow23P/
p8Zzmf5yrpf19Ac7DqZxt4p8IbzM16Y/gPnyxM/IH0H/OuMlpBeW6e/pf/8n
60nfjj8Jrpov632xf6Xv30189O2bxIfoazp/dqQPndY+Y1n9zjb6mHo/afE+
LONNzI+fLp8Wvj68OR7pTftcv3fq/n19KN/D1f/z/TnmL47ol/qY8Ws55vHN
Vzy+zx3fL6L9QPuq7y85D39Qfv9E+7vUvjvJ9bPe9prlpugu4xeUn/SPsD/L
gjO/v6D/5/1/8kP27/PLpFe1m75vxTL9h6f1Z3K+kb9wNP6r1o/WP/KXnrb9
qP608Py68cf7DKwXHS+3PInR+RPd5nsoLHO+Ufv++Zy233j+Ka/ID/rxoen2
9I+yzP59eZn5jSP/Lucf1TNfhvCtw9/K+3VT9+00XtUPKH/or6J+Zv7m+1Dr
iFdRfrG/5k/5QP2F+6l1PJs5jik++mX4L5eLfHF70ZP17C9ni3ZJ5t/Zn6dy
lY/z4oeH8f+HRR7QX0Z9v09PKb/8boT63y3xWX5/k/qK87X8O9JnmL/Isv1l
2r9rxV/ft4ftF7K/Lr+n6TzF+Tx/dDCc/1XL9J8v3sN0frL53nb833Hnu0Uf
Eh4yH2JU9r5r3s2hvsvyyP/JfBHaNyzzfgH9Ddxf2gP994VIL/y+QPJzyhuW
aY9aTugcrJb5+v5dxnem66k/c70sj/ID+vMnPxrho59PbLt4rflRtJ5bw/eW
+va+1+18Mcdpdgs/I30IH/5O753ij9U6zRe2J+4T5/u/HI/fd/W+i+/tFntZ
8Ge+G/1p6m++eafgg/yX8tD8eA7Po7zfsRifTPrQes2Hdgr++ucx+T3z43wP
RnDfKf5p5t+wLDzmfRX1y+9v9+3HqwGH+UvGA0b2K89vPz88802Fz8zHpDxh
/MRy1XmQlLfmm/q9U/xD9F/QH0F67N9/Tf2M51XrtxzcnHhvJvNVfS9WeNks
8PbjtUlvjis6H4HjaR7nQR8WfrgYV9wp5990KDreL+9Fzf//vaPA51vDfHjh
0e++Hk34y/O9pkW/90ap5/1c5qvzPIqe8vvXpD/i1/5X4aHSs+lIv7sNTo27
H++gvaf2f/yR+v/ceHvc8tcd9yC9O99SePJ9lvzeO9//4v6Tv4hOI8/95wcT
+aoX27o0ju9xHLRzona7BZ86T84Dvh374jjxTuN/zk/X/N+I+0Xfau+lCT8H
zQ+jeXy/yu+4PSr0z/ssprt5/TdzPMFX9bEp+bCY18T3sabvM5v+9P+diXjD
duDzsPB3j296H/H3vr6S9+m0nsyv9ni+T0z5zPNru8NyifX28/p+I/kt5Qv3
y+vSOAeNTwru28X/8STywxbpPu836Pw+mzkPYySvyH95v5n2l36t5xwO4zN9
+ZPy1XgTXm8X/r9wDn5xUOQL18d4K+XVSD5Rntk+Nt76+i/xm+eT8V2+j9j3
32T8hvyO9N+/T570zHw2lulP4Xm0v87fW+B7fZRX5A+Ex3xAeF0v/Nv3OjT+
XuH/TxbypnwfIu8vep8F984Efed7AmqX38sRfs+1ffR7oMYH9Vn6y61n+v1K
3oemfOL3R8i/iM+uffO19zX79sBK4zvmI8LbRoPP938In+T4OzHubzU7RHDv
Ff8C9XfrWfJ/HBV6IP6ob/C9VvIn0k8/Xy/vx4k+8nvjLI/ydUb0rXHyfuqo
PeVb//sqtB/5nme+F8sy7yvSH0d5RvlAeurru9P+IPrzeJ+G+jrpqZ9/dz76
1++dkL+O7Dmub46XP3xP8/yNjwr9CG++R7Fb7i/377+n/4L+VPIL7nffnwD7
9c9mIR9/u7zH8LPwm9vvIbjvxnl8o8xnPGm9cV/g5ES/f+93Snu+t6F5fM/9
uNk/czx8+yjwey/shEfFPp/D/Xf+sdp/6+PYx/0Y9/VyP6Kv36b+Qf8M7d2+
PyLvi/fz1R8I3vvvlnil5bJ+jwu+tc58f5X+Hdqbms/rOmh6sf5/J+bJ/CjC
w/xPyk++d227UnBsFPxy/xkvoH9CeLsXcD2K+vDz//TNgOcbcY6/VfBN/11f
3j6dWS/u33fOeAv9a/p/3h/o+xMzf7ifX2Q5FfbeL4603j99q8QfP0N+CPV5
6zPCx0rxH/A8MB7Uz2/L9xm13ufx3tuFsv/a73zPmPiZz/cHj2OfPmxxMOtt
jNeR3vy+rd+Bov6qeZ7NjDfh6enMejv3g/or/fX0L1D/nS/vf/wjreff/LPm
f1f/1Ub32s+DFteZw/Gx9fHML6F/gPbTfH3nvhn36f966c/4Mtfv/fE5UDnj
lX399IuZ4+LCV76PQv2E73MxftnXz47Cn/FWoRedt7z/pH3OeDHpkfld/F6d
fkPv/Pi4n7/787tx//jNYo9RHonPHgneo7cC3jwv/fNGfup37yI/5obfhXqj
4Iv8jPyf+hfpg/aZ+t2O8e8XfYT82/Fg8xnzOY27V/wNzMdkPe0tweXvBtxt
77F6H0XXu5rvJ/fKeef66S8UnM9njiO5v/2g1Af5PgHzC+Y/P7ae/LDoA6RP
jRt+1eV7Md9GtDso+bf6P+9rJD2THoSvfJ+D/l2+v9znp1mv/b0f+/NOka+2
mzW/v5dgfSL8d3/yUPD/1/fLeeN85kt+v6ZvXzAfL/lNX99L/x3n6/s/Mh7f
X2/mE/b5Ua6P+UTMT+2v59nMec6Up6P8RMqvUZn0rXeWHsS+vVvykdif/hZ+
z4T+YsLreIn2eb+8N2a55Pi9+O5bwvv/+c2SLyH74I2A772Cr/79zoyHUt9m
vgDvp1F/oD6n9dnvcFjGdzxIw75V6lmWnHxT4//m+0W/69vX78c+zfT7H74T
830v5NYDnbdb70a/2+H/v9/eKRM+j4v/Wf28z28UfGi8j2K8v1riO+Sf1H9H
9ib1T66H+ofgyfeKmW9A/zf9UTrf+F7Kt4+j/u1if9nul5/tsPEV7dudwq81
7k7Ti9TuXuDh7YBvP97/e73YQ4I7/Arfu6f5fuvbwudv/M3iP+jbY/m9Ytq7
pC/RR+a7U/7Zry946nuX1Ke0/5aj7xd8Ul+Zo++vPQ46+LD4k4Xf+wHv44Ar
7OhfvBvrPQ6+93bxB9JfTf7G88H1f4J4Kemd8on2DutJj/R/UT+if4j8ov/+
WdqvOnf3Yl2PYj3hpz06KOdNdHk34H1zwh5P/tJ/bwTx4K/JF66P9En4WM/x
JC/uBz08LvE06lsLdtgv92H03md/fWvNz0V/nOMk6rdX4Bc+7wS+Xx+W6W+n
/OP+ML5FeU19h/XUr1jfzyebLvP9HcZjWCb90p8j/pXv79LfRH+u1vOB+Oe/
/ssT/iF+3yntbeKX+GN/tqe+1c9/Tvj77Uf1OR7jByP9kfCP8p1G4xFewmd7
yHmiLNMfwf6Ed4R/5i/R/zaCn/djR/hnvfUX66kvhz/eV2U+VsI3Or+vSl/c
/9H+jt67Ypn6hNaT3+vrf2+a3zc+0/IgqM+YLhyXk57yeuDpnZL/S/uV9hX9
h8yvl3zI+1Sj93Xor6X+LTrN97VY5nmh/5L2LPmn6CTzbVV2HML5XelvtP2s
dmulbH+G4PB4+X1Rrs/7vph/kftFfPb9OylfyJ9P+95cP96T9MR6+sOEp7zf
RHuD70X1z9N0mev5HPFWrqf/nlnaU6P7y3yfRufO715YvqR/SvNkfvFp74vR
X8Ey88lH54v08AnyeVhmf+KH94n777mm/5v+tdH9De6nxnFc/GHZX+ZPsZ77
QXr4PuJD1N+69uPX7AO1D/vih48K/uiPEz7y/XvyL7XbD7vl9Vi/9d7jgOOB
+m29W+CnvSk3wP3Y58cT8TvbXb+B72w6/v0v9PujP5iQd5lPo3XYT7hV/Cvi
Y4fx+1C/B9/S/I+/U/Lh5R55L34/Kv4b2sNCs+nG/tKtwGfNl9U4u7H+eyf/
F6yW04c=
      "]]}, {{}, {{}, {}}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 1.5104009543358297`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{567.75, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 7}, {1.5104009543358297`, 10.510306284169245`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",ExpressionUUID->"52736db6-d2fc-\
4406-892e-ed1d8ff3c10f"]
}, Open  ]],

Cell["\twhich fits quite well", "Text",
 CellChangeTimes->{{3.825705338054305*^9, 
  3.825705353890681*^9}},ExpressionUUID->"2ff92404-1314-417e-a864-\
9cd4218c3cc9"],

Cell[CellGroupData[{

Cell["We also did some additional scatter plots ", "Subitem",
 CellChangeTimes->{{3.825705349466775*^9, 3.8257053690402946`*^9}, 
   3.825705810559613*^9},ExpressionUUID->"c8dd39a5-f200-435b-9ef5-\
669c5de0f20d"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJy1nU2oXdd1x6+upFi25OjDsvwlW7L8nVInrQMNLUYvpTRVMYFmUolmkBga
KlrIqaHcpB0oGIyQSXlxMIQ2xqVxQYEW06SDmEJBtANPWmig1BkVPAmBZNCJ
S7Alu0d3nbPW+//22mefaylvctlv77M/1l5r7fW1137w2S9/7g+Xi8Xitw8t
Ftd/13/dxa3fefvPj77+mcNb9o9LW3/XPX3bW6/dtjXW//VfXf972Mv/9s7j
n9/+18Ne/r/rxXf2efl66fHPH0T9ASuf/IetJ9YNPuL1rfIbD7zw0997I8pv
vXZ9gvu9bPO/BeXDaB/1n1t3uMfL13t/4IXbrfyNF7de/8z1Dob5/+Nfav+L
81t/cfR6i6V/f9t6gGG8n7wywG9Y79aXh/7eO12br8H3Vi+fWE/oqJfXzd8e
+uu+NdQP7a88u/XU+m+3t19P7+j4/Q+2vnT978dPev3T6wnf6eWfXV/+T2M8
268jXrb+D3nZ1h/f6/zG/WJ/+xx+Vv/+6bFs8I/5E78EH3v8yfc7yrbfu1E/
9Hf228N+3Y353Zbvd9K/zT/gY/u3H/0N+Hry6wX+GX208Jflenv2b3AN+Nl+
D+Uevw3epI+h/LPXiv0X+k3Kht/D+FeeH8q7hnmcGeC9C9/v8/bcH6u/J29P
ek3Khj9RtnkM+7v46rBfu3w84oPgbw8vw7/A5zU9fWlY/8vf2/rTNYAfxXz2
5vvVj0d6Ib81+o0y18+y0vs4/wMOf6PXhY8/yR97/m/8Jcq23n1eNv58h38v
+E/66eFn4+/J63t+aft1Vw5f4ucMeK3Ja/v4UP7B1n/8+/W/B318gV8/P8LT
xg/8t/3ifgQ/bK3HzpsDPr7A0/sf4PPySwP+PAD43ur7Z+MP+Or8P84X6X/r
wjB+jGf0Ocy/pz+bb9CnwSv21+D9UW9P/r/Gl1dP5etx+ov25FeE93q+P3wK
8N2P/Qp8IP3L+hJ8Ypn8Vfhlz79lfj3+W33Ax/4f4xk/OOTt7fx9COuP+Ru9
jf1/VenX10N+FvJQzg8GfO3xxfYr8FHkk35+1j7GM3iGPGL4xfMn5iP4zfX3
49s4B7xs/CPgZfPf4/VGvx/N1+PwCHwx+MX8eL6ZfHPM12vwjfkZPAKeBq/g
pzy/jD6WXrb5Br7bfGL/ZX8T+ZjnlfTfy0c2v6tO33Le9vUGz2hPeYr4lstn
gS+230P7Xn617z84PZblPPH+Rv71t8q//vO5ofyBz1/OA8fHKLPe4HME4+1D
+xGfLg/855iXDS4D/m/9zbCfwY/IDyiPT5Z7eJGft8p6/l4e6Gc8r74Fel8N
+LI7H9/xO+qFnhL6FP6b7Cf3g/TP/igfifxQ0O/lob9T1fXYfCr6Xw9vw4eB
fnr6En7j4wd/prxl9Br7Ievpz1ODN+X1o9XveZ4Z/Qa92fqPeZn6g9WT/9yF
+qBProf8xPDt5LC/2wN8Dvr3Ro88v3gexXoEn4gvvTxg3y+9PfFRzlOup5dP
pP/+fDf8OKjt/+uTXub8CX8p+/kX8r3t9zj+tp7v5F8teYzl/vzm+cD25F/c
P56/XB/ld8r/Vj6R13/l1WGeQS823nEvr+d39rP5fvG86uUjsaew/74s8gbL
CX80+I30+HwBT+Jnfr7d62XDJ553gQ9reL75hJftPA390/An5Dfbr8CHdfXL
v+pl0qfJsx/D/o3wXhXwpTxs51XMn+s1+r4P+/Ogl2U/enwX+b6nD8NP6r/j
+ldDf0HPNt6t3p/tx+3en8Er6FPkL6eHGM/gFfKewX+UhynPrAr+YvPZ7/Mx
eAW/43lv/RH/g94Mn+vnB+09ch75/txTLa/7++JJjB/jGX6O+70q5HvDnyO+
PpvvCf3+z6J/tW+U/Yk83cPP6OVO75/8wfA18MvqA76KPzV74d3V78nvaI/K
x+f8QO8FPOrzXf9+7ZSX7bwn/kTZ4B/4nfPjow5Pwpv4ZesPfKS+o/pkuZ82
38Pev/ErzNf169UAj7BXGT4HPVF+YH/kt1Z/wtuTPmi/JL2t6f+7sV+2noCv
weN+Lxu+xv4bf6M8GvzM+GvQ//p3h32C8F6Xn/w44EN9Ovh3y74n+lXCfwgv
m99xtI/zx+D3SHX+wp+7Ut/heCzb/pOeR31qe+DHYU/l/tp+kN8fQHnp/Qm/
d/18n5et/Sgvr9Sf4PMPfd3gvcv7N3pZen9Gn9E/5UfD54q+5fi9Py+7/LvM
+0/WS3ux4E8vD4n92s+j3fPqe3gZ/N7P/VH9eWvla6fH9rZ/oR/Svidlhy/1
tcA/4gf9CSIvXHlO5ct+frYf4/pK/iX99fOx9Ye9h/Z+wccZ44m9g987v6yP
Z/R4n49H+Ur9h9sDvIJf8XxRfWk19B/wEHuazyfomfKZ7Tf9v5SPaD+N/czp
m/LTI/n6Hf8C3rRHiL2S8KG9s9g/2Jf672lfsO9CHqV8IPDv9VfSG/3X+fr3
+ve0j+n526jvSvsh+RP5h50PAW/r/z2nd/IH4e+O37u30nr3T9B+E/4n43+B
n4ZPwV8IT2tPfAh7qM134fOzdS19PNmPxblh/951/7P651cDvcT6xb5Kfs36
5PwwfIvzxcaL9Yt9r98f4mvOz3d5e9GPuV6n55nwIf9M9ovySuv8l3o/D497
e9q/hP+4PRry4Q7/gcFj4H9OL4QX6a3CD7rLQ33wQ7XvN+qT/qV+cWazevbX
+r5vb/Ac9jfBZ6FH1w+CX3A/iI8sS39daf8kv2qdF7SH8LwzfLoD44V/kvKa
0Rv1mTgvGP+i460gP5X6u8QLdaU+37IfGL3dX+2P5w/1R8KX8j7PBxt/KF/5
vs1372OoD/jJ+dGPZ/ya/uDYf9m/pN7gU/EPuP0h1k/5hPAnfGnfIf6IfkN8
4HodP45Vx8v9uTEe40FM/6J/vOKfSegljw9Z+nqEnzk/jv2kf1/paVXEC3B9
Nl7oyy16zuNN4nuuZz38p05hvICX8f/QP0VeTPRDqw/4SzyDfx/xR6n96J0j
+XjJftv66vr0+ndR8weO+3OoWqa/wL4P/k37kcZL1vTl+L7Fjxk/Rfs9/enE
d8YbiDzq+knwM/qDCY88Xq1u/zD4xX5bOdobfo3xM9vFeo0+6K+L70kvYq/t
Svsh4U1+L/pWP76tP75f/+7QV3ie2XxuR//D/At5gfrfCvr9heL8p77I9efw
+AT264CPp/rGBegr5wZ8Cvndyu+7/M75CT72+2n7G/zd2oc8IPPty+K/ZPui
/xGecd7ZeUb8I/7y/Ar7rfBnp4+wt1IeIj8We5/re6FPqXy7Gs7D4Jf2XfBL
qw//g/Bjh3+sT+2lo70m+JP09/JLhT3X4Et/WOijYt9L4nly+TT0ffIvwTfK
W4k8QfsY641/jOfVheL8EP3E10f5MPifyLNJ2fYj+EFufw57IM8Da894kNAX
cv5Pfs/4yYhH1PWO+ED7V8iDwh99fwO+lJcl3sLndzwv9+MbPCr+ZKe/o162
/YvxGS+m8WbnB/p61/mT8fOwXxi9jPFV24rfTl+x/5P6tesDcZ7m8Ug8r4bx
nd+F/dPwI+Zv6435a3zYaP8New/vW7C90A/b9/gi6/N4t6s+H4NX2MfE3u72
jpCHCQ9pn8CD87f2dflN4jc9vmXp81f4rXS8DvYgx4e9Pv/c/hL0bPC8CvvV
Av1RXma8WA1fyng0iYf2eIKQX4iv5Ed6HwX99/Cz+rDfWf17OP8X+fc8//r1
G7lyvohn3iHPW3+MLyb9kP/U79NY/YgvG+onifzL8QjfljyWy++8/xP3v3h+
c348j1rjG78KfBH66WCv6HgfaaX4kcjXNh71gXp8jeB7Im8R3jbe49X12Xhh
36H/RP0J2xV5OfCL+CfxbF6u+x8YL2Dwju8Vv0Z6oj2C8iz917zfth/l+J7y
jsgLjo+HUU9/e+U+SCJvKb4Df/r9lvjM1vdF/aqwd0v7K88P8sAS8Kzbe2iv
oj5G+ZPy4vp3R7xfbk/ifcMaPlxUf7mXeX+T8YIRf0F6JT2KPp3An/4VxtMa
f6C97Vi1Pr+PwvXV7fu0Z/D+gZX3o32sX+m1hA/jjY1e6vyP+yXxj4k/kfjJ
eMtc3hz0zUIfR7mDvYXyEOWXGfX0hxl+0T91y7z2xK9i/quKP/JD9j9j/mJf
T+izxS9UPlxV4lF4/u+plnN9N+ZH+6bEb87gd1Z/aHZ78m/xX/bwnYw/oL2r
32/qN+Tf5A+63lF/DHri/NW/uhrGjfrXd97ncf9K6Lu5vHkI5Zif3NdwfSPk
Y/v/Hoe3lUPepDxr+BL2MsbXSXyW789HvH/qK7Qn058r96dc/w77m9FP2Ido
3zR7EuWTiF8kf6c8w/tn1j7mI/FESXy0rNftUxEfLf4X19cPVscnvGy/GL83
7jfiG/x+A+MvYr70t4n91O2dxK/Qj6U/3x/eP+P9h7BHbmpfkHgP2isc/tSn
43vehzZ4V/zdrm8HfRp+xvr0fmCZb0H4veNz3T5j9F63j8j3vM/O9SXrFXj1
9VLu6VXsIbx/WPhnVjrfDv4k4l+yv1wv99fmQfvnB5jPXh9P7E+JPGfrG+lr
rvwU8ofBY4TPueH78EfQvkP4iL/O6WGJ/Qp7Ffknz1+xn/t5R//E0sscX+oT
+VDaJ/Uy/6R/loVeFmeK+Yl+muQroP+zlR+B9i35nvJAUqb+QX7fmq+M7/F3
zA9RkRf9vF54/eR8KT8xHrk1fjVecH773B50MJ9fIu8xP4jJQ1FPeE7Wuz4Z
/FDjCbGfM/pryd+ir/X9Gf+pz5/1nA/jZ4jfRv+Rf4XwZHzh5H7OqGf/tJ+r
fWK78N9P1if6Ee0d0/Xb0L/YP8oz4Ev9O89HU7cfvLEz30DyPfVvzof+BuFf
fXux9yTyPu3h0l/iXyP9qr2rvK/E+cn6kvbT/HJV0APjU209Ec8n90UT+Of3
5w7n/Sfz5f0Cnj+6/pp/JOAh8nwCb/o3CV/qA9Rv5L4Oy/34Yk/t8YX01NKX
GO9h/dD+FfyI+Mj9pL7H+42Mv6O+x/F53hC/NN7hYsHvtLyCP3Jb7dk9/Ay+
lfjsJB5a7CmuL8X4hC/jWST/HNfXz0/tBSvtP8mvxfjHyXhIl9+ZnyPokfdN
GA9LfBb7QYu/u72X9h3GOzIeMeppnxZ9zvX12A/Cg/If5YNc/qC9LOR54d+J
/KT8ZMTf+n0s6tu5/TboifYK1Y8wX/en8z4R/ZvB3wg/zneyf8ofhJffdwr9
N78PFvuv+Y/OD+NfOz1vvNI/wvvoxi8jfsW+D32T+C3tE3hwP0TeS+4rUV7Z
tMx4mMmy34cJfZDwkfn6eMH/yX853iR9JecT2zN+g/ZWm9/ozyjjdYyeIr8a
1yvlxN5Cexv5H88PwWfndwEvnv/ET+Iv5SnJ95Tsf87faG9kvtFKfyO//W7c
1yd/yuOPK/rNDH5LfYH2oNb3lOdz/kp7cQt+1Pcifw79Da35UX6a1C+r/LZ+
fuXrYTw575fEfcJWvBv3k/TD+4L0v07KBwV9rgr5avo8Gu0tdfsk6Vvmtyl+
zoC3lBN8OQr/M+mf4zEenvaDSXtEE9/G+5n1857f23kd+sbRnf7xfj7kj4L/
yX17WV9iz5m033XlfUabP+MbDlT7b+03zzf135wv5Glbz51e1ng59Nd/z3hC
3helPYj+XjkfuT8ej7fw8UjvvJ8r/heWE3qyfmfaS/vxeB9X8mNTvi3gP34/
5mss4U//Av11G8lLvt/MH3MA7QOfSU/ijyN+tODF9S3OFfRD/Yj2WM23CP27
VZ/Iv9Pwgv7dXR7oc8h/sziDeOszRTz5pL06OU8m8zW7P7vOj5hPw/bnGuTJ
Sj7MhJ+18EnOO8qbiT+N9MJ4CvprbB0Vf4bb00P/k3iO5Hzn/QKRH4t4nJK/
2P+v5v25PhDyAv2Zrf2g/1L8o/R/bqovJPoA91vwLeGPgl8t/O0uFvYf9r9G
p396tDo+4wtJX1KmPlboZyvAf8Sv8M/Q3017nbRP8ldM3mdJ7q/k9294v43y
dqyP5wHpmfLhWzvvYzq+34LvGX8Z7yfY74j/F/T+k9PT0sfX/kd/9/s5Pfn3
pM+AH+935P7eOJ+MP0c8Guc72d7jT0L+EPp2+3XQM+2l6l/d1vgk2oO6Up+e
tB8V59u4v0Fvkj8tkTcl3tL9AyH/5PlEK/fdGP/TMZ/uSuU3zz8Z/Yu86/aR
2A/Nbw550+XJSj60/nyelOeTeCXmmxF6pTzTXWzyy0l6cfk34hNkvq0y15Pk
66D8uqk8MHmekN/S/tEqJ/YFlgkvlhmPSXmF/I7xkUq/JXxIXwbnyEdBfYb+
6xuq31R+oLwwW5+t50uczLeQxKuo/lLGr4s+2Pq+Nf9kv5l/ZxIfbhS+Vfys
3A+hPJzcp5D1tuo/hL1C5rvp+jeWZxvw9/nf6u0n8SXBR/IfvpfFeKdN69/Y
mX8vmR/Xq/mTCK82Pk3SH9t/aHqf2b5jvDfP89KfwPvvG9U7/MJfSH5B/UP9
qWV9rp/X7Y+5P3WRf9/Cpw75jVrtqd8l+h7jRxmPz3xKrOd9kml8bdO3xGNu
+n2y/y14En+oz5M+eZ+ndR616lv4y/NM5OGknvg7+X2Cf3n7wF/mp6D+I/In
9dWEHlrlnD9Xxud5nZRb8kh+3zvke64n96/X/Znk/8RP9kf7waQ+OAPfJ/XD
1ngFPpT8m/qX8IfCflPKI8Qv+ts5X+Jnjq9L1NMeUj9fxJ894zzi+cD2HF/8
Xwl+8X4R5cOWPib8xvUNxmNW5pvEJ5B/0Z5CetP2ZTwt4cX5TI7X6t/LAS/i
92T8gdszgr4m9WHSo+/fnrw/jp98T/yhviLzae1Xh3yvSZn0zvNI+Ht3sbDH
r38XjI8L+DLeiPHTPH+sv4gPmrTfJucj94v8iPAiP2A8lu7HquJfr51fZf5V
7k++nrq+wO8JX57PuXxTsd9wvzctF+dnYzz3T9XfW9vovG6Vk/nI/b8v1Orr
+a95f1Djp2v+jpa+UR8vv5/A9wz5/hzv7x+q9p/nc6i8T8z1JPCYvi+xKvwX
5OfUX9e/C8Z70j8Y8diT9qcO/qzE/sr4AfWX0T9xsTh/pOz5/OifuxXjjd+v
1B/K86V13ng+qPp7bJwP/WnMj278J+QP6rfkn+KP7Mr7+oQP/ZecL+0tCp9y
Prl8Euc34+dk/sn4yg/w/dlvazxE4s+l/2cS/wt+sK38zP2NEa8waQ9N5Be+
f2H8PN5zzO0XjH8N+5PoO13t/kd9P4RfJfIfzzvVr0p+Mbl/CX629ItWmecv
8Yvw4PecX+u+Gdvn8Za8T1T3x+fvQYT/eP27IP+v63uT/Z/F+7oJvfB+stB7
4n+gf87mF/5A6zfGm5SHE3ycXM8MeFLfIj3Q3ibtHZ+Y76Ay3xZ+ET4d/FWU
Nz0+oB6PxPXKffSEf5Cf6/lX4ivlFfJr098Z/xf95fI/8zlV6Pss3ntO1k97
T74e5qtdev9WDnpjfknaX+T8TOQJ6pP0v+b8aFkti/0iyd+R309t+YcD/2hP
Y/4KrpfyyVu4Ly3w7S4W+2XnHeVXvsdQx1/W31DZ4xfq/EDbl/mw2T/pj+VN
58v94PzVX9/OHzKZb8TvV/38dK2e8jDf55HzIokvVPlovM9beX+E/Sf9ib3J
8+eEfCLyXmL/oPyf2ycpD/I9OObjX+L72D+VH8t46nn5KqJ/nscGP75/Xsmf
m5TFnsT7Fl0Z7ybxxkmZ8grvhxg9RfzfZH655Hvef5P4+6607zIfP98DZP5J
5U9lfnLJb7s4o/nTen5t+BT6h62X/oC4Xy/50Iv7+uN6Pu71Kn+M9ER7Xrwv
J/mceL/7yvP6vuuVbw7wvy9v7/bwoGfKQxLfxvvHnm/oAf9eznvHN7y/+WSs
n/FBzI+n8saqOP/4njrzMWh5hfvT4/5FvjGbV9yf13jecX3Mtx7rM/p70tvz
vNX4unO4PzHmG6M9KeYj55fHx8b39K/zvjnlF8OvgFf+/nLkM+N9cb2/cLPL
pfzN/SW/of7KMvGH/Jfyp+w/80F1iIdn/K7Hu83PXy7nifsHaf8O+V/zVSGf
V+Lv0vxiyIeZ9Ed90vC9sp6O+aa2C/lZ8wFsF/AV+bgr35cTf4rLC5SP9lbr
Jd6U+8n7d1V9OuQdkQ+Yz8vpZen1lE/1PsVK7R9+H+max4PSviP8wPMb1PLX
Id9UB//WVvleHOWR1njU1+lfkPkk8es3Oj/Ghyv+lP1b8ee+/9uS/6ikH4E/
8aO4v9nAF66vkJ9XKl/08on9RnwB6VH6n0G/N9S+X6/MZ9PvE3ygfSKXHxnP
R3xYVtuzv/x+QsxH/aUjv755Zd6Xmoxvr5bJD2P9pBe2b33PMuE7OZ6/z/ve
6bn9cb4s8zwU+mR8RT++8HeW2Z73y5L7TrxvuFGZ+VBZTuYzWV5cKu47SPlG
55uUae+82ePxfJTzhfVny/d3Wc/+xd5Y7M8ljW/YtEz7Rmv+xflc8kPRx25C
ucVPxB9dvJ+M+zM83xP4k5/Tv2bjhL2q5d+jfZn2shb9SLzcjO/FvpqUOR/y
N/bPMvUXwmeyzHgV1z+YDzj6t/aV+3/dxWJ9xFee3yo/XCritxjfRPs47deT
9vQE3yhfTuJLP79J+CRl+mc2tf+K/TMZvwVv6utSTvCPZfoTCB+ZX6v9jO9b
9Tzvpez8ku/f1OOVaB83+gp9Xt+nKfM38n6H1TM/Ju870v5woFrW+7GlvZhl
rqcV32XfD/kGE/se4yXF/pTc77f9mN8f7THMv0B9TPC71x+4/6LPeTwD9ze+
5/sEtM/T/sP8QJrPosxfOQkvv89ez49g48d7gQLPBL4cn/2ZfSD8gbyvS3+d
fN/K55B8L/iQ7D/ze9I+bPaLY/494ztsvWFfpH2V/k++f6b+B/gPEvuo/X85
tL9czE/qm9837tM6flB/GPwTib3L9ofvqUU+T/IXwe/FmY3pdxK/m/3x+zLe
QN/raI9PetL79ZcLeYbyEeOr6E8x/Ax6F/zp+Yn6j/CeSnIeGz96DPMZ/CE/
eh7rWel54/FndXqw+fM9UubPpP8u4ndsvHivx9YT9vtcnmM8Fv0tEb/D+/vy
fVK2+fG9uDH/2TcH+h755Tl977LIf1We53r/b5x/vM8i56XvX+wH/U9WDv8b
z5dN71MxH5Sti/6+vdX20/pB+d5tyx+Sv1dYzx/ZKrfGk/KV5wr9h/HgjOdv
xftvVO/j0T4d7z3a/jAfdtCPxJ/QP9fBf0f9MjnPNN/H6I/me0q8HxP5Ecgf
+d4a/ekt/FX/PPiVnweRP8DoMfyhlA8n7y91yFeYvB/C85Xv2bbq83g20jvf
26zIl85f4jxhfMpkfGUSDyfnY6ue9JLoKyzTv096t/VEPu8c/lFPfsjzgvrs
ZDxbcZ6U+croXzN+F/xd/NWJfNiaXytfOPMPkn+wnJ+fAzx7/mf0xfsmAU+e
l4xnyO9zHMZ4jEdi/j/yn0rZ7xuEPsB4AenP4/Mi/6e8t37lOwN8j1X6L/Fz
ej7tevbHeHhjt4EPPJ/IL+w8o/2J8SG8/xfnj/izkzLtZxrfRf5AfYb3Bcr7
RDafWB/fV6H/Q+m9HE/fu9y8f5GPm+9v4vvW+ovv2+97ij6xuDTgd7w3QfwX
/HL8j3y15Ne0/7Tu4zF+TuPZyvybht/k7yE/Mx7f1ll7j6SM79P1MF/GCvyu
/f7nJP/x+VAfozwX+bcp/9HfTnjJfHv5oxWvz/VTHp8ul/k0bFzGw/H+c7zP
YPvL8y72i/iZ4zvP57Cf2nyWPp6VAz94fjIf/6S/YEZ7xpezvczP7Ufz+2OZ
8aGtct5/7C/z/6l8UNIL4yXy9/OYb7KeL4XteR618muQ3ltl42djfOqlwv9H
+Vv1wdIezP4l/nVGmfZhxuPq+3G1+8qkl/0ox3ikB81fUN4/oL5mcKvhR3le
0N/Gst7H2i7s8dP5bcrzZPJ+eSJfTH7fym/r+sCHrE/Ktt+0p5AfRH8Gz4jf
Iv6Sf/I84H2L6e/L9jl/rrfP9Vu+V1f3nwn+J/548RefLd/npb2P/Rl/ju/l
fgb5+Yz9ZPxgfh8z6G/yvZBN3xNJ8hlzfhJvMCNfZp7PtN5e7cll2faX+FS/
D0t9m/oU428n+QfLjEdhfzPkv9Z9yFZ+p1ZZ9MGurX/pffxGeYb80SoLvXo8
W/AnxjPy/SzN17Qq5tc6T1hu5cvK5Q/mP525P0n+n832t5E/+hc+fi1fGPNT
837pgUb7iAemPZX8cXL9Sb406ivT71G1xi/9/5TvaC/V+I0yPybj69e/4/2d
ZP7Gv+O8o36m8yF9bAi/m91+U353E+opn25GLxeK84f4ovH9rfZ8H7087/l+
+uT9A+8/7s+17DOT3yf1LOf5i5ivamZ/if+V/iPW0x5s5x3v21XuGyfxijZO
5X2lfnzCp2WPoH2d+RYm87Ml/j7pL6knfvP9spa/JLfvVuCX4MtkPG1LHmrp
TzPKtt8j/Br5lrrSPyv02ip/iPlRvmT/vB9m50PlfdS+PeUf5ou2/Qh9hfGL
0/iL/FY9/gt8W/27vhzzUf1hW/Wrqr2E979DPrT9jfG4fqlP9DVbVyXfUlfa
R+R7lt2/Fvv39s74+cRewe+lvsDX9v0r+vvEfuj7M9eeifES+uF4k/3faH1r
/TPspRu1b/a34Xx+AfCT+w1JvZ0Pgc+T9NeV+VOk7PIr7ytV2if0N6m/VeNn
KQ+N8e+lP2Oy/RW8785y8r2UGd/I+SbyP8efrE/kO7Xnbhf2Vt63m7x/5/7j
+F7Pn/E+X9RTXiN/o79Kzq/E3mbjx/wovzAfjJ3P8X6anX/XYM++drrW3uYT
9RJ/15X2POaPWRc/dWoor/Q8SPJZE560D8n5xfcAO8R7Xinf6+T7hswXlMfP
1O2ZLIu9zPUl6nPUh/n+ZMRHGP0fmz3+DZUT+7nBI+KbDF8P+fxsPyJemvIQ
4yFaZaM/6msz41G6tv2T7Vv2cblf4Pe/o0x/DPWBPP9Q3b/C/Oly3iRl6qM2
n335eB3zZ5T5k1r1lMe5Xin39NmK55T+k/yeLXgwPpnxzjb+oXz8GWWDb/Rn
/I75hmr2qBEeER9F+Nl+xfyIf9b+cKW/cf18H/gIvmf8M+3JfH/0qO+PwMPv
J8d7gjwPyY9f2Hm/g/cT3f/L+w31+0/a/6qIjzP6DnjTPi3xN4zH8Xhw3oep
5P90+JO/zNRv/X5MXd9lvCnjMeU8Sfwxtp9jPP2zxXlr+3rUvxf7UBL/Q/mK
+Mj805TPyI9s/bEfeb473v8Z25fxobm/NvBN4hGK/sb5DvH9RTzzc8N4Ee9F
+jd6iPe7t3fmkxrvc/7+Q97+7UZ8vNFb3PchfUg+J5c/ef+wfr+D8g/pUeOZ
S/wj/6f9lfhs8zuCcsBrje8/fEq/f/MRL0v8eoLvjLeU9+G7Mj+Y7H/Cv4y+
jqE+8J3+WKPX4MeSTy6Bp9FTwNP2m/dNyf9+w8uaT22Mr6T99mGvJ/7zPovV
x/zZH+2Nm54Pgr/N86D83vDpbq8nf2f/Lf5O/OV9Ot5X0Ptr5flM+rX9rrz3
7OcL75NQfovvuV82/8BPm/8d+D7OB4kPO4v89p5/72rVfyznFc8Lt4fGeUP9
y+AR85/0z1TPH+rLd/h45P82Hum37o+kv5XyZet80vOsjB+jfMl8G0qfq8K/
S3qnvZn+G/I74n9+nzzwmfFsUk7i14QeXZ8N+Zn5/Gx/+Z4y5aGYj9x/8Hxo
Qd+Gb8T/29E/70Mw/+lh75/+MuYTsPW18hFHvjaN1zin9vJvvFjk05b7NWf/
Xs+nr7xevFdC/pXHH0K/GfNvVvWBYb9+8krxHjbv/+j5edng+8+/gvGPoDze
V76k8rv7n+71/VV8KOOnc3pmPkvmexzvX19S+PTr5f04w4+D1XIrXqeF3y/s
vJ86oz3PI8qjuf4Y563B7+683OG+Ylfad3meUZ8hPuXybt0exPvbIt9RXic+
ER9Ofr3wR8h8/H7xnd5ezpuTrxT4peu7bPB7MeRXwZ+XX9L71/14en+5zEch
9ovR3jbaU52f8L2euvwo87/yHeOP/3Pavxd9/Wwt3+OD1fHk/unI37e28vY9
PDTfxoj/kX+X+o/B92Evi35+165Pr/frD/7E640+T6C/kZ+W7yFRv6V9hvou
9QXeF8/j1Yf7xJ7vN+QV+3+sX+DN/Kwd7Dtdmb9Y7tP5eRjzt36Dn+bxRvRX
RXuebwbfiN8nfMm/NR/S+cI+YfCP/bb6BzEf6kMBb7Hf8bxI4JnnC2T+tji/
7HvmS4p4b8YPi73zR2N8Eej1x2EfEP+j51+jv5DxPPS/Bf0IPdAftIX3H5mv
sUN+/75e9r/Id1y+D7ge7+InvGznS+wP/YmCb/1+Sf5byq/Md9y3N3p4F/J3
xDtQflV7/aqIR6Y8vF7ef/+Rw5P2d5tf0J/BO/LBS/xHR/vAqtCf1uvb/Zte
r9+v1L/M9Sf7Y+XoX+XT8wO9RL4/g1clv2KH/FyJ/5L6pO3HQz6e4gvuP7l9
YenrE3x0/kb5jvE5wR/te+RDfDP4C+0lpKc1///jmL/NN+Cl5095f93gh/iY
gzF+nt+rHg9H+Yv4JfqZ86v7fX4ij/T8ydYV8ZXiD3Z4BD/M8xnTX8N8D8H/
DF+DPoye3oV8FO8XKL2fL9Yv9kLPxxH8S/OjN943TOSD9e/XTnmZ/gnip83v
3i0dL+xtzG9I/zPxmfhg8IrzVuy7XxjjewNewk+LfM3j/j7q/fF8NXwJ+dTm
E/u5Hv5ffsnLQm/JeIy/1v0gvyvzAeby3qHqeLn9I/Y7X+9o32K8TZnPSuOJ
EN+c8G9rfzXn131Z4/NKeNDfPF0u/RdreLw7yKduL6z3R3uLvHfi8fjhf+B8
xV/i8A1+Qv/9ej+e+WXUwx7z4hO+34QX43noDxV5u2O8wOg/Yb7VpbenPGfr
u6faP/1BrGd5Df///ZiXeR7l+vUndb++91ld30OR38j2534v23l2XL/fYX9e
n6f3cL5L9Pe0fr/Dv7P+3cE/Kf9O6puUP7menj5F/ijyFyO+NrF/iz3K5ZNY
n+Fj+Keof9n+B7wM/46iPvi1zSfOB9vf0H9sfid0/B36kOHneD6esfF+/Rnt
z+OxSvuQvG/clfqu2kvOaLx7EY810stdXp/HGwb+2v7HeUF4qrwy0Pvvhj5h
4wT+G3zj/LL5PoH1PuLzU39g+f6M8DePV4755fEPwR/Xvzvwnf4l2qdZr/EN
Fwv7l8hHft4yn2vAO89/Bv/Tq4F/th68b7SDf6zx44sDPibxmuQvlA9tH6J/
ni9cH/GT82M9+7Pz4lG0H/MPXSjkLfXn8b5RqzyuL8anfG/j0T/J/X5gdlns
7Xx/LNkf9Y+V5zXlHalP3vvQetz/aZXdv7PX6/W9nvI+E+0vvM9s/OuYfy/2
puR+oa3n16zMfH18L6hfv+rbiH+jvFh8X8bLibzF/UriZ6V9q579nS3fF52U
H5P3r1r3d6b7w34k8xN9KNGPxB7B7wt4l+89TcaXu/+7Nv/FgvDm/dhJ+Cfw
of1kEn5Jf2ofA3xb9Fu0b+xXMj/Z/9b+dqV+PVlO5Anxb1ffpw77k8TPU57p
4M8d5//MY1b2fBehz9IfOZkfpm8v9hS3l8/Mt+PxTlGv8vcK+bVYLuNl1H5Z
6rPCP7syv7CV47yx35CnRX9OyrTXW3+3eH/ULzT+YqX75ect3+ugfSfOF+XP
JX5N5ptL8FnwKanne3ESL9GV9zElXxT5u/e/yOu78v4p/a30F1IeJD9q3V9m
vhrjD3E/Q+xTyf3Eje6Lde37VxJPzvO2eV6f0Xgelh3e436V93F5n5j5/+kv
Efta177Pwf00fnmqur8SP8V6xvMV8X7n1D/Ut+d9gVR/HPUD58cPO7zJ32iP
M3jU42GNH4Z+bOsP/czgRf9r2Oupb5q551GHB+VTg8cpLxs+GH/fOnLXp0e4
petz/TLsm7Z/sAfssK/YPE5p+eRveZnx8GYeeQr1fD849GHbL8ZH1eNl7by4
b+v/AYFW5jE=
     "]]}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Bottle_Volume_ml\"", TraditionalForm], 
    FormBox["\"Bottle_Cost\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{570.75, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1750.}, {0, 7.075000000000001}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Input",ExpressionUUID->"d446d5d4-984d-\
41c6-911d-c3da1a56972e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We also merged the three sets of tables, for items, reviews, and invoices\
\>", "Item",
 CellChangeTimes->{{3.826932016381528*^9, 
  3.8269320488329115`*^9}},ExpressionUUID->"c0d6c13f-e832-4fba-b20c-\
dcc6eb917b9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"withReview", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.826932056412068*^9, 3.826932071553815*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"9f6ed7a8-510d-4da8-8193-0bf4b9350799"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Invoice_id" -> "S16866700111", "Date" -> "2014-01-15", "Item_id" -> 
        23827, "Vendor_id" -> 297, "Vendor_Name" -> "Katou Company", 
        "Store_id" -> 2567, "Store_Name" -> "Hy-Vee Drugstore / Davenport", 
        "Address" -> "2200 WEST KIMBERLY", "City_Name" -> "DAVENPORT", 
        "Zip_Code" -> 52806, "County_id" -> 82, "County_Name" -> "Scott", 
        "Bottles_Sold" -> 2, "Item_Description" -> "Arataka's Cream Soda", 
        "Category" -> "Cream Soda", "Pack" -> 12, "Bottle_Volume_ml" -> 1000.,
         "Bottle_Cost" -> 2.12, "Bottle_Retail_Price" -> 3.18, 
        "Purchase_Cost" -> 6.36, "Customer_id" -> 2340, "Product_Rating" -> 
        "5/5"], 
       Association[
       "Invoice_id" -> "S10057200104", "Date" -> "2013-01-15", "Item_id" -> 
        82826, "Vendor_id" -> 65, "Vendor_Name" -> "Ayanami Brands", 
        "Store_id" -> 2614, "Store_Name" -> "Hy-Vee #3 Food and Drugstore", 
        "Address" -> "1823 E KIMBERLY RD", "City_Name" -> "DAVENPORT", 
        "Zip_Code" -> 52807, "County_id" -> 82, "County_Name" -> "Scott", 
        "Bottles_Sold" -> 2, "Item_Description" -> "Lucy's Craft Root Beer", 
        "Category" -> "Root Beer", "Pack" -> 12, "Bottle_Volume_ml" -> 750., 
        "Bottle_Cost" -> 2.39, "Bottle_Retail_Price" -> 3.58, "Purchase_Cost" -> 
        7.16, "Customer_id" -> 4677, "Product_Rating" -> "4/5"], 
       Association[
       "Invoice_id" -> "S10977100020", "Date" -> "2013-03-11", "Item_id" -> 
        76038, "Vendor_id" -> 384, "Vendor_Name" -> "Liebert LLC", "Store_id" -> 
        4568, "Store_Name" -> "Select Mart   Floyd Blvd", "Address" -> 
        "4103 FLOYD BLVD", "City_Name" -> "SIOUX CITY", "Zip_Code" -> 51108, 
        "County_id" -> 97, "County_Name" -> "Woodbury", "Bottles_Sold" -> 6, 
        "Item_Description" -> "Arataka's Ginger Soda", "Category" -> 
        "Ginger Ale", "Pack" -> 6, "Bottle_Volume_ml" -> 750., "Bottle_Cost" -> 
        2.97, "Bottle_Retail_Price" -> 4.46, "Purchase_Cost" -> 
        26.759999999999998`, "Customer_id" -> 6041, "Product_Rating" -> 
        "2/5"], 
       Association[
       "Invoice_id" -> "S11383100031", "Date" -> "2013-04-01", "Item_id" -> 
        15248, "Vendor_id" -> 65, "Vendor_Name" -> "Ayanami Brands", 
        "Store_id" -> 2623, "Store_Name" -> 
        "Hy-Vee Food Store #4 / Sioux City", "Address" -> 
        "2827 HAMILTON BLVD", "City_Name" -> "SIOUX CITY", "Zip_Code" -> 
        51104, "County_id" -> 97, "County_Name" -> "Woodbury", "Bottles_Sold" -> 
        12, "Item_Description" -> "Nagito's Watermelon Cream", "Category" -> 
        "Cream Soda", "Pack" -> 6, "Bottle_Volume_ml" -> 1750., "Bottle_Cost" -> 
        2.76, "Bottle_Retail_Price" -> 4.14, "Purchase_Cost" -> 
        49.67999999999999, "Customer_id" -> 5783, "Product_Rating" -> "2/5"], 
       Association[
       "Invoice_id" -> "S27327700054", "Date" -> "2015-08-19", "Item_id" -> 
        43128, "Vendor_id" -> 35, "Vendor_Name" -> "Archer Inc.", "Store_id" -> 
        3776, "Store_Name" -> "Wal-Mart 5115 / Davenport", "Address" -> 
        "3101 WEST KIMBERLY RD", "City_Name" -> "DAVENPORT", "Zip_Code" -> 
        52806, "County_id" -> 82, "County_Name" -> "Scott", "Bottles_Sold" -> 
        6, "Item_Description" -> "Alucard's Energy Booster", "Category" -> 
        "Energy Drink", "Pack" -> 6, "Bottle_Volume_ml" -> 1750., 
        "Bottle_Cost" -> 3.57, "Bottle_Retail_Price" -> 5.35, "Purchase_Cost" -> 
        32.099999999999994`, "Customer_id" -> 1269, "Product_Rating" -> 
        "5/5"]}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Invoice_id"} -> 1, {All, "Date"} -> 
        1, {All, "Item_id"} -> 1, {All, "Vendor_id"} -> 
        1, {All, "Vendor_Name"} -> 1, {All, "Store_id"} -> 
        1, {All, "Store_Name"} -> 1, {All, "Address"} -> 
        1, {All, "City_Name"} -> 1, {All, "Zip_Code"} -> 
        1, {All, "County_id"} -> 1, {All, "County_Name"} -> 
        1, {All, "Bottles_Sold"} -> 1, {All, "Item_Description"} -> 
        1, {All, "Category"} -> 1, {All, "Pack"} -> 
        1, {All, "Bottle_Volume_ml"} -> 1, {All, "Bottle_Cost"} -> 
        1, {All, "Bottle_Retail_Price"} -> 1, {All, "Purchase_Cost"} -> 
        1, {All, "Customer_id"} -> 1, {All, "Product_Rating"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Invoice_id" -> 
            TypeSystem`PackageScope`AtomShape[115.20000000000002`], "Date" -> 
            TypeSystem`PackageScope`AtomShape[96.00000000000001], "Item_id" -> 
            TypeSystem`PackageScope`AtomShape[34], "Vendor_id" -> 
            TypeSystem`PackageScope`AtomShape[34], "Vendor_Name" -> 
            TypeSystem`PackageScope`AtomShape[134.40000000000003`], 
            "Store_id" -> TypeSystem`PackageScope`AtomShape[34], "Store_Name" -> 
            TypeSystem`PackageScope`AtomShape[316.80000000000007`], "Address" -> 
            TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
            "City_Name" -> TypeSystem`PackageScope`AtomShape[90.], "Zip_Code" -> 
            TypeSystem`PackageScope`AtomShape[34], "County_id" -> 
            TypeSystem`PackageScope`AtomShape[34], "County_Name" -> 
            TypeSystem`PackageScope`AtomShape[72.], "Bottles_Sold" -> 
            TypeSystem`PackageScope`AtomShape[34], "Item_Description" -> 
            TypeSystem`PackageScope`AtomShape[240.00000000000003`], 
            "Category" -> 
            TypeSystem`PackageScope`AtomShape[115.20000000000002`], "Pack" -> 
            TypeSystem`PackageScope`AtomShape[34], "Bottle_Volume_ml" -> 
            TypeSystem`PackageScope`AtomShape[60], "Bottle_Cost" -> 
            TypeSystem`PackageScope`AtomShape[60], "Bottle_Retail_Price" -> 
            TypeSystem`PackageScope`AtomShape[60], "Purchase_Cost" -> 
            TypeSystem`PackageScope`AtomShape[60], "Customer_id" -> 
            TypeSystem`PackageScope`AtomShape[34], "Product_Rating" -> 
            TypeSystem`PackageScope`AtomShape[27.]]], 
          DirectedInfinity[1], 10, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Invoice_id", "Date", "Item_id", "Vendor_id", "Vendor_Name", 
         "Store_id", "Store_Name", "Address", "City_Name", "Zip_Code", 
         "County_id", "County_Name", "Bottles_Sold", "Item_Description", 
         "Category", "Pack", "Bottle_Volume_ml", "Bottle_Cost", 
         "Bottle_Retail_Price", "Purchase_Cost", "Customer_id", 
         "Product_Rating"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["DAVENPORT", "SIOUX CITY"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Scott", "Woodbury"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["2/5", "4/5", "5/5"]]}], 5], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Invoice_id"} -> 1, {All, "Date"} -> 
        1, {All, "Item_id"} -> 1, {All, "Vendor_id"} -> 
        1, {All, "Vendor_Name"} -> 1, {All, "Store_id"} -> 
        1, {All, "Store_Name"} -> 1, {All, "Address"} -> 
        1, {All, "City_Name"} -> 1, {All, "Zip_Code"} -> 
        1, {All, "County_id"} -> 1, {All, "County_Name"} -> 
        1, {All, "Bottles_Sold"} -> 1, {All, "Item_Description"} -> 
        1, {All, "Category"} -> 1, {All, "Pack"} -> 
        1, {All, "Bottle_Volume_ml"} -> 1, {All, "Bottle_Cost"} -> 
        1, {All, "Bottle_Retail_Price"} -> 1, {All, "Purchase_Cost"} -> 
        1, {All, "Customer_id"} -> 1, {All, "Product_Rating"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Invoice_id" -> 
            TypeSystem`PackageScope`AtomShape[115.20000000000002`], "Date" -> 
            TypeSystem`PackageScope`AtomShape[96.00000000000001], "Item_id" -> 
            TypeSystem`PackageScope`AtomShape[34], "Vendor_id" -> 
            TypeSystem`PackageScope`AtomShape[34], "Vendor_Name" -> 
            TypeSystem`PackageScope`AtomShape[134.40000000000003`], 
            "Store_id" -> TypeSystem`PackageScope`AtomShape[34], "Store_Name" -> 
            TypeSystem`PackageScope`AtomShape[316.80000000000007`], "Address" -> 
            TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
            "City_Name" -> TypeSystem`PackageScope`AtomShape[90.], "Zip_Code" -> 
            TypeSystem`PackageScope`AtomShape[34], "County_id" -> 
            TypeSystem`PackageScope`AtomShape[34], "County_Name" -> 
            TypeSystem`PackageScope`AtomShape[72.], "Bottles_Sold" -> 
            TypeSystem`PackageScope`AtomShape[34], "Item_Description" -> 
            TypeSystem`PackageScope`AtomShape[240.00000000000003`], 
            "Category" -> 
            TypeSystem`PackageScope`AtomShape[115.20000000000002`], "Pack" -> 
            TypeSystem`PackageScope`AtomShape[34], "Bottle_Volume_ml" -> 
            TypeSystem`PackageScope`AtomShape[60], "Bottle_Cost" -> 
            TypeSystem`PackageScope`AtomShape[60], "Bottle_Retail_Price" -> 
            TypeSystem`PackageScope`AtomShape[60], "Purchase_Cost" -> 
            TypeSystem`PackageScope`AtomShape[60], "Customer_id" -> 
            TypeSystem`PackageScope`AtomShape[34], "Product_Rating" -> 
            TypeSystem`PackageScope`AtomShape[27.]]], 
          DirectedInfinity[1], 10, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Invoice_id", "Date", "Item_id", "Vendor_id", "Vendor_Name", 
         "Store_id", "Store_Name", "Address", "City_Name", "Zip_Code", 
         "County_id", "County_Name", "Bottles_Sold", "Item_Description", 
         "Category", "Pack", "Bottle_Volume_ml", "Bottle_Cost", 
         "Bottle_Retail_Price", "Purchase_Cost", "Customer_id", 
         "Product_Rating"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["DAVENPORT", "SIOUX CITY"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Scott", "Woodbury"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["2/5", "4/5", "5/5"]]}], 5], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 5, "DisplayedColumnCount" -> 
     10, "DataRowCount" -> 5, "DataColumnCount" -> 22, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 13, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottles_Sold", 
                  Style[
                  "Bottles_Sold", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Bottles_Sold"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Bottles_Sold"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Item_Description", 
                  Style[
                  "Item_Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Item_Description"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Item_Description"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Category", 
                  Style[
                  "Category", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Category"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Category"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Pack", 
                  Style[
                  "Pack", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Pack"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Pack"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Volume_ml", 
                  Style[
                  "Bottle_Volume_ml", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Bottle_Volume_ml"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Bottle_Volume_ml"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Cost", 
                  Style[
                  "Bottle_Cost", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Bottle_Cost"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Bottle_Cost"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bottle_Retail_Price", 
                  Style[
                  "Bottle_Retail_Price", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Bottle_Retail_Price"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Bottle_Retail_Price"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Purchase_Cost", 
                  Style[
                  "Purchase_Cost", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Purchase_Cost"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Purchase_Cost"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Customer_id", 
                  Style[
                  "Customer_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Customer_id"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Customer_id"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Product_Rating", 
                  Style[
                  "Product_Rating", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Product_Rating"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Product_Rating"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Bottles_Sold"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Arataka's Cream Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cream Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Category"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Pack"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Bottle_Volume_ml"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Bottle_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Bottle_Retail_Price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Purchase_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2340"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5/5", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Product_Rating"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Bottles_Sold"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Lucy's Craft Root Beer", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Root Beer", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Category"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Pack"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["750.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Bottle_Volume_ml"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Bottle_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.58"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Bottle_Retail_Price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Purchase_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4677"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Customer_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4/5", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Product_Rating"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Bottles_Sold"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Arataka's Ginger Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ginger Ale", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Category"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Pack"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["750.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Bottle_Volume_ml"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Bottle_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.46"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Bottle_Retail_Price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26.76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Purchase_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6041"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Customer_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2/5", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Product_Rating"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Bottles_Sold"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Nagito's Watermelon Cream", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cream Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Category"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Pack"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1750.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Bottle_Volume_ml"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Bottle_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Bottle_Retail_Price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["49.68"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Purchase_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5783"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Customer_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2/5", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Product_Rating"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Bottles_Sold"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alucard's Energy Booster", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Energy Drink", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Category"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Pack"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1750.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Bottle_Volume_ml"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.57"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Bottle_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Bottle_Retail_Price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Purchase_Cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1269"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Customer_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5/5", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Product_Rating"]}, "Item", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 22, 1], {1, 22 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 22, 1], {1, 22 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 13, "\[Dash]", 22, " of ", 
                    Style[
                    22, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 13, "\[Dash]", 22, " of ", 
                    Style[
                    22, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 22, 1], {1, 22 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 22, 1], {1, 22 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{762., {106.5, 112.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{762., {106.5, 112.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.826932072887925*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"ef1e0cc8-e189-4f7a-93e3-3bd0afe25459"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We then picked up from this merged table the properties that would be \
interesting to feed to the automatic suggestion\
\>", "Item",
 CellChangeTimes->{{3.82693209221412*^9, 
  3.826932122296327*^9}},ExpressionUUID->"0ae9c72e-cb11-4791-ab46-\
a2efdc400c7e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"forTrainerWithInts", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.8269321540917406`*^9, 3.826932167773139*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"a4ae59d4-395b-4bfb-a86b-6d5e16a8bafe"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Customer_id" -> 9047, "Product_Rating" -> 4, "Item_id" -> 64911, 
        "Item_Description" -> "Yoshiko's Family Secret Black Cherry"], 
       Association[
       "Customer_id" -> 6500, "Product_Rating" -> 1, "Item_id" -> 43028, 
        "Item_Description" -> "Koyomi's Energy Booster"], 
       Association[
       "Customer_id" -> 3161, "Product_Rating" -> 2, "Item_id" -> 43501, 
        "Item_Description" -> "Johan's Energy Booster"], 
       Association[
       "Customer_id" -> 4316, "Product_Rating" -> 2, "Item_id" -> 19066, 
        "Item_Description" -> "Haruko's Vanilla Cream Soda"], 
       Association[
       "Customer_id" -> 2490, "Product_Rating" -> 1, "Item_id" -> 43336, 
        "Item_Description" -> "Langley's Energy Booster"]}, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Customer_id"} -> 1, {All, "Product_Rating"} -> 
        1, {All, "Item_id"} -> 1, {All, "Item_Description"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Customer_id" -> TypeSystem`PackageScope`AtomShape[34], 
            "Product_Rating" -> TypeSystem`PackageScope`AtomShape[34], 
            "Item_id" -> TypeSystem`PackageScope`AtomShape[34], 
            "Item_Description" -> TypeSystem`PackageScope`AtomShape[345.6]]], 
          DirectedInfinity[1], 4, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Customer_id", "Product_Rating", "Item_id", "Item_Description"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String]}], 5], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Customer_id"} -> 1, {All, "Product_Rating"} -> 
        1, {All, "Item_id"} -> 1, {All, "Item_Description"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Customer_id" -> TypeSystem`PackageScope`AtomShape[34], 
            "Product_Rating" -> TypeSystem`PackageScope`AtomShape[34], 
            "Item_id" -> TypeSystem`PackageScope`AtomShape[34], 
            "Item_Description" -> TypeSystem`PackageScope`AtomShape[345.6]]], 
          DirectedInfinity[1], 4, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Customer_id", "Product_Rating", "Item_id", "Item_Description"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String]}], 5], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 5, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     5, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Customer_id", 
                  Style[
                  "Customer_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Customer_id"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Customer_id"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Product_Rating", 
                  Style[
                  "Product_Rating", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Product_Rating"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Product_Rating"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Item_id", 
                  Style[
                  "Item_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Item_id"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Item_id"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Item_Description", 
                  Style[
                  "Item_Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Item_Description"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Item_Description"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9047"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Product_Rating"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["64911"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Item_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Yoshiko's Family Secret Black Cherry", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{345.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6500"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Customer_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Product_Rating"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["43028"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Item_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Koyomi's Energy Booster", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{345.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3161"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Customer_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Product_Rating"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["43501"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Item_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Johan's Energy Booster", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{345.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4316"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Customer_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Product_Rating"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19066"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Item_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Haruko's Vanilla Cream Soda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{345.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2490"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Customer_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Product_Rating"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["43336"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Item_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Langley's Energy Booster", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Item_Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{345.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{
                   TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{524., {87., 93.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{524., {87., 93.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.82693216814919*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"f339e1c9-68bd-431b-9947-f79926f90716"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Interestingly a bit of analysis on this table showed that most ratings \
appeared uniformly accross the board\
\>", "Item",
 CellChangeTimes->{{3.8269321761294193`*^9, 3.826932189244132*^9}, {
  3.8269378889310718`*^9, 
  3.8269379159920077`*^9}},ExpressionUUID->"b89ea891-07f7-4ee2-816d-\
330eab70749f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"forTrainerWithInts", "[", 
  RowBox[{"Histogram", ",", "\"\<Product_Rating\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8269313650936203`*^9, 3.8269314076453934`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"e0ee7e93-f1e3-440d-a5ab-2c0ba598aec3"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.651], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 10120.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{35.76491192954363, 
           90.16403122497998}, {-86.60251849003333, 75.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 10120]& ,
        TagBoxNote->"10120"],
       StyleBox["10120", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10120, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.5, 0}, {2.5, 10025.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{89.66403122497998, 
           144.06315052041631`}, {-85.08784563859527, 75.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 10025]& ,
        TagBoxNote->"10025"],
       StyleBox["10025", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10025, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.5, 0}, {3.5, 9922.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{143.56315052041631`, 
           197.9622698158527}, {-83.44562138914137, 75.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 9922]& ,
        TagBoxNote->"9922"],
       StyleBox["9922", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9922, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.5, 0}, {4.5, 10064.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{197.4622698158527, 
           251.86138911128901`}, {-85.70965870392246, 75.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 10064]& ,
        TagBoxNote->"10064"],
       StyleBox["10064", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10064, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.5, 0}, {5.5, 9869.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{251.36138911128901`, 
           305.7605084067254}, {-82.60059337728646, 75.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 9869]& ,
        TagBoxNote->"9869"],
       StyleBox["9869", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9869, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0.5, 5.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8269313824398336`*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"d449bd0a-adb5-40ac-9631-d48e6f80eda9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
But when we divided it by taking the average of the ratings for each product \
we got a more interesting spread\
\>", "Item",
 CellChangeTimes->{{3.826937920196897*^9, 
  3.826937945779184*^9}},ExpressionUUID->"bd5a49cf-7555-4774-914b-\
d0937bbbea3a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"avgRatings", "[", 
  RowBox[{"Histogram", ",", "\"\<Product_Rating\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8269331208384705`*^9, 3.8269331365349846`*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"8e6f4461-02b0-4366-baa3-c32d20ad7b59"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5389999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5389999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0}, {1.2, 117.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{24.118094475580456`, 37.99450989362918}, {
           45.881742963037794`, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 117]& ,
        TagBoxNote->"117"],
       StyleBox["117", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[117, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.2, 0}, {1.4, 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{37.49450989362918, 51.3709253116779}, {
           78.5921108705312, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.4, 0}, {1.6, 20.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{50.8709253116779, 64.74734072972663}, {
           73.96055435265603, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 20]& ,
        TagBoxNote->"20"],
       StyleBox["20", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[20, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.6, 0}, {1.8, 15.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{64.24734072972663, 78.12375614777537}, {
           75.40791576449203, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 15]& ,
        TagBoxNote->"15"],
       StyleBox["15", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[15, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.8, 0}, {2., 7.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{77.62375614777537, 91.50017156582408}, {
           77.72369402342962, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2., 0}, {2.2, 173.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{91.00017156582408, 104.87658698387281`}, {
           29.671295150474684`, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 173]& ,
        TagBoxNote->"173"],
       StyleBox["173", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[173, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.2, 0}, {2.4, 60.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{104.37658698387281`, 118.25300240192152`}, {
           62.3816630579681, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 60]& ,
        TagBoxNote->"60"],
       StyleBox["60", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[60, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.4, 0}, {2.6, 149.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{117.75300240192152`, 131.62941781997026`}, {
           36.618629927287444`, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 149]& ,
        TagBoxNote->"149"],
       StyleBox["149", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[149, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.6, 0}, {2.8, 248.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{131.12941781997026`, 145.00583323801897`}, {
           7.960873972934806, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 248]& ,
        TagBoxNote->"248"],
       StyleBox["248", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[248, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.8, 0}, {3., 314.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{144.50583323801897`, 
           158.3822486560677}, {-11.144296663300281`, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 314]& ,
        TagBoxNote->"314"],
       StyleBox["314", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[314, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3., 0}, {3.2, 581.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{157.8822486560677, 
           171.75866407411644`}, {-88.43339605534223, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 581]& ,
        TagBoxNote->"581"],
       StyleBox["581", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[581, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.2, 0}, {3.4, 214.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{171.25866407411644`, 185.13507949216515`}, {
           17.80293157341955, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 214]& ,
        TagBoxNote->"214"],
       StyleBox["214", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[214, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.4, 0}, {3.6, 144.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{184.63507949216515`, 198.51149491021388`}, {
           38.065991339123435`, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 144]& ,
        TagBoxNote->"144"],
       StyleBox["144", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[144, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.6, 0}, {3.8, 74.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{198.01149491021388`, 211.8879103282626}, {
           58.32905110482732, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 74]& ,
        TagBoxNote->"74"],
       StyleBox["74", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[74, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.8, 0}, {4., 14.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{211.3879103282626, 225.26432574631133`}, {
           75.69738804685922, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 14]& ,
        TagBoxNote->"14"],
       StyleBox["14", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[14, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4., 0}, {4.2, 191.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{224.76432574631133`, 238.64074116436007`}, {
           24.460794067865116`, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 191]& ,
        TagBoxNote->"191"],
       StyleBox["191", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[191, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.2, 0}, {4.4, 16.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{238.14074116436007`, 252.0171565824088}, {
           75.11844348212483, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 16]& ,
        TagBoxNote->"16"],
       StyleBox["16", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.4, 0}, {4.6, 23.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{251.5171565824088, 265.3935720004575}, {
           73.09213750555443, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 23]& ,
        TagBoxNote->"23"],
       StyleBox["23", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[23, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.6, 0}, {4.8, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{264.8935720004575, 278.7699874185062}, {
           78.8815831528984, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0}, {5.2, 112.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{291.64640283655496`, 305.5228182546037}, {
           47.329104374873786`, 80.25}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 112]& ,
        TagBoxNote->"112"],
       StyleBox["112", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[112, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.916, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{1., 5.2}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8269331375133677`*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"62c47741-bcae-41c0-ab61-c200a56faf5d"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Overall there were 112 items with perfect rating (5)\[LineSeparator]And 117 \
products with terrible rating (1)\
\>", "Item",
 CellChangeTimes->{{3.8269379792099977`*^9, 3.8269379956175227`*^9}, {
  3.8269380257088757`*^9, 
  3.8269380269654827`*^9}},ExpressionUUID->"494b4ac9-b422-4c4d-b0c6-\
59352f47634a"],

Cell["\<\
THis should be taken with a grain of salt, as the Histogram suggests with the \
spikes at the integer numbers that many may have had just a single rating.\
\>", "Item",
 CellChangeTimes->{{3.8269379792099977`*^9, 
  3.8269380771054864`*^9}},ExpressionUUID->"d55a487e-9b52-4768-84b5-\
e086206e7253"]
}, Open  ]]
},
WindowSize->{471., 499.5},
WindowMargins->{{Automatic, -385.5}, {691.75, Automatic}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 7, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7261daae-a3b5-40b4-b42a-cd21c47d824f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 163, 3, 97, "Title",ExpressionUUID->"dc2a0d1b-8d55-4c34-9244-92b6f6c6171c"],
Cell[746, 27, 636, 12, 232, "Text",ExpressionUUID->"b88f761d-b22b-4fc3-9f57-b8f507275023"],
Cell[CellGroupData[{
Cell[1407, 43, 333, 5, 28, "Input",ExpressionUUID->"5f6fee1f-f7e4-43ef-aae8-bcfdb503d9e0"],
Cell[1743, 50, 65104, 1194, 535, "Output",ExpressionUUID->"114fe663-372f-45d3-b9b0-3235320d7cb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66884, 1249, 241, 6, 51, "Item",ExpressionUUID->"499f1ba1-e363-40a2-9ba5-247b85ab26d4"],
Cell[67128, 1257, 225, 5, 47, "Subitem",ExpressionUUID->"7ac2f1e9-6ad3-4874-a6d5-fbc3f6aace72"],
Cell[67356, 1264, 489, 9, 47, "Subitem",ExpressionUUID->"654bc648-90a5-4710-a05d-3a2effd92f01"],
Cell[67848, 1275, 371, 6, 27, "Subitem",ExpressionUUID->"16f7c545-09dd-4b05-854a-52c43068c829"],
Cell[68222, 1283, 484, 9, 67, "Subitem",ExpressionUUID->"a7b00fb1-c3b2-46be-bb6a-b51f45b4ff99"],
Cell[68709, 1294, 473, 8, 47, "Subitem",ExpressionUUID->"7c7d2814-cd4f-4d01-885f-fa5950626785"],
Cell[69185, 1304, 425, 6, 27, "Subitem",ExpressionUUID->"1e6dd63c-bfac-4090-b529-ee736ff9f2ba"],
Cell[69613, 1312, 469, 7, 27, "Subitem",ExpressionUUID->"6d6d5c5a-ff3a-49af-a0d9-850b7f70ebbd"]
}, Open  ]],
Cell[70097, 1322, 313, 7, 56, "Text",ExpressionUUID->"4be023f9-8515-43ca-9526-95e6de462d0a"],
Cell[70413, 1331, 268, 6, 47, "Subitem",ExpressionUUID->"e43427d7-6762-4f33-865a-271a9326fbf2"],
Cell[70684, 1339, 280, 6, 47, "Subitem",ExpressionUUID->"e12eea68-c072-42ee-b093-930f94d4e7e5"],
Cell[70967, 1347, 286, 7, 47, "Subitem",ExpressionUUID->"b4636e7e-aa39-47c7-80f4-aaf418d3fe11"],
Cell[71256, 1356, 378, 7, 67, "Subitem",ExpressionUUID->"081f636f-06aa-4aa9-8bb3-4f629c007f91"],
Cell[71637, 1365, 314, 7, 56, "Text",ExpressionUUID->"081e788b-aae8-478c-a4b1-f7bdc53ae95e"],
Cell[71954, 1374, 16576, 353, 406, "Output",ExpressionUUID->"511b14d5-4148-471c-b008-274cb571d922"],
Cell[88533, 1729, 237, 6, 56, "Text",ExpressionUUID->"6bb82be6-adab-4d6c-8577-406193eb393e"],
Cell[88773, 1737, 248, 6, 56, "Text",ExpressionUUID->"8d488787-c7f8-4267-8e4c-f08792e3b537"],
Cell[89024, 1745, 17762, 372, 358, "Output",ExpressionUUID->"73331e72-d682-4141-9e31-0a02ff7bc8bd"],
Cell[106789, 2119, 295, 6, 78, "Text",ExpressionUUID->"73ed8a45-d706-4215-b6f2-2d878fabe217"],
Cell[107087, 2127, 431, 8, 122, "Text",ExpressionUUID->"0e638148-9492-4d74-9884-2cb32fc40541"],
Cell[CellGroupData[{
Cell[107543, 2139, 276, 7, 47, "Subitem",ExpressionUUID->"1718b132-9ead-496f-a70a-409296b48564"],
Cell[107822, 2148, 16673, 289, 376, "Input",ExpressionUUID->"8323ed8a-6f2d-49d4-b6f1-c512ed206815"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124532, 2442, 246, 6, 47, "Subitem",ExpressionUUID->"e21c31b6-2a57-473d-a921-36c2dcae8407"],
Cell[124781, 2450, 18965, 331, 363, "Input",ExpressionUUID->"52736db6-d2fc-4406-892e-ed1d8ff3c10f"]
}, Open  ]],
Cell[143761, 2784, 165, 3, 34, "Text",ExpressionUUID->"2ff92404-1314-417e-a864-9cd4218c3cc9"],
Cell[CellGroupData[{
Cell[143951, 2791, 212, 3, 27, "Subitem",ExpressionUUID->"c8dd39a5-f200-435b-9ef5-669c5de0f20d"],
Cell[144166, 2796, 15576, 272, 328, "Input",ExpressionUUID->"d446d5d4-984d-41c6-911d-c3da1a56972e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159779, 3073, 225, 5, 51, "Item",ExpressionUUID->"c0d6c13f-e832-4fba-b20c-dcc6eb917b9d"],
Cell[CellGroupData[{
Cell[160029, 3082, 246, 5, 28, "Input",ExpressionUUID->"9f6ed7a8-510d-4da8-8193-0bf4b9350799"],
Cell[160278, 3089, 89629, 1689, 238, "Output",ExpressionUUID->"ef1e0cc8-e189-4f7a-93e3-3bd0afe25459"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[249956, 4784, 268, 6, 71, "Item",ExpressionUUID->"0ae9c72e-cb11-4791-ab46-a2efdc400c7e"],
Cell[CellGroupData[{
Cell[250249, 4794, 256, 5, 28, "Input",ExpressionUUID->"a4ae59d4-395b-4bfb-a86b-6d5e16a8bafe"],
Cell[250508, 4801, 39336, 729, 199, "Output",ExpressionUUID->"f339e1c9-68bd-431b-9947-f79926f90716"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[289893, 5536, 314, 7, 71, "Item",ExpressionUUID->"b89ea891-07f7-4ee2-816d-330eab70749f"],
Cell[CellGroupData[{
Cell[290232, 5547, 276, 5, 28, "Input",ExpressionUUID->"e0ee7e93-f1e3-440d-a5ab-2c0ba598aec3"],
Cell[290511, 5554, 4406, 129, 202, "Output",ExpressionUUID->"d449bd0a-adb5-40ac-9631-d48e6f80eda9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[294966, 5689, 261, 6, 71, "Item",ExpressionUUID->"bd5a49cf-7555-4774-914b-d0937bbbea3a"],
Cell[CellGroupData[{
Cell[295252, 5699, 268, 5, 28, "Input",ExpressionUUID->"8e6f4461-02b0-4366-baa3-c32d20ad7b59"],
Cell[295523, 5706, 14647, 445, 211, "Output",ExpressionUUID->"62c47741-bcae-41c0-ab61-c200a56faf5d"]
}, Open  ]]
}, Open  ]],
Cell[310197, 6155, 318, 7, 51, "Item",ExpressionUUID->"494b4ac9-b422-4c4d-b0c6-59352f47634a"],
Cell[310518, 6164, 308, 6, 71, "Item",ExpressionUUID->"d55a487e-9b52-4768-84b5-e086206e7253"]
}, Open  ]]
}
]
*)

